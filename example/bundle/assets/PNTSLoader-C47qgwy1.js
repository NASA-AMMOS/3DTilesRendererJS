import{L as m,r as G,F as x,B as R}from"./BatchTable-CRr3zuRk.js";import{m as g,V as M,M as V,aY as P,ai as F,ak as v,al as L,C as H,bD as Y}from"./three.module-DBfedTbk.js";class Q extends m{parse(c){const e=new DataView(c),t=G(e);console.assert(t==="pnts");const y=e.getUint32(4,!0);console.assert(y===1);const n=e.getUint32(8,!0);console.assert(n===c.byteLength);const T=e.getUint32(12,!0),b=e.getUint32(16,!0),s=e.getUint32(20,!0),p=e.getUint32(24,!0),N=28,o=c.slice(N,N+T+b),d=new x(o,0,T,b),u=N+T+b,E=c.slice(u,u+s+p),O=new R(E,d.getData("BATCH_LENGTH")||d.getData("POINTS_LENGTH"),0,s,p);return Promise.resolve({version:y,featureTable:d,batchTable:O})}}function Z(A){const c=A>>11,e=A>>5&63,t=A&31,y=Math.round(c/31*255),n=Math.round(e/63*255),T=Math.round(t/31*255);return[y,n,T]}const S=new M;function z(A,c,e=new g){S.set(A,c).divideScalar(256).multiplyScalar(2).subScalar(1),e.set(S.x,S.y,1-Math.abs(S.x)-Math.abs(S.y));const t=V.clamp(-e.z,0,1);return e.x>=0?e.setX(e.x-t):e.setX(e.x+t),e.y>=0?e.setY(e.y-t):e.setY(e.y+t),e.normalize(),e}const U={RGB:"color",POSITION:"position"};class J extends Q{constructor(c=P){super(),this.manager=c}parse(c){return super.parse(c).then(async e=>{const{featureTable:t,batchTable:y}=e,n=new F,T=t.header.extensions,b=new g;let s;if(T&&T["3DTILES_draco_point_compression"]){const{byteOffset:o,byteLength:d,properties:u}=T["3DTILES_draco_point_compression"],E=this.manager.getHandler("draco.drc");if(E==null)throw new Error("PNTSLoader: dracoLoader not available.");const O={};for(const l in u)if(l in U&&l in u){const B=U[l];O[B]=u[l]}const D={attributeIDs:O,attributeTypes:{position:"Float32Array",color:"Uint8Array"},useUniqueIDs:!0},_=t.getBuffer(o,d);s=await E.decodeGeometry(_,D),s.attributes.color&&(n.vertexColors=!0)}else{const o=t.getData("POINTS_LENGTH"),d=t.getData("POSITION",o,"FLOAT","VEC3"),u=t.getData("NORMAL",o,"FLOAT","VEC3"),E=t.getData("NORMAL",o,"UNSIGNED_BYTE","VEC2"),O=t.getData("RGB",o,"UNSIGNED_BYTE","VEC3"),D=t.getData("RGBA",o,"UNSIGNED_BYTE","VEC4"),_=t.getData("RGB565",o,"UNSIGNED_SHORT","SCALAR"),l=t.getData("CONSTANT_RGBA",o,"UNSIGNED_BYTE","VEC4"),B=t.getData("POSITION_QUANTIZED",o,"UNSIGNED_SHORT","VEC3"),w=t.getData("QUANTIZED_VOLUME_SCALE",o,"FLOAT","VEC3"),I=t.getData("QUANTIZED_VOLUME_OFFSET",o,"FLOAT","VEC3");if(s=new v,B){const i=new Float32Array(o*3);for(let r=0;r<o;r++)for(let a=0;a<3;a++){const f=3*r+a;i[f]=B[f]/65535*w[a]}b.x=I[0],b.y=I[1],b.z=I[2],s.setAttribute("position",new L(i,3,!1))}else s.setAttribute("position",new L(d,3,!1));if(u!==null)s.setAttribute("normal",new L(u,3,!1));else if(E!==null){const i=new Float32Array(o*3),r=new g;for(let a=0;a<o;a++){const f=E[a*2],C=E[a*2+1],h=z(f,C,r);i[a*3]=h.x,i[a*3+1]=h.y,i[a*3+2]=h.z}s.setAttribute("normal",new L(i,3,!1))}if(D!==null)s.setAttribute("color",new L(D,4,!0)),n.vertexColors=!0,n.transparent=!0,n.depthWrite=!1;else if(O!==null)s.setAttribute("color",new L(O,3,!0)),n.vertexColors=!0;else if(_!==null){const i=new Uint8Array(o*3);for(let r=0;r<o;r++){const a=Z(_[r]);for(let f=0;f<3;f++){const C=3*r+f;i[C]=a[f]}}s.setAttribute("color",new L(i,3,!0)),n.vertexColors=!0}else if(l!==null){const i=new H(l[0],l[1],l[2]);n.color=i;const r=l[3]/255;r<1&&(n.opacity=r,n.transparent=!0,n.depthWrite=!1)}}const p=new Y(s,n);p.position.copy(b),e.scene=p,e.scene.featureTable=t,e.scene.batchTable=y;const N=t.getData("RTC_CENTER",1,"FLOAT","VEC3");return N&&(e.scene.position.x+=N[0],e.scene.position.y+=N[1],e.scene.position.z+=N[2]),e})}}export{J as P};
//# sourceMappingURL=PNTSLoader-C47qgwy1.js.map
