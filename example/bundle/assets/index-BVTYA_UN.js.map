{"version":3,"file":"index-BVTYA_UN.js","sources":["../../../src/core/plugins/SUBTREELoader.js","../../../src/core/plugins/ImplicitTilingPlugin.js","../../src/controls/FlyOrbitControls.js","../../index.js"],"sourcesContent":["/**\n * Structure almost identical to Cesium, also the comments and the names are kept\n * https://github.com/CesiumGS/cesium/blob/0a69f67b393ba194eefb7254600811c4b712ddc0/packages/engine/Source/Scene/Implicit3DTileContent.js\n */\nimport { LoaderBase, LoaderUtils } from '3d-tiles-renderer/core';\n\nfunction isOctreeSubdivision( tile ) {\n\n\treturn tile.__implicitRoot.implicitTiling.subdivisionScheme === 'OCTREE';\n\n}\n\nfunction getBoundsDivider( tile ) {\n\n\treturn isOctreeSubdivision( tile ) ? 8 : 4;\n\n}\n\nfunction getSubtreeCoordinates( tile, parentTile ) {\n\n\tif ( ! parentTile ) {\n\n\t\treturn [ 0, 0, 0 ];\n\n\t}\n\tconst x = 2 * parentTile.__x + ( tile.__subtreeIdx % 2 );\n\tconst y = 2 * parentTile.__y + ( Math.floor( tile.__subtreeIdx / 2 ) % 2 );\n\tconst z = isOctreeSubdivision( tile ) ?\n\t\t2 * parentTile.__z + ( Math.floor( tile.__subtreeIdx / 4 ) % 2 ) : 0;\n\treturn [ x, y, z ];\n\n}\n\nclass SubtreeTile {\n\n\tconstructor( parentTile, childMortonIndex ) {\n\n\t\tthis.parent = parentTile;\n\t\tthis.children = [];\n\t\tthis.__level = parentTile.__level + 1;\n\t\tthis.__implicitRoot = parentTile.__implicitRoot;\n\t\t// Index inside the tree\n\t\tthis.__subtreeIdx = childMortonIndex;\n\t\t[ this.__x, this.__y, this.__z ] = getSubtreeCoordinates( this, parentTile );\n\n\t}\n\n\tstatic copy( tile ) {\n\n\t\tconst copyTile = {};\n\t\tcopyTile.children = [];\n\t\tcopyTile.__level = tile.__level;\n\t\tcopyTile.__implicitRoot = tile.__implicitRoot;\n\t\t// Index inside the tree\n\t\tcopyTile.__subtreeIdx = tile.__subtreeIdx;\n\t\t[ copyTile.__x, copyTile.__y, copyTile.__z ] = [ tile.__x, tile.__y, tile.__z ];\n\t\tcopyTile.boundingVolume = tile.boundingVolume;\n\t\tcopyTile.geometricError = tile.geometricError;\n\t\treturn copyTile;\n\n\t}\n\n}\n\nexport class SUBTREELoader extends LoaderBase {\n\n\tconstructor( tile ) {\n\n\t\tsuper();\n\t\tthis.tile = tile;\n\t\tthis.rootTile = tile.__implicitRoot;\t// The implicit root tile\n\t\tthis.workingPath = null;\n\n\t}\n\n\t/**\n\t * A helper object for storing the two parts of the subtree binary\n\t *\n\t * @typedef {object} Subtree\n\t * @property {number} version\n\t * @property {JSON} subtreeJson\n\t * @property {ArrayBuffer} subtreeByte\n\t * @private\n\t */\n\n\t/**\n\t *\n\t * @param buffer\n\t * @return {Subtree}\n\t */\n\tparseBuffer( buffer ) {\n\n\t\tconst dataView = new DataView( buffer );\n\t\tlet offset = 0;\n\t\t// 16-byte header\n\t\t// 4 bytes\n\t\tconst magic = LoaderUtils.readMagicBytes( dataView );\n\t\tconsole.assert( magic === 'subt', 'SUBTREELoader: The magic bytes equal \"subt\".' );\n\t\toffset += 4;\n\t\t// 4 bytes\n\t\tconst version = dataView.getUint32( offset, true );\n\t\tconsole.assert( version === 1, 'SUBTREELoader: The version listed in the header is \"1\".' );\n\t\toffset += 4;\n\t\t// From Cesium\n\t\t// Read the bottom 32 bits of the 64-bit byte length.\n\t\t// This is ok for now because:\n\t\t// 1) not all browsers have native 64-bit operations\n\t\t// 2) the data is well under 4GB\n\t\t// 8 bytes\n\t\tconst jsonLength = dataView.getUint32( offset, true );\n\t\toffset += 8;\n\t\t// 8 bytes\n\t\tconst byteLength = dataView.getUint32( offset, true );\n\t\toffset += 8;\n\t\tconst subtreeJson = JSON.parse( LoaderUtils.arrayToString( new Uint8Array( buffer, offset, jsonLength ) ) );\n\t\toffset += jsonLength;\n\t\tconst subtreeByte = buffer.slice( offset, offset + byteLength );\n\t\treturn {\n\t\t\tversion,\n\t\t\tsubtreeJson,\n\t\t\tsubtreeByte\n\t\t};\n\n\t}\n\n\n\tasync parse( buffer ) {\n\n\t\t// todo here : handle json\n\t\tconst subtree = this.parseBuffer( buffer );\n\t\tconst subtreeJson = subtree.subtreeJson;\n\n\t\t// TODO Handle metadata\n\t\t/*\n\t\t const subtreeMetadata = subtreeJson.subtreeMetadata;\n\t\t subtree._metadata = subtreeMetadata;\n\t\t*/\n\n\t\t/*\n\t\t\tTile availability indicates which tiles exist within the subtree\n\t\t\tContent availability indicates which tiles have associated content resources\n\t\t\tChild subtree availability indicates what subtrees are reachable from this subtree\n\t\t*/\n\n\t\t// After identifying how availability is stored, put the results in this new array for consistent processing later\n\t\tsubtreeJson.contentAvailabilityHeaders = [].concat( subtreeJson.contentAvailability );\n\t\tconst bufferHeaders = this.preprocessBuffers( subtreeJson.buffers );\n\t\tconst bufferViewHeaders = this.preprocessBufferViews(\n\t\t\tsubtreeJson.bufferViews,\n\t\t\tbufferHeaders\n\t\t);\n\n\t\t// Buffers and buffer views are inactive until explicitly marked active.\n\t\t// This way we can avoid fetching buffers that will not be used.\n\t\tthis.markActiveBufferViews( subtreeJson, bufferViewHeaders );\n\n\t\t// Await the active buffers. If a buffer is external (isExternal === true),\n\t\t// fetch it from its URI.\n\t\tconst buffersU8 = await this.requestActiveBuffers(\n\t\t\tbufferHeaders,\n\t\t\tsubtree.subtreeByte\n\t\t);\n\t\tconst bufferViewsU8 = this.parseActiveBufferViews( bufferViewHeaders, buffersU8 );\n\t\tthis.parseAvailability( subtree, subtreeJson, bufferViewsU8 );\n\t\tthis.expandSubtree( this.tile, subtree );\n\n\t}\n\n\t/**\n\t * Determine which buffer views need to be loaded into memory. This includes:\n\t *\n\t * <ul>\n\t * <li>The tile availability bitstream (if a bitstream is defined)</li>\n\t * <li>The content availability bitstream(s) (if a bitstream is defined)</li>\n\t * <li>The child subtree availability bitstream (if a bitstream is defined)</li>\n\t * </ul>\n\t *\n\t * <p>\n\t * This function modifies the buffer view headers' isActive flags in place.\n\t * </p>\n\t *\n\t * @param {JSON} subtreeJson The JSON chunk from the subtree\n\t * @param {BufferViewHeader[]} bufferViewHeaders The preprocessed buffer view headers\n\t * @private\n\t */\n\tmarkActiveBufferViews( subtreeJson, bufferViewHeaders ) {\n\n\t\tlet header;\n\t\tconst tileAvailabilityHeader = subtreeJson.tileAvailability;\n\t\t// Check for bitstream first, which is part of the current schema.\n\t\t// bufferView is the name of the bitstream from an older schema.\n\t\tif ( ! isNaN( tileAvailabilityHeader.bitstream ) ) {\n\n\t\t\theader = bufferViewHeaders[ tileAvailabilityHeader.bitstream ];\n\n\t\t} else if ( ! isNaN( tileAvailabilityHeader.bufferView ) ) {\n\n\t\t\theader = bufferViewHeaders[ tileAvailabilityHeader.bufferView ];\n\n\t\t}\n\t\tif ( header ) {\n\n\t\t\theader.isActive = true;\n\t\t\theader.bufferHeader.isActive = true;\n\n\t\t}\n\t\tconst contentAvailabilityHeaders = subtreeJson.contentAvailabilityHeaders;\n\t\tfor ( let i = 0; i < contentAvailabilityHeaders.length; i ++ ) {\n\n\t\t\theader = undefined;\n\t\t\tif ( ! isNaN( contentAvailabilityHeaders[ i ].bitstream ) ) {\n\n\t\t\t\theader = bufferViewHeaders[ contentAvailabilityHeaders[ i ].bitstream ];\n\n\t\t\t} else if ( ! isNaN( contentAvailabilityHeaders[ i ].bufferView ) ) {\n\n\t\t\t\theader = bufferViewHeaders[ contentAvailabilityHeaders[ i ].bufferView ];\n\n\t\t\t}\n\t\t\tif ( header ) {\n\n\t\t\t\theader.isActive = true;\n\t\t\t\theader.bufferHeader.isActive = true;\n\n\t\t\t}\n\n\t\t}\n\t\theader = undefined;\n\t\tconst childSubtreeAvailabilityHeader = subtreeJson.childSubtreeAvailability;\n\t\tif ( ! isNaN( childSubtreeAvailabilityHeader.bitstream ) ) {\n\n\t\t\theader = bufferViewHeaders[ childSubtreeAvailabilityHeader.bitstream ];\n\n\t\t} else if ( ! isNaN( childSubtreeAvailabilityHeader.bufferView ) ) {\n\n\t\t\theader = bufferViewHeaders[ childSubtreeAvailabilityHeader.bufferView ];\n\n\t\t}\n\t\tif ( header ) {\n\n\t\t\theader.isActive = true;\n\t\t\theader.bufferHeader.isActive = true;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Go through the list of buffers and gather all the active ones into\n\t * a dictionary.\n\t * <p>\n\t * The results are put into a dictionary object. The keys are indices of\n\t * buffers, and the values are Uint8Arrays of the contents. Only buffers\n\t * marked with the isActive flag are fetched.\n\t * </p>\n\t * <p>\n\t * The internal buffer (the subtree's binary chunk) is also stored in this\n\t * dictionary if it is marked active.\n\t * </p>\n\t * @param {BufferHeader[]} bufferHeaders The preprocessed buffer headers\n\t * @param {ArrayBuffer} internalBuffer The binary chunk of the subtree file\n\t * @returns {object} buffersU8 A dictionary of buffer index to a Uint8Array of its contents.\n\t * @private\n\t */\n\tasync requestActiveBuffers( bufferHeaders, internalBuffer ) {\n\n\t\tconst promises = [];\n\t\tfor ( let i = 0; i < bufferHeaders.length; i ++ ) {\n\n\t\t\tconst bufferHeader = bufferHeaders[ i ];\n\t\t\t// If the buffer is not active, resolve with undefined.\n\t\t\tif ( ! bufferHeader.isActive ) {\n\n\t\t\t\tpromises.push( Promise.resolve( ) );\n\n\t\t\t} else if ( bufferHeader.isExternal ) {\n\n\t\t\t\t// Get the absolute URI of the external buffer.\n\t\t\t\tconst url = this.parseImplicitURIBuffer(\n\t\t\t\t\tthis.tile,\n\t\t\t\t\tthis.rootTile.implicitTiling.subtrees.uri,\n\t\t\t\t\tbufferHeader.uri\n\t\t\t\t);\n\n\t\t\t\tconst fetchPromise = fetch( url, this.fetchOptions )\n\t\t\t\t\t.then( response => {\n\n\t\t\t\t\t\tif ( ! response.ok ) {\n\n\t\t\t\t\t\t\tthrow new Error( `SUBTREELoader: Failed to load external buffer from ${ bufferHeader.uri } with error code ${ response.status }.` );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\t} )\n\t\t\t\t\t.then( arrayBuffer => new Uint8Array( arrayBuffer ) );\n\n\t\t\t\tpromises.push( fetchPromise );\n\n\t\t\t} else {\n\n\t\t\t\tpromises.push( Promise.resolve( new Uint8Array( internalBuffer ) ) );\n\n\t\t\t}\n\n\t\t}\n\t\tconst bufferResults = await Promise.all( promises );\n\t\tconst buffersU8 = {};\n\t\tfor ( let i = 0; i < bufferResults.length; i ++ ) {\n\n\t\t\tconst result = bufferResults[ i ];\n\t\t\tif ( result ) {\n\n\t\t\t\tbuffersU8[ i ] = result;\n\n\t\t\t}\n\n\t\t}\n\t\treturn buffersU8;\n\n\t}\n\n\t/**\n\t * Go through the list of buffer views, and if they are marked as active,\n\t * extract a subarray from one of the active buffers.\n\t *\n\t * @param {BufferViewHeader[]} bufferViewHeaders\n\t * @param {object} buffersU8 A dictionary of buffer index to a Uint8Array of its contents.\n\t * @returns {object} A dictionary of buffer view index to a Uint8Array of its contents.\n\t * @private\n\t */\n\tparseActiveBufferViews( bufferViewHeaders, buffersU8 ) {\n\n\t\tconst bufferViewsU8 = {};\n\t\tfor ( let i = 0; i < bufferViewHeaders.length; i ++ ) {\n\n\t\t\tconst bufferViewHeader = bufferViewHeaders[ i ];\n\t\t\tif ( ! bufferViewHeader.isActive ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\t\t\tconst start = bufferViewHeader.byteOffset;\n\t\t\tconst end = start + bufferViewHeader.byteLength;\n\t\t\tconst buffer = buffersU8[ bufferViewHeader.buffer ];\n\t\t\tbufferViewsU8[ i ] = buffer.slice( start, end );\n\n\t\t}\n\t\treturn bufferViewsU8;\n\n\t}\n\n\t/**\n\t * A buffer header is the JSON header from the subtree JSON chunk plus\n\t * a couple extra boolean flags for easy reference.\n\t *\n\t * Buffers are assumed inactive until explicitly marked active. This is used\n\t * to avoid fetching unneeded buffers.\n\t *\n\t * @typedef {object} BufferHeader\n\t * @property {boolean} isActive Whether this buffer is currently used.\n\t * @property {string} [uri] The URI of the buffer (external buffers only)\n\t * @property {number} byteLength The byte length of the buffer, including any padding contained within.\n\t * @private\n\t */\n\n\t/**\n\t * Iterate over the list of buffers from the subtree JSON and add the isActive field for easier parsing later.\n\t * This modifies the objects in place.\n\t * @param {Object[]} [bufferHeaders=[]] The JSON from subtreeJson.buffers.\n\t * @returns {BufferHeader[]} The same array of headers with additional fields.\n\t * @private\n\t */\n\tpreprocessBuffers( bufferHeaders = [] ) {\n\n\t\tfor ( let i = 0; i < bufferHeaders.length; i ++ ) {\n\n\t\t\tconst bufferHeader = bufferHeaders[ i ];\n\t\t\tbufferHeader.isActive = false;\n\t\t\tbufferHeader.isExternal = !! bufferHeader.uri;\n\n\t\t}\n\t\treturn bufferHeaders;\n\n\t}\n\n\t/**\n\t * A buffer view header is the JSON header from the subtree JSON chunk plus\n\t * the isActive flag and a reference to the header for the underlying buffer.\n\t *\n\t * @typedef {object} BufferViewHeader\n\t * @property {BufferHeader} bufferHeader A reference to the header for the underlying buffer\n\t * @property {boolean} isActive Whether this bufferView is currently used.\n\t * @property {number} buffer The index of the underlying buffer.\n\t * @property {number} byteOffset The start byte of the bufferView within the buffer.\n\t * @property {number} byteLength The length of the bufferView. No padding is included in this length.\n\t * @private\n\t */\n\n\t/**\n\t * Iterate the list of buffer views from the subtree JSON and add the\n\t * isActive flag. Also save a reference to the bufferHeader.\n\t *\n\t * @param {Object[]} [bufferViewHeaders=[]] The JSON from subtree.bufferViews.\n\t * @param {BufferHeader[]} bufferHeaders The preprocessed buffer headers.\n\t * @returns {BufferViewHeader[]} The same array of bufferView headers with additional fields.\n\t * @private\n\t */\n\tpreprocessBufferViews( bufferViewHeaders = [], bufferHeaders ) {\n\n\t\tfor ( let i = 0; i < bufferViewHeaders.length; i ++ ) {\n\n\t\t\tconst bufferViewHeader = bufferViewHeaders[ i ];\n\t\t\tbufferViewHeader.bufferHeader = bufferHeaders[ bufferViewHeader.buffer ];\n\t\t\tbufferViewHeader.isActive = false;\n\t\t\t// Keep the external flag for potential use in requestActiveBuffers\n\t\t\tbufferViewHeader.isExternal = bufferViewHeader.bufferHeader.isExternal;\n\n\t\t}\n\t\treturn bufferViewHeaders;\n\n\t}\n\n\t/**\n\t * Parse the three availability bitstreams and store them in the subtree.\n\t *\n\t * @param {Subtree} subtree The subtree to modify.\n\t * @param {Object} subtreeJson The subtree JSON.\n\t * @param {Object} bufferViewsU8 A dictionary of buffer view index to a Uint8Array of its contents.\n\t * @private\n\t */\n\tparseAvailability( subtree, subtreeJson, bufferViewsU8 ) {\n\n\t\tconst branchingFactor = getBoundsDivider( this.rootTile );\n\t\tconst subtreeLevels = this.rootTile.implicitTiling.subtreeLevels;\n\t\tconst tileAvailabilityBits =\n\t\t\t( Math.pow( branchingFactor, subtreeLevels ) - 1 ) / ( branchingFactor - 1 );\n\t\tconst childSubtreeBits = Math.pow( branchingFactor, subtreeLevels );\n\t\tsubtree._tileAvailability = this.parseAvailabilityBitstream(\n\t\t\tsubtreeJson.tileAvailability,\n\t\t\tbufferViewsU8,\n\t\t\ttileAvailabilityBits\n\t\t);\n\t\tsubtree._contentAvailabilityBitstreams = [];\n\t\tfor ( let i = 0; i < subtreeJson.contentAvailabilityHeaders.length; i ++ ) {\n\n\t\t\tconst bitstream = this.parseAvailabilityBitstream(\n\t\t\t\tsubtreeJson.contentAvailabilityHeaders[ i ],\n\t\t\t\tbufferViewsU8,\n\t\t\t\t// content availability has the same length as tile availability.\n\t\t\t\ttileAvailabilityBits\n\t\t\t);\n\t\t\tsubtree._contentAvailabilityBitstreams.push( bitstream );\n\n\t\t}\n\t\tsubtree._childSubtreeAvailability = this.parseAvailabilityBitstream(\n\t\t\tsubtreeJson.childSubtreeAvailability,\n\t\t\tbufferViewsU8,\n\t\t\tchildSubtreeBits\n\t\t);\n\n\t}\n\n\t/**\n\t * Given the JSON describing an availability bitstream, turn it into an\n\t * in-memory representation using an object. This handles bitstreams from a bufferView.\n\t *\n\t * @param {Object} availabilityJson A JSON object representing the availability.\n\t * @param {Object} bufferViewsU8 A dictionary of buffer view index to its Uint8Array contents.\n\t * @param {number} lengthBits The length of the availability bitstream in bits.\n\t * @returns {object}\n\t * @private\n\t */\n\tparseAvailabilityBitstream(\n\t\tavailabilityJson,\n\t\tbufferViewsU8,\n\t\tlengthBits,\n\t) {\n\n\t\tif ( ! isNaN( availabilityJson.constant ) ) {\n\n\t\t\treturn {\n\t\t\t\tconstant: Boolean( availabilityJson.constant ),\n\t\t\t\tlengthBits: lengthBits,\n\t\t\t};\n\n\t\t}\n\t\tlet bufferView;\n\t\t// Check for bitstream first, which is part of the current schema.\n\t\t// bufferView is the name of the bitstream from an older schema.\n\t\tif ( ! isNaN( availabilityJson.bitstream ) ) {\n\n\t\t\tbufferView = bufferViewsU8[ availabilityJson.bitstream ];\n\n\t\t} else if ( ! isNaN( availabilityJson.bufferView ) ) {\n\n\t\t\tbufferView = bufferViewsU8[ availabilityJson.bufferView ];\n\n\t\t}\n\t\treturn {\n\t\t\tbitstream: bufferView,\n\t\t\tlengthBits: lengthBits\n\t\t};\n\n\t}\n\n\t/**\n\t * Expand a single subtree tile. This transcodes the subtree into\n\t * a tree of {@link SubtreeTile}. The root of this tree is stored in\n\t * the placeholder tile's children array. This method also creates\n\t * tiles for the child subtrees to be lazily expanded as needed.\n\t *\n\t * @param {Object | SubtreeTile} subtreeRoot The first node of the subtree.\n\t * @param {Subtree} subtree The parsed subtree.\n\t * @private\n\t */\n\texpandSubtree( subtreeRoot, subtree ) {\n\n\t\t// TODO If multiple contents were supported then this tile could contain both renderable and un renderable content.\n\t\tconst contentTile = SubtreeTile.copy( subtreeRoot );\n\t\t// If the subtree root tile has content, then create a placeholder child with cloned parameters\n\t\t// Todo Multiple contents not handled, keep the first content found\n\t\tfor ( let i = 0; subtree && i < subtree._contentAvailabilityBitstreams.length; i ++ ) {\n\n\t\t\tif ( subtree && this.getBit( subtree._contentAvailabilityBitstreams[ i ], 0 ) ) {\n\n\t\t\t\t// Create a child holding the content uri, this child is similar to its parent and doesn't have any children.\n\t\t\t\tcontentTile.content = { uri: this.parseImplicitURI( subtreeRoot, this.rootTile.content.uri ) };\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\t\tsubtreeRoot.children.push( contentTile );\n\t\t// Creating each leaf inside the current subtree.\n\t\tconst bottomRow = this.transcodeSubtreeTiles(\n\t\t\tcontentTile,\n\t\t\tsubtree\n\t\t);\n\t\t// For each child subtree, create a tile containing the uri of the next subtree to fetch.\n\t\tconst childSubtrees = this.listChildSubtrees( subtree, bottomRow );\n\t\tfor ( let i = 0; i < childSubtrees.length; i ++ ) {\n\n\t\t\tconst subtreeLocator = childSubtrees[ i ];\n\t\t\tconst leafTile = subtreeLocator.tile;\n\t\t\tconst subtreeTile = this.deriveChildTile(\n\t\t\t\tnull,\n\t\t\t\tleafTile,\n\t\t\t\tnull,\n\t\t\t\tsubtreeLocator.childMortonIndex\n\t\t\t);\n\t\t\t// Assign subtree uri as content.\n\t\t\tsubtreeTile.content = { uri: this.parseImplicitURI( subtreeTile, this.rootTile.implicitTiling.subtrees.uri ) };\n\t\t\tleafTile.children.push( subtreeTile );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Transcode the implicitly defined tiles within this subtree and generate\n\t * explicit {@link SubtreeTile} objects. This function only transcodes tiles,\n\t * child subtrees are handled separately.\n\t *\n\t * @param {Object | SubtreeTile} subtreeRoot The root of the current subtree.\n\t * @param {Subtree} subtree The subtree to get availability information.\n\t * @returns {Array} The bottom row of transcoded tiles. This is helpful for processing child subtrees.\n\t * @private\n\t */\n\ttranscodeSubtreeTiles( subtreeRoot, subtree ) {\n\n\t\t// Sliding window over the levels of the tree.\n\t\t// Each row is branchingFactor * length of previous row.\n\t\t// Tiles within a row are ordered by Morton index.\n\t\tlet parentRow = [ subtreeRoot ];\n\t\tlet currentRow = [];\n\t\tfor ( let level = 1; level < this.rootTile.implicitTiling.subtreeLevels; level ++ ) {\n\n\t\t\tconst branchingFactor = getBoundsDivider( this.rootTile );\n\t\t\tconst levelOffset = ( Math.pow( branchingFactor, level ) - 1 ) / ( branchingFactor - 1 );\n\t\t\tconst numberOfChildren = branchingFactor * parentRow.length;\n\t\t\tfor ( let childMortonIndex = 0; childMortonIndex < numberOfChildren; childMortonIndex ++ ) {\n\n\t\t\t\tconst childBitIndex = levelOffset + childMortonIndex;\n\t\t\t\tconst parentMortonIndex = childMortonIndex >> Math.log2( branchingFactor );\n\t\t\t\tconst parentTile = parentRow[ parentMortonIndex ];\n\t\t\t\t// Check if tile is available.\n\t\t\t\tif ( ! this.getBit( subtree._tileAvailability, childBitIndex ) ) {\n\n\t\t\t\t\tcurrentRow.push( undefined );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\t\t\t\t// Create a tile and add it as a child.\n\t\t\t\tconst childTile = this.deriveChildTile(\n\t\t\t\t\tsubtree,\n\t\t\t\t\tparentTile,\n\t\t\t\t\tchildBitIndex,\n\t\t\t\t\tchildMortonIndex\n\t\t\t\t);\n\t\t\t\tparentTile.children.push( childTile );\n\t\t\t\tcurrentRow.push( childTile );\n\n\t\t\t}\n\t\t\tparentRow = currentRow;\n\t\t\tcurrentRow = [];\n\n\t\t}\n\t\treturn parentRow;\n\n\t}\n\n\t/**\n\t * Given a parent tile and information about which child to create, derive\n\t * the properties of the child tile implicitly.\n\t * <p>\n\t * This creates a real tile for rendering.\n\t * </p>\n\t *\n\t * @param {Subtree} subtree The subtree the child tile belongs to.\n\t * @param {Object | SubtreeTile} parentTile The parent of the new child tile.\n\t * @param {number} childBitIndex The index of the child tile within the tile's availability information.\n\t * @param {number} childMortonIndex The morton index of the child tile relative to its parent.\n\t * @returns {SubtreeTile} The new child tile.\n\t * @private\n\t */\n\tderiveChildTile(\n\t\tsubtree,\n\t\tparentTile,\n\t\tchildBitIndex,\n\t\tchildMortonIndex\n\t) {\n\n\t\tconst subtreeTile = new SubtreeTile( parentTile, childMortonIndex );\n\t\tsubtreeTile.boundingVolume = this.getTileBoundingVolume( subtreeTile );\n\t\tsubtreeTile.geometricError = this.getGeometricError( subtreeTile );\n\t\t// Todo Multiple contents not handled, keep the first found content.\n\t\tfor ( let i = 0; subtree && i < subtree._contentAvailabilityBitstreams.length; i ++ ) {\n\n\t\t\tif ( subtree && this.getBit( subtree._contentAvailabilityBitstreams[ i ], childBitIndex ) ) {\n\n\t\t\t\tsubtreeTile.content = { uri: this.parseImplicitURI( subtreeTile, this.rootTile.content.uri ) };\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\t\treturn subtreeTile;\n\n\t}\n\n\t/**\n\t * Get a bit from the bitstream as a Boolean. If the bitstream\n\t * is a constant, the constant value is returned instead.\n\t *\n\t * @param {ParsedBitstream} object\n\t * @param {number} index The integer index of the bit.\n\t * @returns {boolean} The value of the bit.\n\t * @private\n\t */\n\tgetBit( object, index ) {\n\n\t\tif ( index < 0 || index >= object.lengthBits ) {\n\n\t\t\tthrow new Error( 'Bit index out of bounds.' );\n\n\t\t}\n\t\tif ( object.constant !== undefined ) {\n\n\t\t\treturn object.constant;\n\n\t\t}\n\t\t// byteIndex is floor(index / 8)\n\t\tconst byteIndex = index >> 3;\n\t\tconst bitIndex = index % 8;\n\t\treturn ( ( new Uint8Array( object.bitstream )[ byteIndex ] >> bitIndex ) & 1 ) === 1;\n\n\t}\n\n\t/**\n\t * //TODO Adapt for Sphere\n\t * To maintain numerical stability during this subdivision process,\n\t * the actual bounding volumes should not be computed progressively by subdividing a non-root tile volume.\n\t * Instead, the exact bounding volumes are computed directly for a given level.\n\t * @param {Object | SubtreeTile} tile\n\t * @return {Object} object containing the bounding volume.\n\t */\n\tgetTileBoundingVolume( tile ) {\n\n\t\tconst boundingVolume = {};\n\t\tif ( this.rootTile.boundingVolume.region ) {\n\n\t\t\tconst region = [ ...this.rootTile.boundingVolume.region ];\n\t\t\tconst minX = region[ 0 ];\n\t\t\tconst maxX = region[ 2 ];\n\t\t\tconst minY = region[ 1 ];\n\t\t\tconst maxY = region[ 3 ];\n\t\t\tconst sizeX = ( maxX - minX ) / Math.pow( 2, tile.__level );\n\t\t\tconst sizeY = ( maxY - minY ) / Math.pow( 2, tile.__level );\n\t\t\tregion[ 0 ] = minX + sizeX * tile.__x;\t//west\n\t\t\tregion[ 2 ] = minX + sizeX * ( tile.__x + 1 );\t//east\n\t\t\tregion[ 1 ] = minY + sizeY * tile.__y;\t//south\n\t\t\tregion[ 3 ] = minY + sizeY * ( tile.__y + 1 );\t//north\n\t\t\tfor ( let k = 0; k < 4; k ++ ) {\n\n\t\t\t\tconst coord = region[ k ];\n\t\t\t\tif ( coord < - Math.PI ) {\n\n\t\t\t\t\tregion[ k ] += 2 * Math.PI;\n\n\t\t\t\t} else if ( coord > Math.PI ) {\n\n\t\t\t\t\tregion[ k ] -= 2 * Math.PI;\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t//Also divide the height in the case of octree.\n\t\t\tif ( isOctreeSubdivision( tile ) ) {\n\n\t\t\t\tconst minZ = region[ 4 ];\n\t\t\t\tconst maxZ = region[ 5 ];\n\t\t\t\tconst sizeZ = ( maxZ - minZ ) / Math.pow( 2, tile.__level );\n\t\t\t\tregion[ 4 ] = minZ + sizeZ * tile.__z;\t//minimum height\n\t\t\t\tregion[ 5 ] = minZ + sizeZ * ( tile.__z + 1 );\t//maximum height\n\n\t\t\t}\n\t\t\tboundingVolume.region = region;\n\n\t\t}\n\t\tif ( this.rootTile.boundingVolume.box ) {\n\n\t\t\t// 0-2: center of the box\n\t\t\t// 3-5: x axis direction and half length\n\t\t\t// 6-8: y axis direction and half length\n\t\t\t// 9-11: z axis direction and half length\n\t\t\tconst box = [ ...this.rootTile.boundingVolume.box ];\n\t\t\tconst cellSteps = 2 ** tile.__level - 1;\n\t\t\tconst scale = Math.pow( 2, - tile.__level );\n\t\t\tconst axisNumber = isOctreeSubdivision( tile ) ? 3 : 2;\n\t\t\tfor ( let i = 0; i < axisNumber; i ++ ) {\n\n\t\t\t\t// scale the bounds axes\n\t\t\t\tbox[ 3 + i * 3 + 0 ] *= scale;\n\t\t\t\tbox[ 3 + i * 3 + 1 ] *= scale;\n\t\t\t\tbox[ 3 + i * 3 + 2 ] *= scale;\n\t\t\t\t// axis vector\n\t\t\t\tconst x = box[ 3 + i * 3 + 0 ];\n\t\t\t\tconst y = box[ 3 + i * 3 + 1 ];\n\t\t\t\tconst z = box[ 3 + i * 3 + 2 ];\n\t\t\t\t// adjust the center by the x, y and z axes\n\t\t\t\tconst axisOffset = i === 0 ? tile.__x : ( i === 1 ? tile.__y : tile.__z );\n\t\t\t\tbox[ 0 ] += 2 * x * ( - 0.5 * cellSteps + axisOffset );\n\t\t\t\tbox[ 1 ] += 2 * y * ( - 0.5 * cellSteps + axisOffset );\n\t\t\t\tbox[ 2 ] += 2 * z * ( - 0.5 * cellSteps + axisOffset );\n\n\t\t\t}\n\t\t\tboundingVolume.box = box;\n\n\t\t}\n\t\treturn boundingVolume;\n\n\t}\n\n\t/**\n\t * Each child’s geometricError is half of its parent’s geometricError.\n\t * @param {Object | SubtreeTile} tile\n\t * @return {number}\n\t */\n\tgetGeometricError( tile ) {\n\n\t\treturn this.rootTile.geometricError / Math.pow( 2, tile.__level );\n\n\t}\n\n\t/**\n\t * Determine what child subtrees exist and return a list of information.\n\t *\n\t * @param {Object} subtree The subtree for looking up availability.\n\t * @param {Array} bottomRow The bottom row of tiles in a transcoded subtree.\n\t * @returns {[]} A list of identifiers for the child subtrees.\n\t * @private\n\t */\n\tlistChildSubtrees( subtree, bottomRow ) {\n\n\t\tconst results = [];\n\t\tconst branchingFactor = getBoundsDivider( this.rootTile );\n\t\tfor ( let i = 0; i < bottomRow.length; i ++ ) {\n\n\t\t\tconst leafTile = bottomRow[ i ];\n\t\t\tif ( leafTile === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\t\t\tfor ( let j = 0; j < branchingFactor; j ++ ) {\n\n\t\t\t\tconst index = i * branchingFactor + j;\n\t\t\t\tif ( this.getBit( subtree._childSubtreeAvailability, index ) ) {\n\n\t\t\t\t\tresults.push( {\n\t\t\t\t\t\ttile: leafTile,\n\t\t\t\t\t\tchildMortonIndex: index\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\t\treturn results;\n\n\t}\n\t/**\n\t * Replaces placeholder tokens in a URI template with the corresponding tile properties.\n\t *\n\t * The URI template should contain the tokens:\n\t * - `{level}` for the tile's subdivision level.\n\t * - `{x}` for the tile's x-coordinate.\n\t * - `{y}` for the tile's y-coordinate.\n\t * - `{z}` for the tile's z-coordinate.\n\t *\n\t * @param {Object} tile - The tile object containing properties __level, __x, __y, and __z.\n\t * @param {string} uri - The URI template string with placeholders.\n\t * @returns {string} The URI with placeholders replaced by the tile's properties.\n\t */\n\tparseImplicitURI( tile, uri ) {\n\n\t\turi = uri.replace( '{level}', tile.__level );\n\t\turi = uri.replace( '{x}', tile.__x );\n\t\turi = uri.replace( '{y}', tile.__y );\n\t\turi = uri.replace( '{z}', tile.__z );\n\t\treturn uri;\n\n\t}\n\n\t/**\n\t * Generates the full external buffer URI for a tile by combining an implicit URI with a buffer URI.\n\t *\n\t * First, it parses the implicit URI using the tile properties and the provided template. Then, it creates a new URL\n\t * relative to the tile's base path, removes the last path segment, and appends the buffer URI.\n\t *\n\t * @param {Object} tile - The tile object that contains properties:\n\t *   - __level: the subdivision level,\n\t *   - __x, __y, __z: the tile coordinates,\n\t * @param {string} uri - The URI template string with placeholders for the tile (e.g., `{level}`, `{x}`, `{y}`, `{z}`).\n\t * @param {string} bufUri - The buffer file name to append (e.g., \"0_1.bin\").\n\t * @returns {string} The full external buffer URI.\n\t */\n\tparseImplicitURIBuffer( tile, uri, bufUri ) {\n\n\t\t// Generate the base tile URI by replacing placeholders\n\t\tconst subUri = this.parseImplicitURI( tile, uri );\n\n\t\t// Create a URL object relative to the tile's base path\n\t\tconst url = new URL( subUri, this.workingPath + '/' );\n\n\t\t// Remove the last path segment\n\t\turl.pathname = url.pathname.substring( 0, url.pathname.lastIndexOf( '/' ) );\n\n\t\t// Construct the final URL with the buffer URI appended\n\t\treturn new URL( url.pathname + '/' + bufUri, this.workingPath + '/' ).toString();\n\n\n\t}\n\n}\n","import { SUBTREELoader } from './SUBTREELoader.js';\n\nexport class ImplicitTilingPlugin {\n\n\tconstructor() {\n\n\t\tthis.name = 'IMPLICIT_TILING_PLUGIN';\n\n\t}\n\n\tinit( tiles ) {\n\n\t\tthis.tiles = tiles;\n\n\t}\n\n\tpreprocessNode( tile, tileSetDir, parentTile ) {\n\n\t\tif ( tile.implicitTiling ) {\n\n\t\t\ttile.__hasUnrenderableContent = true;\n\t\t\ttile.__hasRenderableContent = false;\n\n\t\t\t// Declare some properties\n\t\t\ttile.__subtreeIdx = 0;\t// Idx of the tile in its subtree\n\t\t\ttile.__implicitRoot = tile;\t// Keep this tile as an Implicit Root Tile\n\n\t\t\t// Coords of the tile\n\t\t\ttile.__x = 0;\n\t\t\ttile.__y = 0;\n\t\t\ttile.__z = 0;\n\t\t\ttile.__level = 0;\n\n\t\t} else if ( /.subtree$/i.test( tile.content?.uri ) ) {\n\n\t\t\t// Handling content uri pointing to a subtree file\n\t\t\ttile.__hasUnrenderableContent = true;\n\t\t\ttile.__hasRenderableContent = false;\n\n\t\t}\n\n\t}\n\n\tparseTile( buffer, tile, extension ) {\n\n\t\tif ( /^subtree$/i.test( extension ) ) {\n\n\t\t\tconst loader = new SUBTREELoader( tile );\n\t\t\tloader.workingPath = tile.__basePath;\n\t\t\tloader.fetchOptions = this.tiles.fetchOptions;\n\t\t\treturn loader.parse( buffer );\n\n\t\t}\n\n\t}\n\n\tpreprocessURL( url, tile ) {\n\n\t\tif ( tile && tile.implicitTiling ) {\n\n\t\t\tconst implicitUri = tile.implicitTiling.subtrees.uri\n\t\t\t\t.replace( '{level}', tile.__level )\n\t\t\t\t.replace( '{x}', tile.__x )\n\t\t\t\t.replace( '{y}', tile.__y )\n\t\t\t\t.replace( '{z}', tile.__z );\n\n\t\t\treturn new URL( implicitUri, tile.__basePath + '/' ).toString();\n\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\tdisposeTile( tile ) {\n\n\t\tif ( /.subtree$/i.test( tile.content?.uri ) ) {\n\n\t\t\t// TODO: ideally the plugin doesn't need to know about children being processed\n\t\t\ttile.children.forEach( child => {\n\n\t\t\t\t// TODO: there should be a reliable way for removing children like this.\n\t\t\t\tthis.tiles.processNodeQueue.remove( child );\n\n\t\t\t} );\n\t\t\ttile.children.length = 0;\n\t\t\ttile.__childrenProcessed = 0;\n\n\t\t}\n\n\t}\n\n}\n","import { Clock, Vector3, Vector4 } from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nconst changeEvent = { type: 'fly-change' };\nconst startEvent = { type: 'fly-start' };\nconst endEvent = { type: 'fly-end' };\nconst tempVector = new Vector4( 0, 0, 0, 0 );\nexport class FlyOrbitControls extends OrbitControls {\n\n\tconstructor( camera, domElement ) {\n\n\t\t// Disable use of shift key so we can use it for acceleration\n\t\tconst disableShiftKeyCallback = e => {\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\tObject.defineProperty( e, 'shiftKey', { get() {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t} } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tdomElement.addEventListener( 'pointerdown', disableShiftKeyCallback );\n\n\t\tsuper( camera, domElement );\n\n\t\tthis.enableKeys = false;\n\t\tthis.enableFlight = true;\n\t\tthis.baseSpeed = 1;\n\t\tthis.fastSpeed = 4;\n\t\tthis.forwardKey = 'w';\n\t\tthis.backKey = 's';\n\t\tthis.leftKey = 'a';\n\t\tthis.rightKey = 'd';\n\t\tthis.upKey = 'q';\n\t\tthis.downKey = 'e';\n\t\tthis.fastKey = 'shift';\n\n\t\tlet fastHeld = false;\n\t\tlet forwardHeld = false;\n\t\tlet backHeld = false;\n\t\tlet leftHeld = false;\n\t\tlet rightHeld = false;\n\t\tlet upHeld = false;\n\t\tlet downHeld = false;\n\n\t\tlet originalDistance = 0;\n\t\tlet originalMinDistance = 0;\n\t\tlet originalMaxDistance = 0;\n\t\tlet rafHandle = - 1;\n\t\tconst originalTarget = new Vector3();\n\t\tconst clock = new Clock();\n\n\t\tconst endFlight = () => {\n\n\t\t\tif ( rafHandle !== - 1 ) {\n\n\t\t\t\t// cancel the animation playing\n\t\t\t\tcancelAnimationFrame( rafHandle );\n\t\t\t\trafHandle = - 1;\n\n\t\t\t\t// store the original distances for the controls\n\t\t\t\tthis.minDistance = originalMinDistance;\n\t\t\t\tthis.maxDistance = originalMaxDistance;\n\n\t\t\t\tconst targetDistance = Math.min( originalDistance, camera.position.distanceTo( originalTarget ) );\n\t\t\t\ttempVector\n\t\t\t\t\t.set( 0, 0, - 1, 0 )\n\t\t\t\t\t.applyMatrix4( camera.matrixWorld );\n\t\t\t\tthis\n\t\t\t\t\t.target\n\t\t\t\t\t.copy( camera.position )\n\t\t\t\t\t.addScaledVector( tempVector, targetDistance );\n\n\t\t\t\tthis.dispatchEvent( endEvent );\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst updateFlight = () => {\n\n\t\t\tif ( ! this.enabled || ! this.enableFlight ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\trafHandle = requestAnimationFrame( updateFlight );\n\n\t\t\t// get the direction\n\t\t\ttempVector.set( 0, 0, 0, 0 );\n\t\t\tif ( forwardHeld ) tempVector.z -= 1;\n\t\t\tif ( backHeld ) tempVector.z += 1;\n\t\t\tif ( leftHeld ) tempVector.x -= 1;\n\t\t\tif ( rightHeld ) tempVector.x += 1;\n\t\t\tif ( upHeld ) tempVector.y += 1;\n\t\t\tif ( downHeld ) tempVector.y -= 1;\n\t\t\ttempVector.applyMatrix4( camera.matrixWorld );\n\n\t\t\t// apply the movement\n\t\t\tconst delta = 60 * clock.getDelta();\n\t\t\tconst speed = fastHeld ? this.fastSpeed : this.baseSpeed;\n\t\t\tcamera\n\t\t\t\t.position\n\t\t\t\t.addScaledVector( tempVector, speed * delta );\n\t\t\tthis\n\t\t\t\t.target\n\t\t\t\t.addScaledVector( tempVector, speed * delta );\n\n\t\t\tthis.dispatchEvent( changeEvent );\n\n\t\t};\n\n\t\tconst keyDownCallback = e => {\n\n\t\t\tconst key = e.key.toLowerCase();\n\n\t\t\tif ( rafHandle === - 1 ) {\n\n\t\t\t\toriginalMaxDistance = this.maxDistance;\n\t\t\t\toriginalMinDistance = this.minDistance;\n\t\t\t\toriginalDistance = camera.position.distanceTo( this.target );\n\t\t\t\toriginalTarget.copy( this.target );\n\n\t\t\t}\n\n\t\t\tswitch ( key ) {\n\n\t\t\t\tcase this.forwardKey:\n\t\t\t\t\tforwardHeld = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.backKey:\n\t\t\t\t\tbackHeld = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.leftKey:\n\t\t\t\t\tleftHeld = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.rightKey:\n\t\t\t\t\trightHeld = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.upKey:\n\t\t\t\t\tupHeld = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.downKey:\n\t\t\t\t\tdownHeld = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.fastKey:\n\t\t\t\t\tfastHeld = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( key ) {\n\n\t\t\t\tcase this.fastKey:\n\t\t\t\tcase this.forwardKey:\n\t\t\t\tcase this.backKey:\n\t\t\t\tcase this.leftKey:\n\t\t\t\tcase this.rightKey:\n\t\t\t\tcase this.upKey:\n\t\t\t\tcase this.downKey:\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\n\t\t\t}\n\n\t\t\tif ( forwardHeld || backHeld || leftHeld || rightHeld || upHeld || downHeld || fastHeld ) {\n\n\t\t\t\tthis.minDistance = 0.01;\n\t\t\t\tthis.maxDistance = 0.01;\n\n\t\t\t\t// Move the orbit target out to just in front of the camera\n\t\t\t\ttempVector\n\t\t\t\t\t.set( 0, 0, - 1, 0 )\n\t\t\t\t\t.applyMatrix4( camera.matrixWorld );\n\t\t\t\tthis\n\t\t\t\t\t.target\n\t\t\t\t\t.copy( camera.position )\n\t\t\t\t\t.addScaledVector( tempVector, 0.01 );\n\n\t\t\t\tif ( rafHandle === - 1 ) {\n\n\t\t\t\t\t// start the flight and reset the clock\n\t\t\t\t\tthis.dispatchEvent( startEvent );\n\t\t\t\t\tclock.getDelta();\n\t\t\t\t\tupdateFlight();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst keyUpCallback = e => {\n\n\t\t\tconst key = e.key.toLowerCase();\n\n\t\t\tswitch ( key ) {\n\n\t\t\t\tcase this.fastKey:\n\t\t\t\tcase this.forwardKey:\n\t\t\t\tcase this.backKey:\n\t\t\t\tcase this.leftKey:\n\t\t\t\tcase this.rightKey:\n\t\t\t\tcase this.upKey:\n\t\t\t\tcase this.downKey:\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\n\t\t\t}\n\n\t\t\tswitch ( key ) {\n\n\t\t\t\tcase this.forwardKey:\n\t\t\t\t\tforwardHeld = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.backKey:\n\t\t\t\t\tbackHeld = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.leftKey:\n\t\t\t\t\tleftHeld = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.rightKey:\n\t\t\t\t\trightHeld = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.upKey:\n\t\t\t\t\tupHeld = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.downKey:\n\t\t\t\t\tdownHeld = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.fastKey:\n\t\t\t\t\tfastHeld = false;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( ! ( forwardHeld || backHeld || leftHeld || rightHeld || upHeld || downHeld || fastHeld ) ) {\n\n\t\t\t\tendFlight();\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst blurCallback = () => {\n\n\t\t\tendFlight();\n\n\t\t};\n\n\t\tthis.blurCallback = blurCallback;\n\t\tthis.keyDownCallback = keyDownCallback;\n\t\tthis.keyUpCallback = keyUpCallback;\n\t\tthis.disableShiftKeyCallback = disableShiftKeyCallback;\n\n\t\tthis.domElement.addEventListener( 'blur', blurCallback );\n\t\tthis.domElement.addEventListener( 'keydown', keyDownCallback );\n\t\tthis.domElement.addEventListener( 'keyup', keyUpCallback );\n\n\t}\n\n\tdispose() {\n\n\t\tsuper.dispose();\n\n\t\tthis.domElement.removeEventListener( 'blur', this.blurCallback );\n\t\tthis.domElement.removeEventListener( 'keydown', this.keyDownCallback );\n\t\tthis.domElement.removeEventListener( 'keyup', this.keyUpCallback );\n\t\tthis.domElement.removeEventListener( 'pointerdown', this.disableShiftKeyCallback );\n\n\t}\n\n}\n","import {\n\tTilesRenderer,\n} from '3d-tiles-renderer';\nimport {\n\tDebugTilesPlugin,\n\tImplicitTilingPlugin,\n\tGLTFExtensionsPlugin,\n} from '3d-tiles-renderer/plugins';\nimport {\n\tScene,\n\tDirectionalLight,\n\tAmbientLight,\n\tWebGLRenderer,\n\tPerspectiveCamera,\n\tCameraHelper,\n\tBox3,\n\tRaycaster,\n\tVector2,\n\tMesh,\n\tCylinderGeometry,\n\tMeshBasicMaterial,\n\tGroup,\n\tTorusGeometry,\n\tOrthographicCamera,\n\tSphere,\n} from 'three';\nimport { FlyOrbitControls } from './src/controls/FlyOrbitControls.js';\nimport * as BufferGeometryUtils from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\nimport { KTX2Loader } from 'three/examples/jsm/loaders/KTX2Loader.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\nconst NONE = 0;\nconst ALL_HITS = 1;\nconst FIRST_HIT_ONLY = 2;\n\nconst hashUrl = window.location.hash.replace( /^#/, '' );\nconst urlParams = new URLSearchParams( window.location.search );\nlet camera, controls, scene, renderer, tiles, cameraHelper;\nlet thirdPersonCamera, thirdPersonRenderer, thirdPersonControls;\nlet secondRenderer, secondCameraHelper, secondControls, secondCamera;\nlet orthoCamera, orthoCameraHelper;\nlet box, sphere;\nlet raycaster, mouse, rayIntersect, lastHoveredElement;\nlet offsetParent, geospatialRotationParent;\nlet statsContainer, stats;\n\nconst params = {\n\n\tenableUpdate: true,\n\traycast: DebugTilesPlugin.ColorModes.NONE,\n\tenableCacheDisplay: false,\n\tenableRendererStats: false,\n\torthographic: false,\n\n\terrorTarget: 6,\n\tmaxDepth: 15,\n\tdisplayActiveTiles: false,\n\tresolutionScale: 1.0,\n\n\tup: urlParams.get( 'up' ) ?? hashUrl ? '+Z' : '+Y',\n\tenableDebug: true,\n\tdisplayParentBounds: false,\n\tdisplayBoxBounds: false,\n\tdisplaySphereBounds: false,\n\tdisplayRegionBounds: false,\n\tcolorMode: urlParams.get( 'colorMode' ) in DebugTilesPlugin.ColorModes ? DebugTilesPlugin.ColorModes[ urlParams.get( 'colorMode' ) ] : DebugTilesPlugin.ColorModes.NONE,\n\tunlit: Boolean( urlParams.get( 'unlit' ) ),\n\tshowThirdPerson: false,\n\tshowSecondView: false,\n\treload: reinstantiateTiles,\n\n};\n\ninit();\nanimate();\n\nfunction reinstantiateTiles() {\n\n\tconst url = hashUrl || '../data/tileset.json';\n\n\tif ( tiles ) {\n\n\t\tgeospatialRotationParent.remove( tiles.group );\n\t\ttiles.dispose();\n\n\t}\n\n\t// Note the DRACO compression files need to be supplied via an explicit source.\n\t// We use unpkg here but in practice should be provided by the application.\n\tconst dracoLoader = new DRACOLoader();\n\tdracoLoader.setDecoderPath( 'https://unpkg.com/three@0.153.0/examples/jsm/libs/draco/gltf/' );\n\n\tconst ktx2loader = new KTX2Loader();\n\tktx2loader.setTranscoderPath( 'https://unpkg.com/three@0.153.0/examples/jsm/libs/basis/' );\n\tktx2loader.detectSupport( renderer );\n\n\ttiles = new TilesRenderer( url );\n\ttiles.registerPlugin( new DebugTilesPlugin() );\n\ttiles.registerPlugin( new ImplicitTilingPlugin() );\n\ttiles.registerPlugin( new GLTFExtensionsPlugin( {\n\t\trtc: true,\n\t\tdracoLoader: dracoLoader,\n\t\tktxLoader: ktx2loader,\n\t} ) );\n\n\ttiles.fetchOptions.mode = 'cors';\n\tgeospatialRotationParent.add( tiles.group );\n\n\t// Used with CUSTOM_COLOR\n\ttiles.customColorCallback = ( tile, object ) => {\n\n\t\tconst depthIsEven = tile.__depth % 2 === 0;\n\t\tconst hex = depthIsEven ? 0xff0000 : 0xffffff;\n\t\tobject.traverse( c => {\n\n\t\t\tif ( c.isMesh ) {\n\n\t\t\t\tc.material.color.set( hex );\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n}\n\nfunction init() {\n\n\tscene = new Scene();\n\n\t// primary camera view\n\trenderer = new WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( 0x151c1f );\n\n\tdocument.body.appendChild( renderer.domElement );\n\trenderer.domElement.tabIndex = 1;\n\n\tcamera = new PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 1, 10000 );\n\tcamera.position.set( 400, 400, 400 );\n\tcameraHelper = new CameraHelper( camera );\n\tscene.add( cameraHelper );\n\n\torthoCamera = new OrthographicCamera();\n\torthoCameraHelper = new CameraHelper( orthoCamera );\n\tscene.add( orthoCameraHelper );\n\n\t// secondary camera view\n\tsecondCamera = new PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 1, 4000 );\n\tsecondCamera.position.set( 400, 400, - 400 );\n\tsecondCamera.lookAt( 0, 0, 0 );\n\n\tsecondRenderer = new WebGLRenderer( { antialias: true } );\n\tsecondRenderer.setPixelRatio( window.devicePixelRatio );\n\tsecondRenderer.setSize( window.innerWidth, window.innerHeight );\n\tsecondRenderer.setClearColor( 0x151c1f );\n\n\tdocument.body.appendChild( secondRenderer.domElement );\n\tsecondRenderer.domElement.style.position = 'absolute';\n\tsecondRenderer.domElement.style.right = '0';\n\tsecondRenderer.domElement.style.top = '0';\n\tsecondRenderer.domElement.style.outline = '#0f1416 solid 2px';\n\tsecondRenderer.domElement.tabIndex = 1;\n\n\tsecondControls = new FlyOrbitControls( secondCamera, secondRenderer.domElement );\n\tsecondControls.screenSpacePanning = false;\n\tsecondControls.minDistance = 1;\n\tsecondControls.maxDistance = 5000;\n\n\tsecondCameraHelper = new CameraHelper( secondCamera );\n\tscene.add( secondCameraHelper );\n\n\t// Third person camera view\n\tthirdPersonCamera = new PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 1, 4000 );\n\tthirdPersonCamera.position.set( 50, 40, 40 );\n\tthirdPersonCamera.lookAt( 0, 0, 0 );\n\n\tthirdPersonRenderer = new WebGLRenderer( { antialias: true } );\n\tthirdPersonRenderer.setPixelRatio( window.devicePixelRatio );\n\tthirdPersonRenderer.setSize( window.innerWidth, window.innerHeight );\n\tthirdPersonRenderer.setClearColor( 0x0f1416 );\n\n\tdocument.body.appendChild( thirdPersonRenderer.domElement );\n\tthirdPersonRenderer.domElement.style.position = 'fixed';\n\tthirdPersonRenderer.domElement.style.left = '5px';\n\tthirdPersonRenderer.domElement.style.bottom = '5px';\n\tthirdPersonRenderer.domElement.tabIndex = 1;\n\n\tthirdPersonControls = new FlyOrbitControls( thirdPersonCamera, thirdPersonRenderer.domElement );\n\tthirdPersonControls.screenSpacePanning = false;\n\tthirdPersonControls.minDistance = 1;\n\tthirdPersonControls.maxDistance = 5000;\n\n\t// controls\n\tcontrols = new FlyOrbitControls( camera, renderer.domElement );\n\tcontrols.screenSpacePanning = false;\n\tcontrols.minDistance = 1;\n\tcontrols.maxDistance = 5000;\n\n\t// lights\n\tconst dirLight = new DirectionalLight( 0xffffff, 4 );\n\tdirLight.position.set( 1, 2, 3 );\n\tscene.add( dirLight );\n\n\tconst ambLight = new AmbientLight( 0xffffff, 0.2 );\n\tscene.add( ambLight );\n\n\tbox = new Box3();\n\tsphere = new Sphere();\n\n\toffsetParent = new Group();\n\tscene.add( offsetParent );\n\n\tgeospatialRotationParent = new Group();\n\toffsetParent.add( geospatialRotationParent );\n\n\t// Raycasting init\n\traycaster = new Raycaster();\n\tmouse = new Vector2();\n\n\trayIntersect = new Group();\n\n\tconst rayIntersectMat = new MeshBasicMaterial( { color: 0xe91e63 } );\n\tconst rayMesh = new Mesh( new CylinderGeometry( 0.25, 0.25, 6 ), rayIntersectMat );\n\trayMesh.rotation.x = Math.PI / 2;\n\trayMesh.position.z += 3;\n\trayIntersect.add( rayMesh );\n\n\tconst rayRing = new Mesh( new TorusGeometry( 1.5, 0.2, 16, 100 ), rayIntersectMat );\n\trayIntersect.add( rayRing );\n\tscene.add( rayIntersect );\n\trayIntersect.visible = false;\n\n\treinstantiateTiles();\n\n\tonWindowResize();\n\twindow.addEventListener( 'resize', onWindowResize, false );\n\trenderer.domElement.addEventListener( 'pointermove', onPointerMove, false );\n\trenderer.domElement.addEventListener( 'pointerdown', onPointerDown, false );\n\trenderer.domElement.addEventListener( 'pointerup', onPointerUp, false );\n\trenderer.domElement.addEventListener( 'pointerleave', onPointerLeave, false );\n\n\tsecondRenderer.domElement.addEventListener( 'pointermove', onPointerMove, false );\n\tsecondRenderer.domElement.addEventListener( 'pointerdown', onPointerDown, false );\n\tsecondRenderer.domElement.addEventListener( 'pointerup', onPointerUp, false );\n\tsecondRenderer.domElement.addEventListener( 'pointerleave', onPointerLeave, false );\n\n\n\t// GUI\n\tconst gui = new GUI();\n\tgui.width = 300;\n\n\tconst tileOptions = gui.addFolder( 'Tiles Options' );\n\ttileOptions.add( params, 'displayActiveTiles' );\n\ttileOptions.add( params, 'errorTarget' ).min( 0 ).max( 50 );\n\ttileOptions.add( params, 'maxDepth' ).min( 1 ).max( 100 );\n\ttileOptions.add( params, 'up', [ '+Y', '+Z', '-Z' ] );\n\ttileOptions.open();\n\n\tconst debug = gui.addFolder( 'Debug Options' );\n\tdebug.add( params, 'enableDebug' );\n\tdebug.add( params, 'displayParentBounds' );\n\tdebug.add( params, 'displayBoxBounds' );\n\tdebug.add( params, 'displaySphereBounds' );\n\tdebug.add( params, 'displayRegionBounds' );\n\tdebug.add( params, 'colorMode', DebugTilesPlugin.ColorModes );\n\tdebug.add( params, 'unlit' );\n\tdebug.open();\n\n\tconst exampleOptions = gui.addFolder( 'Example Options' );\n\texampleOptions.add( params, 'resolutionScale' ).min( 0.01 ).max( 2.0 ).step( 0.01 ).onChange( onWindowResize );\n\texampleOptions.add( params, 'orthographic' );\n\texampleOptions.add( params, 'showThirdPerson' );\n\texampleOptions.add( params, 'showSecondView' ).onChange( onWindowResize );\n\texampleOptions.add( params, 'enableUpdate' ).onChange( v => {\n\n\t\ttiles.parseQueue.autoUpdate = v;\n\t\ttiles.downloadQueue.autoUpdate = v;\n\n\t\tif ( v ) {\n\n\t\t\ttiles.parseQueue.scheduleJobRun();\n\t\t\ttiles.downloadQueue.scheduleJobRun();\n\n\t\t}\n\n\t} );\n\texampleOptions.add( params, 'raycast', { NONE, ALL_HITS, FIRST_HIT_ONLY } );\n\texampleOptions.add( params, 'enableCacheDisplay' );\n\texampleOptions.add( params, 'enableRendererStats' );\n\texampleOptions.open();\n\n\tgui.add( params, 'reload' );\n\tgui.open();\n\n\tstatsContainer = document.createElement( 'div' );\n\tstatsContainer.style.position = 'absolute';\n\tstatsContainer.style.top = 0;\n\tstatsContainer.style.left = 0;\n\tstatsContainer.style.color = 'white';\n\tstatsContainer.style.width = '100%';\n\tstatsContainer.style.textAlign = 'center';\n\tstatsContainer.style.padding = '5px';\n\tstatsContainer.style.pointerEvents = 'none';\n\tstatsContainer.style.lineHeight = '1.5em';\n\tdocument.body.appendChild( statsContainer );\n\n\t// Stats\n\tstats = new Stats();\n\tstats.showPanel( 0 );\n\tdocument.body.appendChild( stats.dom );\n\n}\n\nfunction onWindowResize() {\n\n\tthirdPersonCamera.aspect = window.innerWidth / window.innerHeight;\n\tthirdPersonCamera.updateProjectionMatrix();\n\tthirdPersonRenderer.setSize( Math.floor( window.innerWidth / 3 ), Math.floor( window.innerHeight / 3 ) );\n\n\tif ( params.showSecondView ) {\n\n\t\tcamera.aspect = 0.5 * window.innerWidth / window.innerHeight;\n\t\trenderer.setSize( 0.5 * window.innerWidth, window.innerHeight );\n\n\t\tsecondCamera.aspect = 0.5 * window.innerWidth / window.innerHeight;\n\t\tsecondRenderer.setSize( 0.5 * window.innerWidth, window.innerHeight );\n\t\tsecondRenderer.domElement.style.display = 'block';\n\n\t} else {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t\tsecondRenderer.domElement.style.display = 'none';\n\n\t}\n\tcamera.updateProjectionMatrix();\n\trenderer.setPixelRatio( window.devicePixelRatio * params.resolutionScale );\n\n\tsecondCamera.updateProjectionMatrix();\n\tsecondRenderer.setPixelRatio( window.devicePixelRatio );\n\n\tupdateOrthoCamera();\n\n}\n\nfunction onPointerLeave( e ) {\n\n\tlastHoveredElement = null;\n\n}\n\nfunction onPointerMove( e ) {\n\n\tconst bounds = this.getBoundingClientRect();\n\tmouse.x = e.clientX - bounds.x;\n\tmouse.y = e.clientY - bounds.y;\n\tmouse.x = ( mouse.x / bounds.width ) * 2 - 1;\n\tmouse.y = - ( mouse.y / bounds.height ) * 2 + 1;\n\n\tlastHoveredElement = this;\n\n}\n\nconst startPos = new Vector2();\nconst endPos = new Vector2();\nfunction onPointerDown( e ) {\n\n\tconst bounds = this.getBoundingClientRect();\n\tstartPos.set( e.clientX - bounds.x, e.clientY - bounds.y );\n\n}\n\nfunction onPointerUp( e ) {\n\n\tconst bounds = this.getBoundingClientRect();\n\tendPos.set( e.clientX - bounds.x, e.clientY - bounds.y );\n\tif ( startPos.distanceTo( endPos ) > 2 ) {\n\n\t\treturn;\n\n\t}\n\n\tif ( lastHoveredElement === secondRenderer.domElement ) {\n\n\t\traycaster.setFromCamera( mouse, secondCamera );\n\n\t} else {\n\n\t\traycaster.setFromCamera( mouse, params.orthographic ? orthoCamera : camera );\n\n\t}\n\n\traycaster.firstHitOnly = true;\n\tconst results = raycaster.intersectObject( tiles.group, true );\n\tif ( results.length ) {\n\n\t\tconst object = results[ 0 ].object;\n\t\tconst info = tiles.getPluginByName( 'DEBUG_TILES_PLUGIN' ).getTileInformationFromActiveObject( object );\n\n\t\tlet str = '';\n\t\tfor ( const key in info ) {\n\n\t\t\tlet val = info[ key ];\n\t\t\tif ( typeof val === 'number' ) {\n\n\t\t\t\tval = Math.floor( val * 1e5 ) / 1e5;\n\n\t\t\t}\n\n\t\t\tlet name = key;\n\t\t\twhile ( name.length < 20 ) {\n\n\t\t\t\tname += ' ';\n\n\t\t\t}\n\n\t\t\tstr += `${ name } : ${ val }\\n`;\n\n\t\t}\n\t\tconsole.log( str );\n\n\t}\n\n}\n\nfunction updateOrthoCamera() {\n\n\torthoCamera.position.copy( camera.position );\n\torthoCamera.rotation.copy( camera.rotation );\n\n\tconst scale = camera.position.distanceTo( controls.target ) / 2.0;\n\tlet aspect = window.innerWidth / window.innerHeight;\n\tif ( params.showSecondView ) {\n\n\t\taspect *= 0.5;\n\n\t}\n\torthoCamera.left = - aspect * scale;\n\torthoCamera.right = aspect * scale;\n\torthoCamera.bottom = - scale;\n\torthoCamera.top = scale;\n\torthoCamera.near = camera.near;\n\torthoCamera.far = camera.far;\n\torthoCamera.updateProjectionMatrix();\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\t// update options\n\ttiles.errorTarget = params.errorTarget;\n\ttiles.displayActiveTiles = params.displayActiveTiles;\n\ttiles.maxDepth = params.maxDepth;\n\n\t// update plugin\n\tconst plugin = tiles.getPluginByName( 'DEBUG_TILES_PLUGIN' );\n\tplugin.enabled = params.enableDebug;\n\tplugin.displayBoxBounds = params.displayBoxBounds;\n\tplugin.displayParentBounds = params.displayParentBounds;\n\tplugin.displaySphereBounds = params.displaySphereBounds;\n\tplugin.displayRegionBounds = params.displayRegionBounds;\n\tplugin.colorMode = parseFloat( params.colorMode );\n\tplugin.unlit = params.unlit;\n\n\tif ( params.orthographic ) {\n\n\t\ttiles.deleteCamera( camera );\n\t\ttiles.setCamera( orthoCamera );\n\t\ttiles.setResolutionFromRenderer( orthoCamera, renderer );\n\n\t} else {\n\n\t\ttiles.deleteCamera( orthoCamera );\n\t\ttiles.setCamera( camera );\n\t\ttiles.setResolutionFromRenderer( camera, renderer );\n\n\t}\n\n\tif ( params.showSecondView ) {\n\n\t\ttiles.setCamera( secondCamera );\n\t\ttiles.setResolutionFromRenderer( secondCamera, secondRenderer );\n\n\t} else {\n\n\t\ttiles.deleteCamera( secondCamera );\n\n\t}\n\n\tif ( tiles.root && tiles.root.boundingVolume.region ) {\n\n\t\ttiles.getOrientedBoundingBox( box, geospatialRotationParent.matrix );\n\t\tgeospatialRotationParent.matrix.decompose( geospatialRotationParent.position, geospatialRotationParent.quaternion, geospatialRotationParent.scale );\n\t\tgeospatialRotationParent.position.set( 0, 0, 0 );\n\t\tgeospatialRotationParent.quaternion.invert();\n\t\tgeospatialRotationParent.scale.set( 1, 1, 1 );\n\n\t}\n\n\toffsetParent.rotation.set( 0, 0, 0 );\n\tif ( params.up === '-Z' ) {\n\n\t\toffsetParent.rotation.x = Math.PI / 2;\n\n\t} else if ( params.up === '+Z' ) {\n\n\t\toffsetParent.rotation.x = - Math.PI / 2;\n\n\t}\n\n\toffsetParent.updateMatrixWorld( false );\n\n\t// update tiles center\n\tif ( tiles.getBoundingBox( box ) ) {\n\n\t\tbox.getCenter( tiles.group.position );\n\t\ttiles.group.position.multiplyScalar( - 1 );\n\n\t} else if ( tiles.getBoundingSphere( sphere ) ) {\n\n\t\ttiles.group.position.copy( sphere.center );\n\t\ttiles.group.position.multiplyScalar( - 1 );\n\n\t}\n\n\tif ( parseFloat( params.raycast ) !== NONE && lastHoveredElement !== null ) {\n\n\t\tif ( lastHoveredElement === renderer.domElement ) {\n\n\t\t\traycaster.setFromCamera( mouse, params.orthographic ? orthoCamera : camera );\n\n\t\t} else {\n\n\t\t\traycaster.setFromCamera( mouse, secondCamera );\n\n\t\t}\n\n\t\traycaster.firstHitOnly = parseFloat( params.raycast ) === FIRST_HIT_ONLY;\n\n\t\tconst results = raycaster.intersectObject( tiles.group, true );\n\t\tif ( results.length ) {\n\n\t\t\tconst closestHit = results[ 0 ];\n\t\t\tconst point = closestHit.point;\n\t\t\trayIntersect.position.copy( point );\n\n\t\t\t// If the display bounds are visible they get intersected\n\t\t\tif ( closestHit.face ) {\n\n\t\t\t\tconst normal = closestHit.face.normal;\n\t\t\t\tnormal.transformDirection( closestHit.object.matrixWorld );\n\t\t\t\trayIntersect.lookAt(\n\t\t\t\t\tpoint.x + normal.x,\n\t\t\t\t\tpoint.y + normal.y,\n\t\t\t\t\tpoint.z + normal.z\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\trayIntersect.visible = true;\n\n\t\t} else {\n\n\t\t\trayIntersect.visible = false;\n\n\t\t}\n\n\t} else {\n\n\t\trayIntersect.visible = false;\n\n\t}\n\n\t// update tiles\n\twindow.tiles = tiles;\n\tif ( params.enableUpdate ) {\n\n\t\tsecondCamera.updateMatrixWorld();\n\t\tcamera.updateMatrixWorld();\n\t\torthoCamera.updateMatrixWorld();\n\t\ttiles.update();\n\n\t}\n\n\trender();\n\tstats.update();\n\n}\n\nfunction render() {\n\n\tupdateOrthoCamera();\n\n\tcameraHelper.visible = false;\n\torthoCameraHelper.visible = false;\n\tsecondCameraHelper.visible = false;\n\n\t// render primary view\n\tif ( params.orthographic ) {\n\n\t\tconst dist = orthoCamera.position.distanceTo( rayIntersect.position );\n\t\trayIntersect.scale.setScalar( dist / 150 );\n\n\t} else {\n\n\t\tconst dist = camera.position.distanceTo( rayIntersect.position );\n\t\trayIntersect.scale.setScalar( dist * camera.fov / 6000 );\n\n\t}\n\trenderer.render( scene, params.orthographic ? orthoCamera : camera );\n\n\t// render secondary view\n\tif ( params.showSecondView ) {\n\n\t\tconst dist = secondCamera.position.distanceTo( rayIntersect.position );\n\t\trayIntersect.scale.setScalar( dist * secondCamera.fov / 6000 );\n\t\tsecondRenderer.render( scene, secondCamera );\n\n\t}\n\n\t// render third person view\n\tthirdPersonRenderer.domElement.style.visibility = params.showThirdPerson ? 'visible' : 'hidden';\n\tif ( params.showThirdPerson ) {\n\n\t\tcameraHelper.update();\n\t\tcameraHelper.visible = ! params.orthographic;\n\n\t\torthoCameraHelper.update();\n\t\torthoCameraHelper.visible = params.orthographic;\n\n\t\tif ( params.showSecondView ) {\n\n\t\t\tsecondCameraHelper.update();\n\t\t\tsecondCameraHelper.visible = true;\n\n\t\t}\n\n\t\tconst dist = thirdPersonCamera.position.distanceTo( rayIntersect.position );\n\t\trayIntersect.scale.setScalar( dist * thirdPersonCamera.fov / 6000 );\n\t\tthirdPersonRenderer.render( scene, thirdPersonCamera );\n\n\t}\n\n\tconst cacheFullness = tiles.lruCache.itemList.length / tiles.lruCache.maxSize;\n\tlet str = `Downloading: ${ tiles.stats.downloading } Parsing: ${ tiles.stats.parsing } Visible: ${ tiles.visibleTiles.size }`;\n\n\tif ( params.enableCacheDisplay ) {\n\n\t\tconst geomSet = new Set();\n\t\ttiles.traverse( tile => {\n\n\t\t\tconst scene = tile.cached.scene;\n\t\t\tif ( scene ) {\n\n\t\t\t\tscene.traverse( c => {\n\n\t\t\t\t\tif ( c.geometry ) {\n\n\t\t\t\t\t\tgeomSet.add( c.geometry );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tlet count = 0;\n\t\tgeomSet.forEach( g => {\n\n\t\t\tcount += BufferGeometryUtils.estimateBytesUsed( g );\n\n\t\t} );\n\t\tstr += `<br/>Cache: ${ ( 100 * cacheFullness ).toFixed( 2 ) }% ~${ ( count / 1000 / 1000 ).toFixed( 2 ) }mb`;\n\n\t}\n\n\tif ( params.enableRendererStats ) {\n\n\t\tconst memory = renderer.info.memory;\n\t\tconst programCount = renderer.info.programs.length;\n\t\tstr += `<br/>Geometries: ${ memory.geometries } Textures: ${ memory.textures } Programs: ${ programCount }`;\n\n\t}\n\n\tif ( statsContainer.innerHTML !== str ) {\n\n\t\tstatsContainer.innerHTML = str;\n\n\t}\n\n}\n"],"names":["isOctreeSubdivision","tile","getBoundsDivider","getSubtreeCoordinates","parentTile","x","y","z","SubtreeTile","childMortonIndex","copyTile","SUBTREELoader","LoaderBase","buffer","dataView","offset","magic","LoaderUtils.readMagicBytes","version","jsonLength","byteLength","subtreeJson","LoaderUtils.arrayToString","subtreeByte","subtree","bufferHeaders","bufferViewHeaders","buffersU8","bufferViewsU8","header","tileAvailabilityHeader","contentAvailabilityHeaders","i","childSubtreeAvailabilityHeader","internalBuffer","promises","bufferHeader","url","fetchPromise","response","arrayBuffer","bufferResults","result","bufferViewHeader","start","end","branchingFactor","subtreeLevels","tileAvailabilityBits","childSubtreeBits","bitstream","availabilityJson","lengthBits","bufferView","subtreeRoot","contentTile","bottomRow","childSubtrees","subtreeLocator","leafTile","subtreeTile","parentRow","currentRow","level","levelOffset","numberOfChildren","childBitIndex","parentMortonIndex","childTile","object","index","byteIndex","bitIndex","boundingVolume","region","minX","maxX","minY","maxY","sizeX","sizeY","k","coord","minZ","sizeZ","box","cellSteps","scale","axisNumber","axisOffset","results","j","uri","bufUri","subUri","ImplicitTilingPlugin","tiles","tileSetDir","_a","extension","loader","implicitUri","child","changeEvent","startEvent","endEvent","tempVector","Vector4","FlyOrbitControls","OrbitControls","camera","domElement","disableShiftKeyCallback","e","fastHeld","forwardHeld","backHeld","leftHeld","rightHeld","upHeld","downHeld","originalDistance","originalMinDistance","originalMaxDistance","rafHandle","originalTarget","Vector3","clock","Clock","endFlight","targetDistance","updateFlight","delta","speed","keyDownCallback","key","keyUpCallback","blurCallback","NONE","ALL_HITS","FIRST_HIT_ONLY","hashUrl","urlParams","controls","scene","renderer","cameraHelper","thirdPersonCamera","thirdPersonRenderer","thirdPersonControls","secondRenderer","secondCameraHelper","secondControls","secondCamera","orthoCamera","orthoCameraHelper","sphere","raycaster","mouse","rayIntersect","lastHoveredElement","offsetParent","geospatialRotationParent","statsContainer","stats","params","DebugTilesPlugin","reinstantiateTiles","init","animate","dracoLoader","DRACOLoader","ktx2loader","KTX2Loader","TilesRenderer","GLTFExtensionsPlugin","hex","c","Scene","WebGLRenderer","PerspectiveCamera","CameraHelper","OrthographicCamera","dirLight","DirectionalLight","ambLight","AmbientLight","Box3","Sphere","Group","Raycaster","Vector2","rayIntersectMat","MeshBasicMaterial","rayMesh","Mesh","CylinderGeometry","rayRing","TorusGeometry","onWindowResize","onPointerMove","onPointerDown","onPointerUp","onPointerLeave","gui","GUI","tileOptions","debug","exampleOptions","v","Stats","updateOrthoCamera","bounds","startPos","endPos","info","str","val","name","aspect","plugin","closestHit","point","normal","render","dist","cacheFullness","geomSet","count","g","BufferGeometryUtils.estimateBytesUsed","memory","programCount"],"mappings":"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"}