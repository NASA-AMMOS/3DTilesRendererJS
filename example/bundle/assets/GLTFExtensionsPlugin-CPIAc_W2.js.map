{"version":3,"file":"GLTFExtensionsPlugin-CPIAc_W2.js","sources":["../../../src/three/plugins/gltf/metadata/utilities/ClassPropertyHelpers.js","../../../src/three/plugins/gltf/metadata/classes/ClassProperty.js","../../../src/three/plugins/gltf/metadata/classes/PropertySetAccessor.js","../../../src/three/plugins/gltf/metadata/classes/PropertyAttributeAccessor.js","../../../src/three/plugins/gltf/metadata/classes/PropertyTableAccessor.js","../../../node_modules/three/examples/jsm/postprocessing/Pass.js","../../../src/three/plugins/gltf/metadata/utilities/TextureReadUtility.js","../../../src/three/plugins/gltf/metadata/utilities/TexCoordUtilities.js","../../../src/three/plugins/gltf/metadata/classes/PropertyTextureAccessor.js","../../../src/three/plugins/gltf/metadata/classes/StructuralMetadata.js","../../../src/three/plugins/gltf/GLTFStructuralMetadataExtension.js","../../../src/three/plugins/gltf/metadata/classes/MeshFeatures.js","../../../src/three/plugins/gltf/GLTFMeshFeaturesExtension.js","../../../src/three/plugins/gltf/GLTFCesiumRTCExtension.js","../../../src/three/plugins/GLTFExtensionsPlugin.js"],"sourcesContent":["import {\n\tVector2,\n\tVector3,\n\tVector4,\n\tMatrix2,\n\tMatrix3,\n\tMatrix4,\n} from 'three';\n\n// returns the field in the object with a resolved default\nexport function getField( object, key, def ) {\n\n\treturn object && key in object ? object[ key ] : def;\n\n}\n\n// checks the structural metadata type\nexport function isNumericType( type ) {\n\n\treturn type !== 'BOOLEAN' && type !== 'STRING' && type !== 'ENUM';\n\n}\n\n// check if the class property type is a float component type value\nexport function isFloatComponentType( type ) {\n\n\treturn /^FLOAT/.test( type );\n\n}\n\n// check if the class property type is a vector type\nexport function isVectorType( type ) {\n\n\treturn /^VEC/.test( type );\n\n}\n\n// check if the class property type is a matrix type\nexport function isMatrixType( type ) {\n\n\treturn /^MAT/.test( type );\n\n}\n\n// returns a value from the given buffer of the given type\nexport function readDataFromBufferToType( buffer, offset, type, target = null ) {\n\n\tif ( isMatrixType( type ) ) {\n\n\t\treturn target.fromArray( buffer, offset );\n\n\t} else if ( isVectorType( type ) ) {\n\n\t\treturn target.fromArray( buffer, offset );\n\n\t} else {\n\n\t\treturn buffer[ offset ];\n\n\t}\n\n}\n\n// gets a new instance of the given structural metadata type\nexport function getTypeInstance( property ) {\n\n\tconst { type, componentType } = property;\n\tswitch ( type ) {\n\n\t\tcase 'SCALAR': return componentType === 'INT64' ? 0n : 0;\n\t\tcase 'VEC2': return new Vector2();\n\t\tcase 'VEC3': return new Vector3();\n\t\tcase 'VEC4': return new Vector4();\n\t\tcase 'MAT2': return new Matrix2();\n\t\tcase 'MAT3': return new Matrix3();\n\t\tcase 'MAT4': return new Matrix4();\n\t\tcase 'BOOLEAN': return false;\n\t\tcase 'STRING': return '';\n\n\t\t// the final value for enums is a string but are represented as integers\n\t\t// during intermediate steps\n\t\tcase 'ENUM': return 0;\n\n\t}\n\n}\n\n// returns false if the given value is not of \"type\"\nexport function isTypeInstance( type, value ) {\n\n\tif ( value === null || value === undefined ) {\n\n\t\treturn false;\n\n\t}\n\n\tswitch ( type ) {\n\n\t\tcase 'SCALAR': return typeof value === 'number' || typeof value === 'bigint';\n\t\tcase 'VEC2': return value.isVector2;\n\t\tcase 'VEC3': return value.isVector3;\n\t\tcase 'VEC4': return value.isVector4;\n\t\tcase 'MAT2': return value.isMatrix2;\n\t\tcase 'MAT3': return value.isMatrix3;\n\t\tcase 'MAT4': return value.isMatrix4;\n\t\tcase 'BOOLEAN': return typeof value === 'boolean';\n\t\tcase 'STRING': return typeof value === 'string';\n\t\tcase 'ENUM': return typeof value === 'number' || typeof value === 'bigint';\n\n\t}\n\n\tthrow new Error( 'ClassProperty: invalid type.' );\n\n}\n\n// gets a new numeric array constructor from the given structural metadata type\nexport function getArrayConstructorFromComponentType( componentType, type = null ) {\n\n\tswitch ( componentType ) {\n\n\t\tcase 'INT8': return Int8Array;\n\t\tcase 'INT16': return Int16Array;\n\t\tcase 'INT32': return Int32Array;\n\t\tcase 'INT64': return BigInt64Array;\n\n\t\tcase 'UINT8': return Uint8Array;\n\t\tcase 'UINT16': return Uint16Array;\n\t\tcase 'UINT32': return Uint32Array;\n\t\tcase 'UINT64': return BigUint64Array;\n\n\t\tcase 'FLOAT32': return Float32Array;\n\t\tcase 'FLOAT64': return Float64Array;\n\n\t}\n\n\tswitch ( type ) {\n\n\t\tcase 'BOOLEAN': return Uint8Array;\n\t\tcase 'STRING': return Uint8Array;\n\n\t}\n\n\tthrow new Error( 'ClassProperty: invalid type.' );\n\n}\n\n// resolve a full default value for the given property including arrays\nexport function resolveDefault( property, target = null ) {\n\n\tconst array = property.array;\n\tif ( array ) {\n\n\t\ttarget = target && Array.isArray( target ) ? target : [];\n\t\ttarget.length = property.count;\n\t\tfor ( let i = 0, l = target.length; i < l; i ++ ) {\n\n\t\t\ttarget[ i ] = resolveDefaultElement( property, target[ i ] );\n\n\t\t}\n\n\t} else {\n\n\t\ttarget = resolveDefaultElement( property, target );\n\n\t}\n\n\treturn target;\n\n}\n\n// gets the default value of the given type\nexport function resolveDefaultElement( property, target = null ) {\n\n\tconst defaultValue = property.default;\n\tconst type = property.type;\n\n\ttarget = target || getTypeInstance( property );\n\n\tif ( defaultValue === null ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 'SCALAR': return 0;\n\t\t\tcase 'VEC2': return target.set( 0, 0 );\n\t\t\tcase 'VEC3': return target.set( 0, 0, 0 );\n\t\t\tcase 'VEC4': return target.set( 0, 0, 0, 0 );\n\t\t\tcase 'MAT2': return target.identity();\n\t\t\tcase 'MAT3': return target.identity();\n\t\t\tcase 'MAT4': return target.identity();\n\t\t\tcase 'BOOLEAN': return false;\n\t\t\tcase 'STRING': return '';\n\t\t\tcase 'ENUM': return '';\n\n\t\t}\n\n\t\tthrow new Error( 'ClassProperty: invalid type.' );\n\n\t} else {\n\n\t\tif ( isMatrixType( type ) ) {\n\n\t\t\ttarget.fromArray( defaultValue );\n\n\t\t} else if ( isVectorType( type ) ) {\n\n\t\t\ttarget.fromArray( defaultValue );\n\n\t\t} else {\n\n\t\t\treturn defaultValue;\n\n\t\t}\n\n\t}\n\n}\n\n// check for of instances of \"no data\" in the given target value and adjust them to the\n// default value.\nexport function resolveNoData( property, target ) {\n\n\tif ( property.noData === null ) {\n\n\t\treturn target;\n\n\t}\n\n\tconst noData = property.noData;\n\tconst type = property.type;\n\tif ( Array.isArray( target ) ) {\n\n\t\tfor ( let i = 0, l = target.length; i < l; i ++ ) {\n\n\t\t\ttarget[ i ] = performResolution( target[ i ] );\n\n\t\t}\n\n\t} else {\n\n\t\ttarget = performResolution( target );\n\n\t}\n\n\treturn target;\n\n\t// replace the value with a default if no data is encountered\n\tfunction performResolution( target ) {\n\n\t\tif ( isNoDataEqual( target ) ) {\n\n\t\t\ttarget = resolveDefaultElement( property, target );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\t// checks if the given value is equal to the no data value\n\tfunction isNoDataEqual( value ) {\n\n\t\tif ( isMatrixType( type ) ) {\n\n\t\t\tconst elements = value.elements;\n\t\t\tfor ( let i = 0, l = noData.length; i < l; i ++ ) {\n\n\t\t\t\tif ( noData[ i ] !== elements[ i ] ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else if ( isVectorType( type ) ) {\n\n\t\t\tfor ( let i = 0, l = noData.length; i < l; i ++ ) {\n\n\t\t\t\tif ( noData[ i ] !== value.getComponent( i ) ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\treturn noData === value;\n\n\t\t}\n\n\t}\n\n}\n\nexport function normalizeValue( componentType, v ) {\n\n\t// formulas defined here but normalizing 64 bit ints will result in precision loss:\n\t// https://github.com/CesiumGS/3d-tiles/tree/main/specification/Metadata/#normalized-values\n\tswitch ( componentType ) {\n\n\t\tcase 'INT8': return Math.max( v / 127.0, - 1.0 );\n\t\tcase 'INT16': return Math.max( v, 32767.0, - 1.0 );\n\t\tcase 'INT32': return Math.max( v / 2147483647.0, - 1.0 );\n\t\tcase 'INT64': return Math.max( Number( v ) / 9223372036854775807.0, - 1.0 ); // eslint-disable-line no-loss-of-precision\n\n\t\tcase 'UINT8': return v / 255.0;\n\t\tcase 'UINT16': return v / 65535.0;\n\t\tcase 'UINT32': return v / 4294967295.0;\n\t\tcase 'UINT64': return Number( v ) / 18446744073709551615.0; // eslint-disable-line no-loss-of-precision\n\n\t}\n\n}\n\n// scales the value based on property settings\n// the provided target value is normalized, scaled, and then offset if numeric\nexport function adjustValueScaleOffset( property, target ) {\n\n\tconst {\n\t\ttype,\n\t\tcomponentType,\n\t\tscale,\n\t\toffset,\n\t\tnormalized,\n\t} = property;\n\n\tif ( Array.isArray( target ) ) {\n\n\t\tfor ( let i = 0, l = target.length; i < l; i ++ ) {\n\n\t\t\ttarget[ i ] = adjustFromType( target[ i ] );\n\n\t\t}\n\n\t} else {\n\n\t\ttarget = adjustFromType( target );\n\n\t}\n\n\treturn target;\n\n\tfunction adjustFromType( value ) {\n\n\t\tif ( isMatrixType( type ) ) {\n\n\t\t\tvalue = adjustMatrix( value );\n\n\t\t} else if ( isVectorType( type ) ) {\n\n\t\t\tvalue = adjustVector( value );\n\n\t\t} else {\n\n\t\t\tvalue = adjustScalar( value );\n\n\t\t}\n\n\t\treturn value;\n\n\t}\n\n\tfunction adjustVector( value ) {\n\n\t\tvalue.x = adjustScalar( value.x );\n\t\tvalue.y = adjustScalar( value.y );\n\t\tif ( 'z' in value ) value.z = adjustScalar( value.z );\n\t\tif ( 'w' in value ) value.w = adjustScalar( value.w );\n\t\treturn value;\n\n\t}\n\n\tfunction adjustMatrix( value ) {\n\n\t\tconst elements = value.elements;\n\t\tfor ( let i = 0, l = elements.length; i < l; i ++ ) {\n\n\t\t\telements[ i ] = adjustScalar( elements[ i ] );\n\n\t\t}\n\n\t\treturn value;\n\n\t}\n\n\tfunction adjustScalar( value ) {\n\n\t\tif ( normalized ) {\n\n\t\t\tvalue = normalizeValue( componentType, value );\n\n\t\t}\n\n\t\tif ( normalized || isFloatComponentType( componentType ) ) {\n\n\t\t\tvalue = value * scale + offset;\n\n\t\t}\n\n\t\treturn value;\n\n\t}\n\n}\n\n// Shape the given target object based on the provided property. If overrideCount is\n// provided then it will be used to specify the array length.\nexport function initializeFromProperty( property, target, overrideCount = null ) {\n\n\tif ( property.array ) {\n\n\t\tif ( ! Array.isArray( target ) ) {\n\n\t\t\ttarget = new Array( property.count || 0 );\n\n\t\t}\n\n\t\ttarget.length = overrideCount !== null ? overrideCount : property.count;\n\n\t\tfor ( let i = 0, l = target.length; i < l; i ++ ) {\n\n\t\t\tif ( ! isTypeInstance( property.type, target[ i ] ) ) {\n\n\t\t\t\ttarget[ i ] = getTypeInstance( property );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\tif ( ! isTypeInstance( property.type, target ) ) {\n\n\t\t\ttarget = getTypeInstance( property );\n\n\t\t}\n\n\t}\n\n\treturn target;\n\n}\n\n// Shape the \"target\" object based on the provided set of properties\nexport function initializeFromClass( properties, target ) {\n\n\t// remove unused fields\n\tfor ( const key in target ) {\n\n\t\tif ( ! ( key in properties ) ) {\n\n\t\t\tdelete target[ key ];\n\n\t\t}\n\n\t}\n\n\t// add and adjust any fields required by the set of properties\n\tfor ( const key in properties ) {\n\n\t\tconst prop = properties[ key ];\n\t\ttarget[ key ] = initializeFromProperty( prop, target[ key ] );\n\n\t}\n\n}\n\n// Returns the number of components required for the given type\nexport function typeToComponentCount( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 'ENUM': return 1;\n\t\tcase 'SCALAR': return 1;\n\t\tcase 'VEC2': return 2;\n\t\tcase 'VEC3': return 3;\n\t\tcase 'VEC4': return 4;\n\t\tcase 'MAT2': return 4;\n\t\tcase 'MAT3': return 9;\n\t\tcase 'MAT4': return 16;\n\n\t\t// unused\n\t\tcase 'BOOLEAN': return - 1;\n\t\tcase 'STRING': return - 1;\n\t\tdefault: return - 1;\n\n\t}\n\n}\n","import {\n\tinitializeFromProperty,\n\tadjustValueScaleOffset,\n\tgetField,\n\tisNumericType,\n\tresolveDefaultElement,\n\tresolveNoData,\n\tresolveDefault,\n} from '../utilities/ClassPropertyHelpers.js';\n\nexport class ClassProperty {\n\n\tconstructor( enums, property, accessorProperty = null ) {\n\n\t\t// initialize defaults for class property info\n\t\tthis.name = property.name || null;\n\t\tthis.description = property.description || null;\n\t\tthis.type = property.type;\n\t\tthis.componentType = property.componentType || null;\n\t\tthis.enumType = property.enumType || null;\n\t\tthis.array = property.array || false;\n\t\tthis.count = property.count || 0;\n\t\tthis.normalized = property.normalized || false;\n\t\tthis.offset = property.offset || 0;\n\t\tthis.scale = getField( property, 'scale', 1 );\n\t\tthis.max = getField( property, 'max', Infinity );\n\t\tthis.min = getField( property, 'min', - Infinity );\n\t\tthis.required = property.required || false;\n\t\tthis.noData = getField( property, 'noData', null );\n\t\tthis.default = getField( property, 'default', null );\n\t\tthis.semantic = getField( property, 'semantic', null );\n\t\tthis.enumSet = null;\n\t\tthis.accessorProperty = accessorProperty;\n\n\t\t// accessor properties can override min, max, offset, and scale values\n\t\tif ( accessorProperty ) {\n\n\t\t\tthis.offset = getField( accessorProperty, 'offset', this.offset );\n\t\t\tthis.scale = getField( accessorProperty, 'scale', this.scale );\n\t\t\tthis.max = getField( accessorProperty, 'max', this.max );\n\t\t\tthis.min = getField( accessorProperty, 'min', this.min );\n\n\t\t}\n\n\t\t// get the component type for the provided enum\n\t\tif ( property.type === 'ENUM' ) {\n\n\t\t\tthis.enumSet = enums[ this.enumType ];\n\t\t\tif ( this.componentType === null ) {\n\n\t\t\t\tthis.componentType = getField( this.enumSet, 'valueType', 'UINT16' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// shape the given target to match the data type of the property\n\t// enums are set to their integer value\n\tshapeToProperty( target, countOverride = null ) {\n\n\t\treturn initializeFromProperty( this, target, countOverride );\n\n\t}\n\n\t// resolve the given object to the default value for the property for a single element\n\t// enums are set to a default string\n\tresolveDefaultElement( target ) {\n\n\t\treturn resolveDefaultElement( this, target );\n\n\t}\n\n\t// resolve the target to the default value for the property for every element if it's an array\n\t// enums are set to a default string\n\tresolveDefault( target ) {\n\n\t\treturn resolveDefault( this, target );\n\n\t}\n\n\t// converts any instances of no data to the default value\n\tresolveNoData( target ) {\n\n\t\treturn resolveNoData( this, target );\n\n\t}\n\n\t// converts enums integers in the given target to strings\n\tresolveEnumsToStrings( target ) {\n\n\t\tconst enumSet = this.enumSet;\n\t\tif ( this.type === 'ENUM' ) {\n\n\t\t\tif ( Array.isArray( target ) ) {\n\n\t\t\t\tfor ( let i = 0, l = target.length; i < l; i ++ ) {\n\n\t\t\t\t\ttarget[ i ] = getEnumName( target[ i ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttarget = getEnumName( target );\n\n\t\t\t}\n\n\n\t\t}\n\n\t\treturn target;\n\n\t\tfunction getEnumName( index ) {\n\n\t\t\tconst match = enumSet.values.find( e => e.value === index );\n\t\t\tif ( match === null ) {\n\n\t\t\t\t// the default \"default enum\" value is an empty string when we can't find a match\n\t\t\t\t// in a case where enums are defined correctly we should never get here.\n\t\t\t\treturn '';\n\n\t\t\t} else {\n\n\t\t\t\treturn match.name;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// apply scales\n\tadjustValueScaleOffset( target ) {\n\n\t\tif ( isNumericType( this.type ) ) {\n\n\t\t\treturn adjustValueScaleOffset( this, target );\n\n\t\t} else {\n\n\t\t\treturn target;\n\n\t\t}\n\n\t}\n\n}\n","import { ClassProperty } from './ClassProperty.js';\n\nexport class PropertySetAccessor {\n\n\tconstructor( definition, classes = {}, enums = {}, data = null ) {\n\n\t\tthis.definition = definition;\n\t\tthis.class = classes[ definition.class ];\n\t\tthis.className = definition.class;\n\t\tthis.enums = enums;\n\t\tthis.data = data;\n\t\tthis.name = 'name' in definition ? definition.name : null;\n\n\t\tthis.properties = null;\n\n\t}\n\n\tgetPropertyNames() {\n\n\t\treturn Object.keys( this.class.properties );\n\n\t}\n\n\tincludesData( name ) {\n\n\t\treturn Boolean( this.definition.properties[ name ] );\n\n\t}\n\n\tdispose() {}\n\n\t_initProperties( propertyClass = ClassProperty ) {\n\n\t\tconst properties = {};\n\t\tfor ( const key in this.class.properties ) {\n\n\t\t\tproperties[ key ] = new propertyClass( this.enums, this.class.properties[ key ], this.definition.properties[ key ] );\n\n\t\t}\n\n\t\tthis.properties = properties;\n\n\t}\n\n}\n","import { initializeFromClass, isMatrixType, isVectorType } from '../utilities/ClassPropertyHelpers.js';\nimport { ClassProperty } from './ClassProperty.js';\nimport { PropertySetAccessor } from './PropertySetAccessor.js';\n\nclass PropertyAttributeClassProperty extends ClassProperty {\n\n\tconstructor( enums, classProperty, attributeProperty = null ) {\n\n\t\tsuper( enums, classProperty, attributeProperty );\n\n\t\tthis.attribute = attributeProperty?.attribute ?? null;\n\n\t}\n\n}\n\nexport class PropertyAttributeAccessor extends PropertySetAccessor {\n\n\tconstructor( ...args ) {\n\n\t\tsuper( ...args );\n\n\t\tthis.isPropertyAttributeAccessor = true;\n\t\tthis._initProperties( PropertyAttributeClassProperty );\n\n\t}\n\n\tgetData( id, geometry, target = {} ) {\n\n\t\tconst properties = this.properties;\n\t\tinitializeFromClass( properties, target );\n\n\t\tfor ( const name in properties ) {\n\n\t\t\ttarget[ name ] = this.getPropertyValue( name, id, geometry, target[ name ] );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetPropertyValue( name, id, geometry, target = null ) {\n\n\t\t// NOTE: arrays are not supported via attribute accessors\n\t\tif ( id >= this.count ) {\n\n\t\t\tthrow new Error( 'PropertyAttributeAccessor: Requested index is outside the range of the buffer.' );\n\n\t\t}\n\n\t\t// use a default of the texture accessor definition does not include the value\n\t\tconst property = this.properties[ name ];\n\t\tconst type = property.type;\n\t\tif ( ! property ) {\n\n\t\t\tthrow new Error( 'PropertyAttributeAccessor: Requested class property does not exist.' );\n\n\t\t} else if ( ! this.definition.properties[ name ] ) {\n\n\t\t\treturn property.resolveDefault( target );\n\n\t\t}\n\n\t\t// initialize the array\n\t\ttarget = property.shapeToProperty( target );\n\n\t\t// Read the data values from the attribute\n\t\tconst attribute = geometry.getAttribute( property.attribute.toLowerCase() );\n\t\tif ( isMatrixType( type ) ) {\n\n\t\t\tconst elements = target.elements;\n\t\t\tfor ( let i = 0, l = elements.length; i < l; i < l ) {\n\n\t\t\t\telements[ i ] = attribute.getComponent( id, i );\n\n\t\t\t}\n\n\t\t} else if ( isVectorType( type ) ) {\n\n\t\t\ttarget.fromBufferAttribute( attribute, id );\n\n\t\t} else if ( type === 'SCALAR' || type === 'ENUM' ) {\n\n\t\t\ttarget = attribute.getX( id );\n\n\t\t} else {\n\n\t\t\t// BOOLEAN, STRING not supported\n\t\t\tthrow new Error( 'StructuredMetadata.PropertyAttributeAccessor: BOOLEAN and STRING types are not supported by property attributes.' );\n\n\t\t}\n\n\t\t// scale the numeric values\n\t\ttarget = property.adjustValueScaleOffset( target );\n\n\t\t// convert to enum strings - no data enum values are stored as strings\n\t\ttarget = property.resolveEnumsToStrings( target );\n\n\t\t// resolve to default values\n\t\ttarget = property.resolveNoData( target );\n\n\t\treturn target;\n\n\t}\n\n}\n","import { ClassProperty } from './ClassProperty.js';\nimport { PropertySetAccessor } from './PropertySetAccessor.js';\nimport {\n\tinitializeFromClass,\n\tgetArrayConstructorFromComponentType,\n\treadDataFromBufferToType,\n\tgetField,\n\tisNumericType,\n\ttypeToComponentCount,\n} from '../utilities/ClassPropertyHelpers.js';\n\nclass PropertyTableClassProperty extends ClassProperty {\n\n\tconstructor( enums, classProperty, tableProperty = null ) {\n\n\t\tsuper( enums, classProperty, tableProperty );\n\n\t\tthis.values = tableProperty?.values ?? null;\n\t\tthis.valueLength = typeToComponentCount( this.type );\n\t\tthis.arrayOffsets = getField( tableProperty, 'arrayOffsets', null );\n\t\tthis.stringOffsets = getField( tableProperty, 'stringOffsets', null );\n\t\tthis.arrayOffsetType = getField( tableProperty, 'arrayOffsetType', 'UINT32' );\n\t\tthis.stringOffsetType = getField( tableProperty, 'stringOffsetType', 'UINT32' );\n\n\t}\n\n\t// returns the necessary array length based on the array offsets if present\n\tgetArrayLengthFromId( buffers, id ) {\n\n\t\tlet count = this.count;\n\t\tif ( this.arrayOffsets !== null ) {\n\n\t\t\tconst { arrayOffsets, arrayOffsetType } = this;\n\t\t\tconst bufferCons = getArrayConstructorFromComponentType( arrayOffsetType );\n\t\t\tconst arr = new bufferCons( buffers[ arrayOffsets ] );\n\t\t\tcount = arr[ id + 1 ] - arr[ id ];\n\n\t\t}\n\n\t\treturn count;\n\n\t}\n\n\t// returns the index offset into the data buffer for the given id based on the\n\t// the array offsets if present\n\tgetIndexOffsetFromId( buffers, id ) {\n\n\t\tlet indexOffset = id;\n\t\tif ( this.arrayOffsets ) {\n\n\t\t\tconst { arrayOffsets, arrayOffsetType } = this;\n\t\t\tconst bufferCons = getArrayConstructorFromComponentType( arrayOffsetType );\n\t\t\tconst arr = new bufferCons( buffers[ arrayOffsets ] );\n\t\t\tindexOffset = arr[ indexOffset ];\n\n\t\t} else if ( this.array ) {\n\n\t\t\t// TODO: why do this? Revisit\n\t\t\tindexOffset *= this.count;\n\n\t\t}\n\n\t\treturn indexOffset;\n\n\t}\n\n}\n\nexport class PropertyTableAccessor extends PropertySetAccessor {\n\n\tconstructor( ...args ) {\n\n\t\tsuper( ...args );\n\n\t\tthis.isPropertyTableAccessor = true;\n\t\tthis.count = this.definition.count;\n\n\t\tthis._initProperties( PropertyTableClassProperty );\n\n\t}\n\n\tgetData( id, target = {} ) {\n\n\t\tconst properties = this.properties;\n\t\tinitializeFromClass( properties, target );\n\n\t\tfor ( const name in properties ) {\n\n\t\t\ttarget[ name ] = this.getPropertyValue( name, id, target[ name ] );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\t// reads an individual element\n\t_readValueAtIndex( name, id, index, target = null ) {\n\n\t\tconst property = this.properties[ name ];\n\t\tconst { componentType, type } = property;\n\n\t\tconst buffers = this.data;\n\t\tconst bufferView = buffers[ property.values ];\n\t\tconst bufferCons = getArrayConstructorFromComponentType( componentType, type );\n\t\tconst dataArray = new bufferCons( bufferView );\n\n\t\t// array offsets contain element offsets, not byte offsets\n\t\tconst indexOffset = property.getIndexOffsetFromId( buffers, id );\n\n\t\tif ( isNumericType( type ) || type === 'ENUM' ) {\n\n\t\t\t// \"readDataFromBufferToType\" takes the start offset to read from so we multiply the\n\t\t\t// index by the final value length\n\t\t\treturn readDataFromBufferToType( dataArray, ( indexOffset + index ) * property.valueLength, type, target );\n\n\t\t} else if ( type === 'STRING' ) {\n\n\t\t\t// https://github.com/CesiumGS/3d-tiles/tree/main/specification/Metadata/#variable-length-arrays\n\n\t\t\tlet stringIndex = indexOffset + index;\n\t\t\tlet stringLength = 0;\n\t\t\tif ( property.stringOffsets !== null ) {\n\n\t\t\t\t// get the string lengths and beginning offsets if variable\n\t\t\t\tconst { stringOffsets, stringOffsetType } = property;\n\t\t\t\tconst bufferCons = getArrayConstructorFromComponentType( stringOffsetType );\n\t\t\t\tconst stringOffsetBuffer = new bufferCons( buffers[ stringOffsets ] );\n\t\t\t\tstringLength = stringOffsetBuffer[ stringIndex + 1 ] - stringOffsetBuffer[ stringIndex ];\n\t\t\t\tstringIndex = stringOffsetBuffer[ stringIndex ];\n\n\t\t\t}\n\n\t\t\tconst byteArray = new Uint8Array( dataArray.buffer, stringIndex, stringLength );\n\t\t\ttarget = new TextDecoder().decode( byteArray );\n\n\t\t} else if ( type === 'BOOLEAN' ) {\n\n\t\t\tconst offset = indexOffset + index;\n\t\t\tconst byteIndex = Math.floor( offset / 8 );\n\t\t\tconst bitIndex = offset % 8;\n\t\t\tconst bitValue = ( dataArray[ byteIndex ] >> bitIndex ) & 1;\n\t\t\ttarget = bitValue === 1;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\t// Reads the data for the given table index\n\tgetPropertyValue( name, id, target = null ) {\n\n\t\t// check if the requested id is outside of the size of the table\n\t\tif ( id >= this.count ) {\n\n\t\t\tthrow new Error( 'PropertyTableAccessor: Requested index is outside the range of the table.' );\n\n\t\t}\n\n\t\t// check to see if we skip this field since its not in the table\n\t\tconst property = this.properties[ name ];\n\t\tif ( ! property ) {\n\n\t\t\tthrow new Error( 'PropertyTableAccessor: Requested property does not exist.' );\n\n\t\t} else if ( ! this.definition.properties[ name ] ) {\n\n\t\t\treturn property.resolveDefault( target );\n\n\t\t}\n\n\t\t// get the dynamic array count from the property buffer\n\t\tconst array = property.array;\n\t\tconst buffers = this.data;\n\t\tconst count = property.getArrayLengthFromId( buffers, id );\n\n\t\t// initialize the array\n\t\ttarget = property.shapeToProperty( target, count );\n\n\t\t// read all data\n\t\tif ( array ) {\n\n\t\t\tfor ( let i = 0, l = target.length; i < l; i ++ ) {\n\n\t\t\t\ttarget[ i ] = this._readValueAtIndex( name, id, i, target[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\ttarget = this._readValueAtIndex( name, id, 0, target );\n\n\t\t}\n\n\t\t// scale the numeric values\n\t\ttarget = property.adjustValueScaleOffset( target );\n\n\t\t// convert to enum strings - no data enum values are stored as strings\n\t\ttarget = property.resolveEnumsToStrings( target );\n\n\t\t// resolve to default values\n\t\ttarget = property.resolveNoData( target );\n\n\t\treturn target;\n\n\t}\n\n}\n","import {\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tOrthographicCamera,\n\tMesh\n} from 'three';\n\nclass Pass {\n\n\tconstructor() {\n\n\t\tthis.isPass = true;\n\n\t\t// if set to true, the pass is processed by the composer\n\t\tthis.enabled = true;\n\n\t\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\t\tthis.needsSwap = true;\n\n\t\t// if set to true, the pass clears its buffer before rendering\n\t\tthis.clear = false;\n\n\t\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\t\tthis.renderToScreen = false;\n\n\t}\n\n\tsetSize( /* width, height */ ) {}\n\n\trender( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n\tdispose() {}\n\n}\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nconst _camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n// https://github.com/mrdoob/three.js/pull/21358\n\nclass FullscreenTriangleGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( [ - 1, 3, 0, - 1, - 1, 0, 3, - 1, 0 ], 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( [ 0, 2, 0, 0, 2, 0 ], 2 ) );\n\n\t}\n\n}\n\nconst _geometry = new FullscreenTriangleGeometry();\n\nclass FullScreenQuad {\n\n\tconstructor( material ) {\n\n\t\tthis._mesh = new Mesh( _geometry, material );\n\n\t}\n\n\tdispose() {\n\n\t\tthis._mesh.geometry.dispose();\n\n\t}\n\n\trender( renderer ) {\n\n\t\trenderer.render( this._mesh, _camera );\n\n\t}\n\n\tget material() {\n\n\t\treturn this._mesh.material;\n\n\t}\n\n\tset material( value ) {\n\n\t\tthis._mesh.material = value;\n\n\t}\n\n}\n\nexport { Pass, FullScreenQuad };\n","import { WebGLRenderTarget, WebGLRenderer, Box2, Vector2, ShaderMaterial, CustomBlending, ZeroFactor, OneFactor } from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\n\nconst _box = /* @__PURE__ */ new Box2();\n\n// Utility for reading sets of individual pixel values from textures\nclass _TextureReadUtility {\n\n\tconstructor() {\n\n\t\tthis._renderer = new WebGLRenderer();\n\t\tthis._target = new WebGLRenderTarget( 1, 1 );\n\t\tthis._texTarget = new WebGLRenderTarget();\n\n\t\t// quad to render just a single pixel from the provided texture\n\t\tthis._quad = new FullScreenQuad( new ShaderMaterial( {\n\n\t\t\tblending: CustomBlending,\n\t\t\tblendDst: ZeroFactor,\n\t\t\tblendSrc: OneFactor,\n\n\t\t\tuniforms: {\n\n\t\t\t\tmap: { value: null },\n\t\t\t\tpixel: { value: new Vector2() }\n\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\t\t\t\tuniform sampler2D map;\n\t\t\t\tuniform ivec2 pixel;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tgl_FragColor = texelFetch( map, pixel, 0 );\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t} ) );\n\n\t}\n\n\t// increases the width of the target render target to support more data\n\tincreaseSizeTo( width ) {\n\n\t\tthis._target.setSize( Math.max( this._target.width, width ), 1 );\n\n\t}\n\n\t// read data from the rendered texture asynchronously\n\treadDataAsync( buffer ) {\n\n\t\tconst { _renderer, _target } = this;\n\t\treturn _renderer.readRenderTargetPixelsAsync( _target, 0, 0, buffer.length / 4, 1, buffer );\n\n\t}\n\n\t// read data from the rendered texture\n\treadData( buffer ) {\n\n\t\tconst { _renderer, _target } = this;\n\t\t_renderer.readRenderTargetPixels( _target, 0, 0, buffer.length / 4, 1, buffer );\n\n\t}\n\n\t// render a single pixel from the source at the destination point on the render target\n\t// takes the texture, pixel to read from, and pixel to render in to\n\trenderPixelToTarget( texture, pixel, dstPixel ) {\n\n\t\tconst { _renderer, _target } = this;\n\n\t\t// copies the pixel directly to the target buffer\n\t\t_box.min.copy( pixel );\n\t\t_box.max.copy( pixel );\n\t\t_box.max.x += 1;\n\t\t_box.max.y += 1;\n\t\t_renderer.initRenderTarget( _target );\n\t\t_renderer.copyTextureToTexture( texture, _target.texture, _box, dstPixel, 0 );\n\n\t}\n\n}\n\n// Create a wrapper class to defer instantiation of the WebGLRenderer until it's needed\n// See NASA-AMMOS/3DTilesRendererJS#905\nexport const TextureReadUtility = /* @__PURE__ */ new ( class {\n\n\tconstructor() {\n\n\t\tlet reader = null;\n\t\tObject\n\t\t\t.getOwnPropertyNames( _TextureReadUtility.prototype )\n\t\t\t.forEach( key => {\n\n\t\t\t\tif ( key !== 'constructor' ) {\n\n\t\t\t\t\tthis[ key ] = ( ...args ) => {\n\n\t\t\t\t\t\treader = reader || new _TextureReadUtility();\n\t\t\t\t\t\treturn reader[ key ]( ...args );\n\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t}\n\n} )();\n","import { Vector2 } from 'three';\n\nconst _uv0 = /* @__PURE__ */ new Vector2();\nconst _uv1 = /* @__PURE__ */ new Vector2();\nconst _uv2 = /* @__PURE__ */ new Vector2();\n\n// returns the uv attribute of the given index\nexport function getTextureCoordAttribute( geometry, index ) {\n\n\tif ( index === 0 ) {\n\n\t\treturn geometry.getAttribute( 'uv' );\n\n\t} else {\n\n\t\treturn geometry.getAttribute( `uv${ index }` );\n\n\t}\n\n}\n\n// returns the vertex indices associated with the triangle index\nexport function getTriangleVertexIndices( geometry, faceIndex, target = new Array( 3 ) ) {\n\n\t// get the attribute indices\n\tlet i0 = 3 * faceIndex;\n\tlet i1 = 3 * faceIndex + 1;\n\tlet i2 = 3 * faceIndex + 2;\n\tif ( geometry.index ) {\n\n\t\ti0 = geometry.index.getX( i0 );\n\t\ti1 = geometry.index.getX( i1 );\n\t\ti2 = geometry.index.getX( i2 );\n\n\t}\n\n\ttarget[ 0 ] = i0;\n\ttarget[ 1 ] = i1;\n\ttarget[ 2 ] = i2;\n\treturn target;\n\n}\n\n// takes a tex coord index, barycoord, vertex indices, and target to set\n// sets target to the interpolated uv value\nexport function getTexCoord( geometry, texCoord, barycoord, indices, target ) {\n\n\tconst [ i0, i1, i2 ] = indices;\n\tconst attr = getTextureCoordAttribute( geometry, texCoord );\n\t_uv0.fromBufferAttribute( attr, i0 );\n\t_uv1.fromBufferAttribute( attr, i1 );\n\t_uv2.fromBufferAttribute( attr, i2 );\n\n\ttarget\n\t\t.set( 0, 0, 0 )\n\t\t.addScaledVector( _uv0, barycoord.x )\n\t\t.addScaledVector( _uv1, barycoord.y )\n\t\t.addScaledVector( _uv2, barycoord.z );\n\n}\n\n// gets the x, y index of the pixel at the given uv coordinate\nexport function getTexelIndices( uv, width, height, target ) {\n\n\tconst fx = uv.x - Math.floor( uv.x );\n\tconst fy = uv.y - Math.floor( uv.y );\n\tconst px = Math.floor( ( fx * width ) % width );\n\tconst py = Math.floor( ( fy * height ) % height );\n\ttarget.set( px, py );\n\treturn target;\n\n}\n","import { Vector2 } from 'three';\nimport { PropertySetAccessor } from './PropertySetAccessor.js';\nimport { ClassProperty } from './ClassProperty.js';\nimport { TextureReadUtility } from '../utilities/TextureReadUtility.js';\nimport { getTexCoord, getTexelIndices, getTriangleVertexIndices } from '../utilities/TexCoordUtilities.js';\nimport {\n\tinitializeFromClass,\n\tinitializeFromProperty,\n\tgetArrayConstructorFromComponentType,\n\treadDataFromBufferToType,\n\tgetField\n} from '../utilities/ClassPropertyHelpers.js';\n\nconst _uv = /* @__PURE__ */ new Vector2();\nconst _srcPixel = /* @__PURE__ */ new Vector2();\nconst _dstPixel = /* @__PURE__ */ new Vector2();\n\nclass PropertyTextureClassProperty extends ClassProperty {\n\n\tconstructor( enums, classProperty, textureProperty = null ) {\n\n\t\tsuper( enums, classProperty, textureProperty );\n\n\t\tthis.channels = getField( textureProperty, 'channels', [ 0 ] );\n\t\tthis.index = getField( textureProperty, 'index', null );\n\t\tthis.texCoord = getField( textureProperty, 'texCoord', null );\n\t\tthis.valueLength = parseInt( this.type.replace( /[^0-9]/g, '' ) ) || 1;\n\n\t}\n\n\t// takes the buffer to read from and the value index to read\n\treadDataFromBuffer( buffer, index, target = null ) {\n\n\t\tconst type = this.type;\n\t\tif ( type === 'BOOLEAN' || type === 'STRING' ) {\n\n\t\t\tthrow new Error( 'PropertyTextureAccessor: BOOLEAN and STRING types not supported.' );\n\n\t\t}\n\n\t\t// \"readDataFromBufferToType\" takes the start offset to read from so we multiply the index by the\n\t\t// final value length\n\t\treturn readDataFromBufferToType( buffer, index * this.valueLength, type, target );\n\n\t}\n\n}\n\n// Reads and accesses data encoded to textures\nexport class PropertyTextureAccessor extends PropertySetAccessor {\n\n\tconstructor( ...args ) {\n\n\t\tsuper( ...args );\n\n\t\tthis.isPropertyTextureAccessor = true;\n\t\tthis._asyncRead = false;\n\n\t\tthis._initProperties( PropertyTextureClassProperty );\n\n\t}\n\n\t// Reads the full set of property data\n\tgetData( faceIndex, barycoord, geometry, target = {} ) {\n\n\t\tconst properties = this.properties;\n\t\tinitializeFromClass( properties, target );\n\n\t\tconst names = Object.keys( properties );\n\t\tconst results = names.map( n => target[ n ] );\n\t\tthis.getPropertyValuesAtTexel( names, faceIndex, barycoord, geometry, results );\n\n\t\tnames.forEach( ( n, i ) => target[ n ] = results[ i ] );\n\t\treturn target;\n\n\t}\n\n\t// Reads the full set of property data asynchronously\n\tasync getDataAsync( faceIndex, barycoord, geometry, target = {} ) {\n\n\t\tconst properties = this.properties;\n\t\tinitializeFromClass( properties, target );\n\n\t\tconst names = Object.keys( properties );\n\t\tconst results = names.map( n => target[ n ] );\n\t\tawait this.getPropertyValuesAtTexelAsync( names, faceIndex, barycoord, geometry, results );\n\n\t\tnames.forEach( ( n, i ) => target[ n ] = results[ i ] );\n\t\treturn target;\n\n\t}\n\n\t// Reads values asynchronously\n\tgetPropertyValuesAtTexelAsync( ...args ) {\n\n\t\tthis._asyncRead = true;\n\t\tconst result = this.getPropertyValuesAtTexel( ...args );\n\t\tthis._asyncRead = false;\n\t\treturn result;\n\n\t}\n\n\t// Reads values from the textures synchronously\n\tgetPropertyValuesAtTexel( names, faceIndex, barycoord, geometry, target = [] ) {\n\n\t\t// resize our targets appropriately\n\t\twhile ( target.length < names.length ) target.push( null );\n\t\ttarget.length = names.length;\n\t\tTextureReadUtility.increaseSizeTo( target.length );\n\n\t\t// get the attribute indices\n\t\tconst textures = this.data;\n\t\tconst accessorProperties = this.definition.properties;\n\t\tconst properties = this.properties;\n\t\tconst indices = getTriangleVertexIndices( geometry, faceIndex );\n\t\tfor ( let i = 0, l = names.length; i < l; i ++ ) {\n\n\t\t\t// skip any requested class schema properties that are not provided via the accessor\n\t\t\tconst name = names[ i ];\n\t\t\tif ( ! accessorProperties[ name ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// get the attribute of the target tex coord\n\t\t\tconst property = properties[ name ];\n\t\t\tconst texture = textures[ property.index ];\n\t\t\tgetTexCoord( geometry, property.texCoord, barycoord, indices, _uv );\n\t\t\tgetTexelIndices( _uv, texture.image.width, texture.image.height, _srcPixel );\n\t\t\t_dstPixel.set( i, 0 );\n\n\t\t\tTextureReadUtility.renderPixelToTarget( texture, _srcPixel, _dstPixel );\n\n\t\t}\n\n\t\t// read the data\n\t\tconst buffer = new Uint8Array( names.length * 4 );\n\t\tif ( this._asyncRead ) {\n\n\t\t\treturn TextureReadUtility\n\t\t\t\t.readDataAsync( buffer )\n\t\t\t\t.then( () => {\n\n\t\t\t\t\treadTextureSampleResults.call( this );\n\t\t\t\t\treturn target;\n\n\t\t\t\t} );\n\n\t\t} else {\n\n\t\t\tTextureReadUtility.readData( buffer );\n\t\t\treadTextureSampleResults.call( this );\n\n\t\t\treturn target;\n\n\t\t}\n\n\t\tfunction readTextureSampleResults() {\n\n\t\t\tfor ( let i = 0, l = names.length; i < l; i ++ ) {\n\n\t\t\t\tconst name = names[ i ];\n\t\t\t\tconst property = properties[ name ];\n\t\t\t\tconst type = property.type;\n\n\t\t\t\t// initialize the output value\n\t\t\t\ttarget[ i ] = initializeFromProperty( property, target[ i ] );\n\n\t\t\t\t// use a default of the texture accessor definition does not include the value\n\t\t\t\tif ( ! property ) {\n\n\t\t\t\t\tthrow new Error( 'PropertyTextureAccessor: Requested property does not exist.' );\n\n\t\t\t\t} else if ( ! accessorProperties[ name ] ) {\n\n\t\t\t\t\ttarget[ i ] = property.resolveDefault( target );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// get the final array length to read all data based on used buffer data\n\t\t\t\tconst length = property.valueLength * ( property.count || 1 );\n\n\t\t\t\t// set the data read back from the texture to the target type\n\t\t\t\tconst data = property.channels.map( c => buffer[ 4 * i + c ] );\n\t\t\t\tconst componentType = property.componentType;\n\t\t\t\tconst BufferCons = getArrayConstructorFromComponentType( componentType, type );\n\t\t\t\tconst readBuffer = new BufferCons( length );\n\t\t\t\tnew Uint8Array( readBuffer.buffer ).set( data );\n\n\t\t\t\t// read all the data\n\t\t\t\tif ( property.array ) {\n\n\t\t\t\t\tconst arr = target[ i ];\n\t\t\t\t\tfor ( let j = 0, lj = arr.length; j < lj; j ++ ) {\n\n\t\t\t\t\t\tarr[ j ] = property.readDataFromBuffer( readBuffer, j, arr[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttarget[ i ] = property.readDataFromBuffer( readBuffer, 0, target[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t// scale the numeric values\n\t\t\t\ttarget[ i ] = property.adjustValueScaleOffset( target[ i ] );\n\n\t\t\t\t// convert to enum strings - no data enum values are stored as strings\n\t\t\t\ttarget[ i ] = property.resolveEnumsToStrings( target[ i ] );\n\n\t\t\t\t// resolve to default values\n\t\t\t\ttarget[ i ] = property.resolveNoData( target[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// dispose all of the texture data used\n\tdispose() {\n\n\t\tthis.data.forEach( texture => {\n\n\t\t\tif ( texture ) {\n\n\t\t\t\ttexture.dispose();\n\n\t\t\t\tif ( texture.image instanceof ImageBitmap ) {\n\n\t\t\t\t\ttexture.image.close();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n","import { PropertyAttributeAccessor } from './PropertyAttributeAccessor.js';\nimport { PropertyTableAccessor } from './PropertyTableAccessor.js';\nimport { PropertyTextureAccessor } from './PropertyTextureAccessor.js';\n\nexport class StructuralMetadata {\n\n\tconstructor( definition, textures, buffers, nodeMetadata = null, object = null ) {\n\n\t\tconst {\n\t\t\tschema,\n\t\t\tpropertyTables = [],\n\t\t\tpropertyTextures = [],\n\t\t\tpropertyAttributes = [],\n\t\t} = definition;\n\n\t\tconst { enums, classes } = schema;\n\t\tconst tableAccessors = propertyTables.map( t => new PropertyTableAccessor( t, classes, enums, buffers ) );\n\t\tlet textureAccessors = [];\n\t\tlet attributeAccessors = [];\n\n\t\tif ( nodeMetadata ) {\n\n\t\t\tif ( nodeMetadata.propertyTextures ) {\n\n\t\t\t\ttextureAccessors = nodeMetadata.propertyTextures.map( i => new PropertyTextureAccessor( propertyTextures[ i ], classes, enums, textures ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeMetadata.propertyAttributes ) {\n\n\t\t\t\tattributeAccessors = nodeMetadata.propertyAttributes.map( i => new PropertyAttributeAccessor( propertyAttributes[ i ], classes, enums ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.schema = schema;\n\t\tthis.tableAccessors = tableAccessors;\n\t\tthis.textureAccessors = textureAccessors;\n\t\tthis.attributeAccessors = attributeAccessors;\n\t\tthis.object = object;\n\t\tthis.textures = textures;\n\t\tthis.nodeMetadata = nodeMetadata;\n\n\t}\n\n\t// Property Tables\n\tgetPropertyTableData( tableIndices, ids, target = null ) {\n\n\t\tif ( ! Array.isArray( tableIndices ) || ! Array.isArray( ids ) ) {\n\n\t\t\t// only return a single tables data\n\t\t\ttarget = target || {};\n\n\t\t\tconst table = this.tableAccessors[ tableIndices ];\n\t\t\ttarget = table.getData( ids, target );\n\n\t\t} else {\n\n\t\t\t// return data from an array of tables and ids\n\t\t\ttarget = target || [];\n\n\t\t\tconst length = Math.min( tableIndices.length, ids.length );\n\t\t\ttarget.length = length;\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst table = this.tableAccessors[ tableIndices[ i ] ];\n\t\t\t\ttarget[ i ] = table.getData( ids[ i ], target[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetPropertyTableInfo( tableIndices = null ) {\n\n\t\t// default to all table information\n\t\tif ( tableIndices === null ) {\n\n\t\t\ttableIndices = this.tableAccessors.map( ( t, i ) => i );\n\n\t\t}\n\n\t\tif ( Array.isArray( tableIndices ) ) {\n\n\t\t\t// return all table information from the requested list\n\t\t\treturn tableIndices.map( i => {\n\n\t\t\t\tconst table = this.tableAccessors[ i ];\n\t\t\t\treturn {\n\t\t\t\t\tname: table.name,\n\t\t\t\t\tclassName: table.definition.class,\n\t\t\t\t};\n\n\t\t\t} );\n\n\t\t} else {\n\n\t\t\t// return the one piece of table information\n\t\t\tconst table = this.tableAccessors[ tableIndices ];\n\t\t\treturn {\n\t\t\t\tname: table.name,\n\t\t\t\tclassName: table.definition.class,\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Property Textures\n\tgetPropertyTextureData( triangle, barycoord, target = [] ) {\n\n\t\tconst textureAccessors = this.textureAccessors;\n\t\ttarget.length = textureAccessors.length;\n\n\t\tfor ( let i = 0; i < textureAccessors.length; i ++ ) {\n\n\t\t\tconst accessor = textureAccessors[ i ];\n\t\t\ttarget[ i ] = accessor.getData( triangle, barycoord, this.object.geometry, target[ i ] );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tasync getPropertyTextureDataAsync( triangle, barycoord, target = [] ) {\n\n\t\tconst textureAccessors = this.textureAccessors;\n\t\ttarget.length = textureAccessors.length;\n\n\t\tconst promises = [];\n\t\tfor ( let i = 0; i < textureAccessors.length; i ++ ) {\n\n\t\t\tconst accessor = textureAccessors[ i ];\n\t\t\tconst promise = accessor\n\t\t\t\t.getDataAsync( triangle, barycoord, this.object.geometry, target[ i ] )\n\t\t\t\t.then( result => {\n\n\t\t\t\t\ttarget[ i ] = result;\n\n\t\t\t\t} );\n\n\t\t\tpromises.push( promise );\n\n\t\t}\n\n\t\tawait Promise.all( promises );\n\n\t\treturn target;\n\n\t}\n\n\tgetPropertyTextureInfo() {\n\n\t\treturn this.textureAccessors;\n\n\t}\n\n\t// Property Attributes\n\tgetPropertyAttributeData( attributeIndex, target = [] ) {\n\n\t\tconst attributeAccessors = this.attributeAccessors;\n\t\ttarget.length = attributeAccessors.length;\n\n\t\tfor ( let i = 0; i < attributeAccessors.length; i ++ ) {\n\n\t\t\tconst accessor = attributeAccessors[ i ];\n\t\t\ttarget[ i ] = accessor.getData( attributeIndex, this.object.geometry, target[ i ] );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetPropertyAttributeInfo() {\n\n\t\treturn this.attributeAccessors.map( acc => {\n\n\t\t\treturn {\n\t\t\t\tname: acc.name,\n\t\t\t\tclassName: acc.definition.class,\n\t\t\t};\n\n\t\t} );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.textureAccessors.forEach( acc => acc.dispose() );\n\t\tthis.tableAccessors.forEach( acc => acc.dispose() );\n\t\tthis.attributeAccessors.forEach( acc => acc.dispose() );\n\n\t}\n\n}\n","// https://github.com/CesiumGS/glTF/tree/3d-tiles-next/extensions/2.0/Vendor/EXT_structural_metadata\n\nimport { FileLoader } from 'three';\nimport { StructuralMetadata } from './metadata/classes/StructuralMetadata.js';\n\nconst EXT_NAME = 'EXT_structural_metadata';\n\n// returns the set of textures required by the property texture definitions\nfunction getRelevantTextures( parser, propertyTextures = [] ) {\n\n\tconst textureCount = parser.json.textures?.length || 0;\n\tconst result = new Array( textureCount ).fill( null );\n\n\tpropertyTextures.forEach( ( { properties } ) => {\n\n\t\tfor ( const key in properties ) {\n\n\t\t\tconst { index } = properties[ key ];\n\t\t\tif ( result[ index ] === null ) {\n\n\t\t\t\tresult[ index ] = parser.loadTexture( index );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\treturn Promise.all( result );\n\n}\n\n// returns the set of buffers required by the property table definitions\nfunction getRelevantBuffers( parser, propertyTables = [] ) {\n\n\tconst textureCount = parser.json.bufferViews?.length || 0;\n\tconst result = new Array( textureCount ).fill( null );\n\n\tpropertyTables.forEach( ( { properties } ) => {\n\n\t\tfor ( const key in properties ) {\n\n\t\t\tconst { values, arrayOffsets, stringOffsets } = properties[ key ];\n\t\t\tif ( result[ values ] === null ) {\n\n\t\t\t\tresult[ values ] = parser.loadBufferView( values );\n\n\t\t\t}\n\n\t\t\tif ( result[ arrayOffsets ] === null ) {\n\n\t\t\t\tresult[ arrayOffsets ] = parser.loadBufferView( arrayOffsets );\n\n\t\t\t}\n\n\t\t\tif ( result[ stringOffsets ] === null ) {\n\n\t\t\t\tresult[ stringOffsets ] = parser.loadBufferView( stringOffsets );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\treturn Promise.all( result );\n\n}\n\nexport class GLTFStructuralMetadataExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXT_NAME;\n\n\t}\n\n\tasync afterRoot( { scene, parser } ) {\n\n\t\t// skip if the extension is not present\n\t\tconst extensionsUsed = parser.json.extensionsUsed;\n\t\tif ( ! extensionsUsed || ! extensionsUsed.includes( EXT_NAME ) ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// load the remote schema definition if present\n\t\tlet schemaPromise = null;\n\t\tlet rootExtension = parser.json.extensions[ EXT_NAME ];\n\t\tif ( rootExtension.schemaUri ) {\n\n\t\t\t// TODO: cache the loaded schema so we can share it and dispose of it when the\n\t\t\t// extension is no longer available\n\t\t\tconst { manager, path, requestHeader, crossOrigin } = parser.options;\n\t\t\tconst finalUri = new URL( rootExtension.schemaUri, path ).toString();\n\t\t\tconst fileLoader = new FileLoader( manager );\n\t\t\tfileLoader.setCrossOrigin( crossOrigin );\n\t\t\tfileLoader.setResponseType( 'json' );\n\t\t\tfileLoader.setRequestHeader( requestHeader );\n\n\t\t\tschemaPromise = fileLoader.loadAsync( finalUri )\n\t\t\t\t.then( schema => {\n\n\t\t\t\t\trootExtension = { ...rootExtension, schema };\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\t// prep the textures and buffers\n\t\tconst [ textures, buffers ] = await Promise.all( [\n\t\t\tgetRelevantTextures( parser, rootExtension.propertyTextures ),\n\t\t\tgetRelevantBuffers( parser, rootExtension.propertyTables ),\n\t\t\tschemaPromise,\n\t\t] );\n\n\t\t// initialize the extension\n\t\tconst rootMetadata = new StructuralMetadata( rootExtension, textures, buffers );\n\t\tscene.userData.structuralMetadata = rootMetadata;\n\n\t\tscene.traverse( child => {\n\n\t\t\tif ( parser.associations.has( child ) ) {\n\n\t\t\t\t// check if this object has extension references and use a child-specific version of the extension\n\t\t\t\tconst { meshes, primitives } = parser.associations.get( child );\n\t\t\t\tconst primitive = parser.json.meshes[ meshes ]?.primitives[ primitives ];\n\t\t\t\tif ( primitive && primitive.extensions && primitive.extensions[ EXT_NAME ] ) {\n\n\t\t\t\t\tconst extension = primitive.extensions[ EXT_NAME ];\n\t\t\t\t\tchild.userData.structuralMetadata = new StructuralMetadata( rootExtension, textures, buffers, extension, child );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.userData.structuralMetadata = rootMetadata;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n","import { Vector2 } from 'three';\nimport { TextureReadUtility } from '../utilities/TextureReadUtility.js';\nimport { getTexCoord, getTexelIndices, getTriangleVertexIndices } from '../utilities/TexCoordUtilities.js';\n\nconst _uv = /* @__PURE__ */ new Vector2();\nconst _pixel = /* @__PURE__ */ new Vector2();\nconst _dstPixel = /* @__PURE__ */ new Vector2();\n\n// retrieve the appropriate UV attribute based on the tex coord index\nfunction getMaxBarycoordIndex( barycoord ) {\n\n\tif ( barycoord.x > barycoord.y && barycoord.x > barycoord.z ) {\n\n\t\treturn 0;\n\n\t} else if ( barycoord.y > barycoord.z ) {\n\n\t\treturn 1;\n\n\t} else {\n\n\t\treturn 2;\n\n\t}\n\n}\n\nexport class MeshFeatures {\n\n\tconstructor( geometry, textures, data ) {\n\n\t\tthis.geometry = geometry;\n\t\tthis.textures = textures;\n\t\tthis.data = data;\n\t\tthis._asyncRead = false;\n\n\t\t// fill out feature id default values\n\t\tthis.featureIds = data.featureIds.map( info => {\n\n\t\t\tconst { texture, ...rest } = info;\n\t\t\tconst result = {\n\t\t\t\tlabel: null,\n\t\t\t\tpropertyTable: null,\n\t\t\t\tnullFeatureId: null,\n\t\t\t\t...rest,\n\t\t\t};\n\n\t\t\tif ( texture ) {\n\n\t\t\t\tresult.texture = {\n\t\t\t\t\ttexCoord: 0,\n\t\t\t\t\tchannels: [ 0 ],\n\t\t\t\t\t...texture,\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t} );\n\n\t}\n\n\t// returns list of textures\n\tgetTextures() {\n\n\t\treturn this.textures;\n\n\t}\n\n\t// returns a set of info for each feature\n\tgetFeatureInfo() {\n\n\t\treturn this.featureIds;\n\n\t}\n\n\t// performs texture data read back asynchronously\n\tgetFeaturesAsync( ...args ) {\n\n\t\tthis._asyncRead = true;\n\t\tconst result = this.getFeatures( ...args );\n\t\tthis._asyncRead = false;\n\t\treturn result;\n\n\t}\n\n\t// returns all features for the given point on the given triangle\n\tgetFeatures( triangle, barycoord ) {\n\n\t\tconst { geometry, textures, featureIds } = this;\n\t\tconst result = new Array( featureIds.length ).fill( null );\n\n\t\t// prep the canvas width\n\t\tconst width = featureIds.length;\n\t\tTextureReadUtility.increaseSizeTo( width );\n\n\t\t// get the attribute indices\n\t\tconst indices = getTriangleVertexIndices( geometry, triangle );\n\t\tconst closestIndex = indices[ getMaxBarycoordIndex( barycoord ) ];\n\t\tfor ( let i = 0, l = featureIds.length; i < l; i ++ ) {\n\n\t\t\t// the feature id from the closest point is returned\n\t\t\tconst featureId = featureIds[ i ];\n\t\t\tconst nullFeatureId = 'nullFeatureId' in featureId ? featureId.nullFeatureId : null;\n\t\t\tif ( 'texture' in featureId ) {\n\n\t\t\t\tconst texture = textures[ featureId.texture.index ];\n\n\t\t\t\t// get the attribute of the target tex coord and pixel\n\t\t\t\tgetTexCoord( geometry, featureId.texture.texCoord, barycoord, indices, _uv );\n\t\t\t\tgetTexelIndices( _uv, texture.image.width, texture.image.height, _pixel );\n\t\t\t\t_dstPixel.set( i, 0 );\n\n\t\t\t\t// draw the image\n\t\t\t\tTextureReadUtility.renderPixelToTarget( textures[ featureId.texture.index ], _pixel, _dstPixel );\n\n\t\t\t} else if ( 'attribute' in featureId ) {\n\n\t\t\t\tconst attr = geometry.getAttribute( `_feature_id_${ featureId.attribute }` );\n\t\t\t\tconst value = attr.getX( closestIndex );\n\t\t\t\tif ( value !== nullFeatureId ) {\n\n\t\t\t\t\tresult[ i ] = value;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// implicit id is based on vertex attributes, see 3d-tiles#763\n\t\t\t\tconst value = closestIndex;\n\t\t\t\tif ( value !== nullFeatureId ) {\n\n\t\t\t\t\tresult[ i ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// read the buffer data\n\t\tconst buffer = new Uint8Array( width * 4 );\n\t\tif ( this._asyncRead ) {\n\n\t\t\treturn TextureReadUtility\n\t\t\t\t.readDataAsync( buffer )\n\t\t\t\t.then( () => {\n\n\t\t\t\t\treadTextureSampleResults();\n\t\t\t\t\treturn result;\n\n\t\t\t\t} );\n\n\t\t} else {\n\n\t\t\tTextureReadUtility.readData( buffer );\n\t\t\treadTextureSampleResults();\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction readTextureSampleResults() {\n\n\t\t\t// get data based on the texture information\n\t\t\tconst readBuffer = new Uint32Array( 1 );\n\t\t\tfor ( let i = 0, l = featureIds.length; i < l; i ++ ) {\n\n\t\t\t\tconst featureId = featureIds[ i ];\n\t\t\t\tconst nullFeatureId = 'nullFeatureId' in featureId ? featureId.nullFeatureId : null;\n\t\t\t\tif ( 'texture' in featureId ) {\n\n\t\t\t\t\t// TODO: do we need to handle big-endian here?\n\t\t\t\t\tconst { channels } = featureId.texture;\n\t\t\t\t\tconst data = channels.map( c => buffer[ 4 * i + c ] );\n\t\t\t\t\tnew Uint8Array( readBuffer.buffer ).set( data );\n\n\t\t\t\t\tconst value = readBuffer[ 0 ];\n\t\t\t\t\tif ( value !== nullFeatureId ) {\n\n\t\t\t\t\t\tresult[ i ] = value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// dispose all of the texture data used\n\tdispose() {\n\n\t\tthis.textures.forEach( texture => {\n\n\t\t\tif ( texture ) {\n\n\t\t\t\ttexture.dispose();\n\n\t\t\t\tif ( texture.image instanceof ImageBitmap ) {\n\n\t\t\t\t\ttexture.image.close();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n","import { MeshFeatures } from './metadata/classes/MeshFeatures.js';\n\n// https://github.com/CesiumGS/glTF/tree/3d-tiles-next/extensions/2.0/Vendor/EXT_mesh_features\n\nconst EXT_NAME = 'EXT_mesh_features';\n\nfunction forEachPrimitiveExtension( scene, parser, callback ) {\n\n\tscene.traverse( c => {\n\n\t\tif ( parser.associations.has( c ) ) {\n\n\t\t\t// check if this object has extension references\n\t\t\tconst { meshes, primitives } = parser.associations.get( c );\n\n\t\t\tconst primitive = parser.json.meshes[ meshes ]?.primitives[ primitives ];\n\n\t\t\tif ( primitive && primitive.extensions && primitive.extensions[ EXT_NAME ] ) {\n\n\t\t\t\tcallback( c, primitive.extensions[ EXT_NAME ] );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n}\n\nexport class GLTFMeshFeaturesExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXT_NAME;\n\n\t}\n\n\tasync afterRoot( { scene, parser } ) {\n\n\t\t// skip if the extension is not present\n\t\tconst extensionsUsed = parser.json.extensionsUsed;\n\t\tif ( ! extensionsUsed || ! extensionsUsed.includes( EXT_NAME ) ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// get fetch the relevant textures are loaded\n\t\tconst textureCount = parser.json.textures?.length || 0;\n\t\tconst promises = new Array( textureCount ).fill( null );\n\t\tforEachPrimitiveExtension( scene, parser, ( child, { featureIds } ) => {\n\n\t\t\tfeatureIds.forEach( info => {\n\n\t\t\t\tif ( info.texture && promises[ info.texture.index ] === null ) {\n\n\t\t\t\t\tconst index = info.texture.index;\n\t\t\t\t\tpromises[ index ] = parser.loadTexture( index );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// initialize mesh features on each primitive\n\t\tconst textures = await Promise.all( promises );\n\t\tforEachPrimitiveExtension( scene, parser, ( child, extension ) => {\n\n\t\t\tchild.userData.meshFeatures = new MeshFeatures( child.geometry, textures, extension );\n\n\t\t} );\n\n\t}\n\n}\n","export class GLTFCesiumRTCExtension {\n\n\tconstructor() {\n\n\t\tthis.name = 'CESIUM_RTC';\n\n\t}\n\n\tafterRoot( res ) {\n\n\t\tif ( res.parser.json.extensions && res.parser.json.extensions.CESIUM_RTC ) {\n\n\t\t\tconst { center } = res.parser.json.extensions.CESIUM_RTC;\n\n\t\t\tif ( center ) {\n\n\t\t\t\tres.scene.position.x += center[ 0 ];\n\t\t\t\tres.scene.position.y += center[ 1 ];\n\t\t\t\tres.scene.position.z += center[ 2 ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { GLTFStructuralMetadataExtension } from './gltf/GLTFStructuralMetadataExtension.js';\nimport { GLTFMeshFeaturesExtension } from './gltf/GLTFMeshFeaturesExtension.js';\nimport { GLTFCesiumRTCExtension } from './gltf/GLTFCesiumRTCExtension.js';\n\nexport class GLTFExtensionsPlugin {\n\n\tconstructor( options ) {\n\n\t\toptions = {\n\t\t\tmetadata: true,\n\t\t\trtc: true,\n\n\t\t\tplugins: [],\n\n\t\t\tdracoLoader: null,\n\t\t\tktxLoader: null,\n\t\t\tmeshoptDecoder: null,\n\t\t\tautoDispose: true,\n\t\t\t...options,\n\t\t};\n\n\t\tthis.tiles = null;\n\n\t\tthis.metadata = options.metadata;\n\t\tthis.rtc = options.rtc;\n\t\tthis.plugins = options.plugins;\n\n\t\tthis.dracoLoader = options.dracoLoader;\n\t\tthis.ktxLoader = options.ktxLoader;\n\t\tthis.meshoptDecoder = options.meshoptDecoder;\n\t\tthis._gltfRegex = /\\.(gltf|glb)$/g;\n\t\tthis._dracoRegex = /\\.drc$/g;\n\t\tthis._loader = null;\n\n\t}\n\n\tinit( tiles ) {\n\n\t\tconst loader = new GLTFLoader( tiles.manager );\n\t\tif ( this.dracoLoader ) {\n\n\t\t\tloader.setDRACOLoader( this.dracoLoader );\n\t\t\ttiles.manager.addHandler( this._dracoRegex, this.dracoLoader );\n\n\t\t}\n\n\t\tif ( this.ktxLoader ) {\n\n\t\t\tloader.setKTX2Loader( this.ktxLoader );\n\n\t\t}\n\n\t\tif ( this.meshoptDecoder ) {\n\n\t\t\tloader.setMeshoptDecoder( this.meshoptDecoder );\n\n\t\t}\n\n\t\tif ( this.rtc ) {\n\n\t\t\tloader.register( () => new GLTFCesiumRTCExtension() );\n\n\t\t}\n\n\t\tif ( this.metadata ) {\n\n\t\t\tloader.register( () => new GLTFStructuralMetadataExtension() );\n\t\t\tloader.register( () => new GLTFMeshFeaturesExtension() );\n\n\t\t}\n\n\t\tthis.plugins.forEach( plugin => loader.register( plugin ) );\n\n\t\ttiles.manager.addHandler( this._gltfRegex, loader );\n\t\tthis.tiles = tiles;\n\t\tthis._loader = loader;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.tiles.manager.removeHandler( this._gltfRegex );\n\t\tthis.tiles.manager.removeHandler( this._dracoRegex );\n\t\tif ( this.autoDispose ) {\n\n\t\t\tthis.ktxLoader.dispose();\n\t\t\tthis.dracoLoader.dispose();\n\n\t\t}\n\n\t}\n\n}\n"],"names":["getField","object","key","def","isNumericType","type","isFloatComponentType","isVectorType","isMatrixType","readDataFromBufferToType","buffer","offset","target","getTypeInstance","property","componentType","Vector2","Vector3","Vector4","Matrix2","Matrix3","Matrix4","isTypeInstance","value","getArrayConstructorFromComponentType","resolveDefault","i","l","resolveDefaultElement","defaultValue","resolveNoData","noData","performResolution","isNoDataEqual","elements","normalizeValue","v","adjustValueScaleOffset","scale","normalized","adjustFromType","adjustMatrix","adjustVector","adjustScalar","initializeFromProperty","overrideCount","initializeFromClass","properties","prop","typeToComponentCount","ClassProperty","enums","accessorProperty","countOverride","enumSet","getEnumName","index","match","e","PropertySetAccessor","definition","classes","data","name","propertyClass","PropertyAttributeClassProperty","classProperty","attributeProperty","PropertyAttributeAccessor","args","id","geometry","attribute","PropertyTableClassProperty","tableProperty","buffers","count","arrayOffsets","arrayOffsetType","bufferCons","arr","indexOffset","PropertyTableAccessor","bufferView","dataArray","stringIndex","stringLength","stringOffsets","stringOffsetType","stringOffsetBuffer","byteArray","byteIndex","bitIndex","array","_camera","OrthographicCamera","FullscreenTriangleGeometry","BufferGeometry","Float32BufferAttribute","_geometry","FullScreenQuad","material","Mesh","renderer","_box","Box2","_TextureReadUtility","WebGLRenderer","WebGLRenderTarget","ShaderMaterial","CustomBlending","ZeroFactor","OneFactor","width","_renderer","_target","texture","pixel","dstPixel","TextureReadUtility","reader","_uv0","_uv1","_uv2","getTextureCoordAttribute","getTriangleVertexIndices","faceIndex","i0","i1","i2","getTexCoord","texCoord","barycoord","indices","attr","getTexelIndices","uv","height","fx","fy","px","py","_uv","_srcPixel","_dstPixel","PropertyTextureClassProperty","textureProperty","PropertyTextureAccessor","names","results","n","result","textures","accessorProperties","readTextureSampleResults","length","c","BufferCons","readBuffer","j","lj","StructuralMetadata","nodeMetadata","schema","propertyTables","propertyTextures","propertyAttributes","tableAccessors","t","textureAccessors","attributeAccessors","tableIndices","ids","table","triangle","accessor","promises","promise","attributeIndex","acc","EXT_NAME","getRelevantTextures","parser","textureCount","_a","getRelevantBuffers","values","GLTFStructuralMetadataExtension","scene","extensionsUsed","schemaPromise","rootExtension","manager","path","requestHeader","crossOrigin","finalUri","fileLoader","FileLoader","rootMetadata","child","meshes","primitives","primitive","extension","_pixel","getMaxBarycoordIndex","MeshFeatures","info","rest","featureIds","closestIndex","featureId","nullFeatureId","channels","forEachPrimitiveExtension","callback","GLTFMeshFeaturesExtension","GLTFCesiumRTCExtension","res","center","GLTFExtensionsPlugin","options","tiles","loader","GLTFLoader","plugin"],"mappings":"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","x_google_ignoreList":[5]}