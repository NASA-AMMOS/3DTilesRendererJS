import{m as S,Q as k,l as M,C as J,ac as U,ad as E,S as j,W as q,a as I,G as Q,I as Y,q as B}from"./three.module-DBfedTbk.js";/* empty css               */import{P as D,T as V}from"./TilesRenderer-UmkQDoLb.js";import{E as K}from"./EnvironmentControls-BBSDix_Q.js";import{g as W}from"./lil-gui.module.min-BH_YJbPT.js";import"./I3DMLoader-Co8j1K3i.js";import"./BatchTable-CRr3zuRk.js";import"./GLTFLoader-BjagHNWe.js";import"./Ellipsoid-CLPX16sm.js";import"./B3DMLoader-D_8ejTd0.js";import"./PNTSLoader-C47qgwy1.js";import"./CMPTLoader-CdR2x6K5.js";import"./EllipsoidRegion-By3sIuka.js";const w=new S,y=new k,T=new S;function R(a,e){if(a.sceneMatrix)return;const{translation:t,rotation:r,scale:s}=a;if(w.set(t.x,t.y,t.z),y.set(r.x,r.y,r.z,r.w),T.set(s.x,s.y,s.z),a.matrix=new M().compose(w,y,T),a.sceneMatrix=new M().copy(a.matrix),a.parent_id!==""){const i=e.find(n=>n.id===a.parent_id);R(i,e),a.sceneMatrix.premultiply(i.sceneMatrix)}}class z{constructor(){this.fetchOptions={}}loadAsync(e){return fetch(e,this.fetchOptions).then(t=>t.json()).then(t=>this.parse(t))}parse(e){return e.frames.forEach(t=>R(t,e.frames)),e}}const G=a=>class extends a{constructor(...e){super(...e),this.textures=[],this.overlayColor=new J(8716287),this.displayAsOverlay=!1}onBeforeCompile(e){const t=this.textures,r=this;e.uniforms.textures={get value(){return r.textures}},e.uniforms.overlayColor={get value(){return r.overlayColor}},e.defines={DISPLAY_AS_OVERLAY:Number(this.displayAsOverlay)},t.length!==0&&(e.fragmentShader=e.fragmentShader.replace(/void main/,s=>`
					uniform sampler2D textures[ ${t.length} ];
					uniform vec3 overlayColor;
					${s}

				`).replace(/#include <color_fragment>/,s=>`

					${s}

					vec4 col;
					#pragma unroll_loop_start
					for ( int i = 0; i < ${t.length}; i ++ ) {

						col = texture( textures[ i ], vMapUv );

						#if DISPLAY_AS_OVERLAY

						diffuseColor = mix( diffuseColor, vec4( overlayColor, 1.0 ), col.r * 0.5 );

						#else

						diffuseColor = mix( diffuseColor, col, col.a );

						#endif

					}
					#pragma unroll_loop_end

				`))}customProgramCacheKey(){return String(this.displayAsOverlay)+String(this.textures.length)+this.onBeforeCompile.toString()}};function $(){let a=!1,e=!1,t=-1;return typeof navigator<"u"&&(a=/^((?!chrome|android).)*safari/i.test(navigator.userAgent)===!0,e=navigator.userAgent.indexOf("Firefox")>-1,t=e?navigator.userAgent.match(/Firefox\/([0-9]+)\./)[1]:-1),!(typeof createImageBitmap>"u"||a||e&&t<98)}class H{constructor(e,t){this.cache={},this.fetchOptions={},this.loadTextureCallback=e,this.queue=t}getTextureLoader(){const e=this.fetchOptions;let t;return $()?t=new U:t=new E,e.credentials==="include"&&e.mode==="cors"&&t.setCrossOrigin("use-credentials"),"credentials"in e&&t.setWithCredentials(e.credentials==="include"),e.headers&&t.setRequestHeader(e.headers),t}loadTexture(e){const t=this.cache;if(e in t)return t[e].promise;const r=new AbortController,s=this.queue.add(e,()=>this.loadTextureCallback(e)).then(i=>{if(r.signal.aborted)throw new Error("TextureCache: Texture load aborted.");return t[e].texture=i,i});return this.cache[e]={texture:null,abortController:r,promise:s},s}getTexture(e){const t=this.cache;return e in t?t[e].texture:null}deleteTexture(e){const t=this.cache;if(e in t){const r=t[e];r.refs--,r.refs===0&&(r.texture?r.texture.dispose():r.abortController&&(r.abortController.abort(),this.queue.remove(e)),delete this.cache[e])}}dispose(){const e=this.cache;for(const t in e){const r=e[t];r.texture?(r.texture.dispose(),r.texture.image instanceof ImageBitmap&&r.texture.image.close()):r.abortController&&r.abortController.abort()}}}class X{constructor(e={}){e={textureUpdateCallback:()=>{throw new Error('TextureOverlayPlugin: "textureUpdateCallback" required.')},waitForLoadCompletion:!0,...e},this.name="TEXTURE_OVERLAY_PLUGIN",this.caches=null,this.queue=null,this.tiles=null,this.textureUpdateCallback=e.textureUpdateCallback,this.waitForLoadCompletion=e.waitForLoadCompletion}init(e){this.tiles=e,this.caches={},this.queue=new D,this.queue.priorityCallback=(t,r)=>e.downloadQueue.priorityCallback(t,r),this._disposeModelCallback=({tile:t})=>{const r=this.caches;for(const s in r)r[s].deleteTexture(this.getTileKey(t))},this._assignTexturesCallback=({tile:t,scene:r})=>{queueMicrotask(()=>this.textureUpdateCallback(r,t,this))},e.addEventListener("dispose-model",this._disposeModelCallback),e.addEventListener("load-model",this._assignTexturesCallback),e.addEventListener("layer-textures-change",this._assignTexturesCallback)}processTileModel(e,t){const r=this.caches,s=[];for(const i in r){const o=r[i].loadTexture(this.getTileKey(t)).catch(()=>{});s.push(o)}return Promise.all(s)}dispose(){const{caches:e,tiles:t}=this;Object.keys(e).forEach(r=>{this.unregisterLayer(r)}),t.removeEventListener("dispose-model",this._disposeModelCallback),t.removeEventListener("load-model",this._assignTexturesCallback),t.removeEventListener("layer-textures-change",this._assignTexturesCallback)}getTileKey(e){return new URL(e.content.uri,e.__basePath+"/").toString()}getTexturesForTile(e,t={}){const r=this.getTileKey(e),s=this.caches;for(const i in t)i in s||delete t[i];for(const i in s)t[i]=s[i].getTexture(r);return t}hasLayer(e){return e in this.caches}registerLayer(e,t){if(e in this.caches)throw new Error(`TextureOverlayPlugin: Texture overlay named ${e} already exists.`);const r=this.tiles,s=new H(t,this.queue);if(s.fetchOptions=r.fetchOptions,this.caches[e]=s,this.waitForLoadCompletion){const i=[];r.forEachLoadedModel((n,o)=>{const c=s.loadTexture(this.getTileKey(o)).then(()=>({scene:n,tile:o}));i.push(c)}),Promise.allSettled(i).then(n=>{e in this.caches&&n.forEach(o=>{o.status==="fulfilled"&&this.textureUpdateCallback(o.value.scene,o.value.tile,this)})})}else r.forEachLoadedModel((i,n)=>{s.loadTexture(this.getTileKey(n)).then(()=>this.textureUpdateCallback(i,n,this)).catch(()=>{})})}unregisterLayer(e){const t=this.tiles,r=this.caches;if(e in r){const s=r[e];delete r[e],t.forEachLoadedModel((i,n)=>{s.getTexture(this.getTileKey(n))&&this.textureUpdateCallback(i,n,this)}),s.dispose()}}}const Z=["NLF_0477_0709296508M723RAS_N0261004NCAM00701_0A0085J02/NLF_0477_0709296508M723RAS_N0261004NCAM00701_0A0085J02_scene.json","NLF_0477_0709296508M723RAS_N0261004NCAM00708_0A00LLJ02/NLF_0477_0709296508M723RAS_N0261004NCAM00708_0A00LLJ02_scene.json","NLF_0477_0709297328M366RAS_N0261004NCAM03477_0A0195J02/NLF_0477_0709297328M366RAS_N0261004NCAM03477_0A0195J02_scene.json","NLF_0477_0709297503M102RAS_N0261004NCAM03477_0A0195J02/NLF_0477_0709297503M102RAS_N0261004NCAM03477_0A0195J02_scene.json","NLF_0477_0709297668M065RAS_N0261004NCAM03477_0A0195J02/NLF_0477_0709297668M065RAS_N0261004NCAM03477_0A0195J02_scene.json","NLF_0477_0709297838M897RAS_N0261004NCAM02477_0A0195J02/NLF_0477_0709297838M897RAS_N0261004NCAM02477_0A0195J02_scene.json","NLF_0477_0709298005M099RAS_N0261004NCAM02477_0A0195J02/NLF_0477_0709298005M099RAS_N0261004NCAM02477_0A0195J02_scene.json","NLF_0477_0709298187M680RAS_N0261004NCAM13477_0A0195J02/NLF_0477_0709298187M680RAS_N0261004NCAM13477_0A0195J02_scene.json","NLF_0477_0709298299M678RAS_N0261004NCAM13477_0A0195J02/NLF_0477_0709298299M678RAS_N0261004NCAM13477_0A0195J02_scene.json","NLF_0477_0709298393M010RAS_N0261004NCAM13477_0A0195J02/NLF_0477_0709298393M010RAS_N0261004NCAM13477_0A0195J02_scene.json"].map(a=>"https://raw.githubusercontent.com/NASA-AMMOS/3DTilesSampleData/master/m20-drive-1004/tilesets/"+a),A=[];let h,m,g,u;const C={errorTarget:12,slopeDisplay:"NONE"};ee();b();function ee(){g=new j,u=new q({antialias:!0}),u.setPixelRatio(window.devicePixelRatio),u.setSize(window.innerWidth,window.innerHeight),u.setClearColor(14208704),document.body.appendChild(u.domElement),u.domElement.tabIndex=1,h=new I(60,window.innerWidth/window.innerHeight,.025,4e3),h.position.set(-20,10,20),h.lookAt(0,0,0),m=new K(g,h,u.domElement),m.adjustHeight=!1,m.minDistance=1,m.maxAltitude=Math.PI;const a=new Q;a.rotation.set(Math.PI/2,0,0),g.add(a);let e=null,t=null,r=null,s=null;const i=async o=>{const c=o.replace("/tilesets/","/textures/SMG/").replace(/\.[0-9a-z]+$/i,".png");return new E().loadAsync(c).then(d=>(d.colorSpace=Y,d.flipY=!1,d))};Z.forEach(async o=>{const c=await new z().loadAsync(o),d=o.split(/[\\/]/g);d.pop();const N=G(B);c.tilesets.forEach(_=>{const O=[...d,`${_.id}_tileset.json`].join("/"),l=new V(O),F=(x,L,f)=>{x.traverse(p=>{p.material&&(p.material.textures=Object.values(f.getTexturesForTile(L)),p.material.displayAsOverlay=C.slopeDisplay==="OVERLAY",p.material.needsUpdate=!0)})},P=new X({textureUpdateCallback:F});l.registerPlugin(P),l.addEventListener("load-model",({tile:x,scene:L})=>{L.traverse(f=>{if(f.material){const p=new N;p.copy(f.material),f.material=p}})}),r=r||l.lruCache,t=t||l.parseQueue,e=e||l.downloadQueue,s=s||l.processNodeQueue,l.lruCache=r,l.downloadQueue=e,l.parseQueue=t,l.processNodeQueue=s,l.setCamera(h),c.frames.find(x=>x.id===_.frame_id).sceneMatrix.decompose(l.group.position,l.group.quaternion,l.group.scale),a.add(l.group),A.push(l)})}),v(),window.addEventListener("resize",v,!1);const n=new W;n.add(C,"errorTarget",0,100),n.add(C,"slopeDisplay",["NONE","OVERLAY","SOLID"]).onChange(o=>{o!=="NONE"?A.forEach(c=>{const d=c.getPluginByName("TEXTURE_OVERLAY_PLUGIN");d.hasLayer("slopeLayer")||d.registerLayer("slopeLayer",i),c.forEachLoadedModel(N=>{N.traverse(_=>{_.material&&(_.material.displayAsOverlay=o==="OVERLAY",_.material.needsUpdate=!0)})})}):A.forEach(c=>{c.getPluginByName("TEXTURE_OVERLAY_PLUGIN").unregisterLayer("slopeLayer")})}),n.open()}function v(){h.aspect=window.innerWidth/window.innerHeight,h.updateProjectionMatrix(),u.setSize(window.innerWidth,window.innerHeight),u.setPixelRatio(window.devicePixelRatio)}function b(){requestAnimationFrame(b),m.update(),h.updateMatrixWorld(),A.forEach(a=>{a.errorTarget=C.errorTarget,a.setResolutionFromRenderer(h,u),a.update()}),u.render(g,h)}
//# sourceMappingURL=landformSiteOverlay-aeQXzOy5.js.map
