{"version":3,"file":"offscreenShadows-MqpkWN2w.js","sources":["../../offscreenShadows.js"],"sourcesContent":["import { TilesRenderer } from '3d-tiles-renderer';\nimport {\n\tScene,\n\tDirectionalLight,\n\tAmbientLight,\n\tWebGLRenderer,\n\tPerspectiveCamera,\n\tBox3,\n\tOrthographicCamera,\n\tGroup,\n\tMeshStandardMaterial,\n\tPCFSoftShadowMap,\n\tSphere,\n} from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\nlet camera, controls, scene, renderer, tiles, orthoCamera;\nlet offsetParent, box, sphere, dirLight;\nlet stats;\n\nconst NONE = 0;\nconst DISPLAY_ACTIVE_TILES = 1;\nconst USE_SHADOW_CAMERA = 2;\nconst params = {\n\n\t'errorTarget': 2,\n\t'shadowStrategy': NONE,\n\t'orthographic': false,\n\n};\n\ninit();\nanimate();\n\nfunction onLoadModel( { scene } ) {\n\n\tscene.traverse( c => {\n\n\t\tif ( c.isMesh ) {\n\n\t\t\tc.material = new MeshStandardMaterial();\n\t\t\tc.castShadow = true;\n\t\t\tc.receiveShadow = true;\n\n\t\t}\n\n\t} );\n\n}\n\nfunction onDisposeModel( scene ) {\n\n\tscene.traverse( c => {\n\n\t\tif ( c.isMesh ) {\n\n\t\t\tc.material.dispose();\n\n\t\t}\n\n\t} );\n\n}\n\nfunction init() {\n\n\tscene = new Scene();\n\n\t// primary camera view\n\trenderer = new WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( 0x151c1f );\n\trenderer.shadowMap.enabled = true;\n\trenderer.shadowMap.type = PCFSoftShadowMap;\n\n\tdocument.body.appendChild( renderer.domElement );\n\n\tcamera = new PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 1, 4000 );\n\tcamera.position.set( - 56, 232, 260 );\n\n\torthoCamera = new OrthographicCamera();\n\n\t// controls\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\tcontrols.screenSpacePanning = false;\n\tcontrols.minDistance = 1;\n\tcontrols.maxDistance = 2000;\n\n\t// lights\n\tdirLight = new DirectionalLight( 0xffffff, 1.25 );\n\tdirLight.position.set( - 100, 40, 10 );\n\tdirLight.castShadow = true;\n\tdirLight.shadow.bias = - 1e-4;\n\tdirLight.shadow.normalBias = 0.2;\n\tdirLight.shadow.mapSize.setScalar( 2048 );\n\n\tconst shadowCam = dirLight.shadow.camera;\n\tshadowCam.left = - 120;\n\tshadowCam.bottom = - 120;\n\tshadowCam.right = 120;\n\tshadowCam.top = 120;\n\tshadowCam.updateProjectionMatrix();\n\n\tscene.add( dirLight );\n\n\tconst ambLight = new AmbientLight( 0xffffff, 0.05 );\n\tscene.add( ambLight );\n\n\tbox = new Box3();\n\tsphere = new Sphere();\n\n\toffsetParent = new Group();\n\tscene.add( offsetParent );\n\n\t// tiles\n\tconst url = window.location.hash.replace( /^#/, '' ) || '../data/tileset.json';\n\ttiles = new TilesRenderer( url );\n\ttiles.addEventListener( 'load-model', onLoadModel );\n\ttiles.addEventListener( 'dispose-model', onDisposeModel );\n\toffsetParent.add( tiles.group );\n\n\n\tonWindowResize();\n\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t// GUI\n\tconst gui = new GUI();\n\tgui.width = 300;\n\tgui.add( params, 'orthographic' );\n\tgui.add( params, 'errorTarget' ).min( 0 ).max( 25 ).step( 1 );\n\tgui.add( params, 'shadowStrategy', { NONE, DISPLAY_ACTIVE_TILES, USE_SHADOW_CAMERA } );\n\tgui.open();\n\n\t// Stats\n\tstats = new Stats();\n\tstats.showPanel( 0 );\n\tdocument.body.appendChild( stats.dom );\n\n}\n\nfunction onWindowResize() {\n\n\tcamera.aspect = window.innerWidth / window.innerHeight;\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\tcamera.updateProjectionMatrix();\n\n\tupdateOrthoCamera();\n\n}\n\nfunction updateOrthoCamera() {\n\n\torthoCamera.position.copy( camera.position );\n\torthoCamera.rotation.copy( camera.rotation );\n\n\tconst scale = camera.position.distanceTo( controls.target ) / 2.0;\n\tconst aspect = window.innerWidth / window.innerHeight;\n\torthoCamera.left = - aspect * scale;\n\torthoCamera.right = aspect * scale;\n\torthoCamera.bottom = - scale;\n\torthoCamera.top = scale;\n\torthoCamera.near = camera.near;\n\torthoCamera.far = camera.far;\n\torthoCamera.updateProjectionMatrix();\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\ttiles.errorTarget = params.errorTarget;\n\tswitch ( parseFloat( params.shadowStrategy ) ) {\n\n\t\tcase NONE:\n\t\t\ttiles.displayActiveTiles = false;\n\t\t\ttiles.autoDisableRendererCulling = true;\n\t\t\ttiles.deleteCamera( dirLight.shadow.camera );\n\t\t\tbreak;\n\n\t\tcase DISPLAY_ACTIVE_TILES:\n\t\t\ttiles.displayActiveTiles = true;\n\t\t\ttiles.autoDisableRendererCulling = false;\n\t\t\ttiles.deleteCamera( dirLight.shadow.camera );\n\t\t\tbreak;\n\n\t\tcase USE_SHADOW_CAMERA:\n\t\t\ttiles.displayActiveTiles = false;\n\t\t\ttiles.autoDisableRendererCulling = false;\n\t\t\ttiles.setCamera( dirLight.shadow.camera );\n\t\t\ttiles.setResolution( dirLight.shadow.camera, dirLight.shadow.mapSize );\n\t\t\tbreak;\n\n\t}\n\n\tif ( params.orthographic ) {\n\n\t\ttiles.deleteCamera( camera );\n\t\ttiles.setCamera( orthoCamera );\n\t\ttiles.setResolutionFromRenderer( orthoCamera, renderer );\n\n\t} else {\n\n\t\ttiles.deleteCamera( orthoCamera );\n\t\ttiles.setCamera( camera );\n\t\ttiles.setResolutionFromRenderer( camera, renderer );\n\n\t}\n\n\toffsetParent.rotation.set( 0, 0, 0 );\n\tif ( params.up === '-Z' ) {\n\n\t\toffsetParent.rotation.x = Math.PI / 2;\n\n\t}\n\toffsetParent.updateMatrixWorld( true );\n\n\t// update tiles center\n\tif ( tiles.getBoundingBox( box ) ) {\n\n\t\tbox.getCenter( tiles.group.position );\n\t\ttiles.group.position.multiplyScalar( - 1 );\n\n\t} else if ( tiles.getBoundingSphere( sphere ) ) {\n\n\t\ttiles.group.position.copy( sphere.center );\n\t\ttiles.group.position.multiplyScalar( - 1 );\n\n\t}\n\n\t// update tiles\n\twindow.tiles = tiles;\n\tcamera.updateMatrixWorld();\n\torthoCamera.updateMatrixWorld();\n\ttiles.update();\n\n\trender();\n\tstats.update();\n\n}\n\nfunction render() {\n\n\tupdateOrthoCamera();\n\n\trenderer.render( scene, params.orthographic ? orthoCamera : camera );\n\n}\n"],"names":["camera","controls","scene","renderer","tiles","orthoCamera","offsetParent","box","sphere","dirLight","stats","NONE","DISPLAY_ACTIVE_TILES","USE_SHADOW_CAMERA","params","init","animate","onLoadModel","c","MeshStandardMaterial","onDisposeModel","Scene","WebGLRenderer","PCFSoftShadowMap","PerspectiveCamera","OrthographicCamera","OrbitControls","DirectionalLight","shadowCam","ambLight","AmbientLight","Box3","Sphere","Group","url","TilesRenderer","onWindowResize","gui","GUI","Stats","updateOrthoCamera","scale","aspect","render"],"mappings":"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"}