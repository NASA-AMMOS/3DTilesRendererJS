{"version":3,"file":"I3DMLoader-Co8j1K3i.js","sources":["../../../src/core/renderer/constants.js","../../../src/core/renderer/loaders/I3DMLoaderBase.js","../../../src/three/renderer/math/GeoConstants.js","../../../src/three/renderer/loaders/I3DMLoader.js"],"sourcesContent":["// FAILED is negative so lru cache priority sorting will unload it first\nexport const FAILED = - 1;\nexport const UNLOADED = 0;\nexport const LOADING = 1;\nexport const PARSING = 2;\nexport const LOADED = 3;\n\n// https://en.wikipedia.org/wiki/World_Geodetic_System\n// https://en.wikipedia.org/wiki/Flattening\nexport const WGS84_RADIUS = 6378137;\nexport const WGS84_FLATTENING = 1 / 298.257223563;\nexport const WGS84_HEIGHT = - ( WGS84_FLATTENING * WGS84_RADIUS - WGS84_RADIUS );\n","// I3DM File Format\n// https://github.com/CesiumGS/3d-tiles/blob/master/specification/TileFormats/Instanced3DModel/README.md\n\nimport { BatchTable } from '../utilities/BatchTable.js';\nimport { FeatureTable } from '../utilities/FeatureTable.js';\nimport { LoaderBase } from './LoaderBase.js';\nimport { readMagicBytes, arrayToString, getWorkingPath } from '../utilities/LoaderUtils.js';\n\nexport class I3DMLoaderBase extends LoaderBase {\n\n\tparse( buffer ) {\n\n\t\tconst dataView = new DataView( buffer );\n\n\t\t// 32-byte header\n\n\t\t// 4 bytes\n\t\tconst magic = readMagicBytes( dataView );\n\n\t\tconsole.assert( magic === 'i3dm' );\n\n\t\t// 4 bytes\n\t\tconst version = dataView.getUint32( 4, true );\n\n\t\tconsole.assert( version === 1 );\n\n\t\t// 4 bytes\n\t\tconst byteLength = dataView.getUint32( 8, true );\n\n\t\tconsole.assert( byteLength === buffer.byteLength );\n\n\t\t// 4 bytes\n\t\tconst featureTableJSONByteLength = dataView.getUint32( 12, true );\n\n\t\t// 4 bytes\n\t\tconst featureTableBinaryByteLength = dataView.getUint32( 16, true );\n\n\t\t// 4 bytes\n\t\tconst batchTableJSONByteLength = dataView.getUint32( 20, true );\n\n\t\t// 4 bytes\n\t\tconst batchTableBinaryByteLength = dataView.getUint32( 24, true );\n\n\t\t// 4 bytes\n\t\tconst gltfFormat = dataView.getUint32( 28, true );\n\n\t\t// Feature Table\n\t\tconst featureTableStart = 32;\n\t\tconst featureTableBuffer = buffer.slice(\n\t\t\tfeatureTableStart,\n\t\t\tfeatureTableStart + featureTableJSONByteLength + featureTableBinaryByteLength,\n\t\t);\n\t\tconst featureTable = new FeatureTable(\n\t\t\tfeatureTableBuffer,\n\t\t\t0,\n\t\t\tfeatureTableJSONByteLength,\n\t\t\tfeatureTableBinaryByteLength,\n\t\t);\n\n\t\t// Batch Table\n\t\tconst batchTableStart = featureTableStart + featureTableJSONByteLength + featureTableBinaryByteLength;\n\t\tconst batchTableBuffer = buffer.slice(\n\t\t\tbatchTableStart,\n\t\t\tbatchTableStart + batchTableJSONByteLength + batchTableBinaryByteLength,\n\t\t);\n\t\tconst batchTable = new BatchTable(\n\t\t\tbatchTableBuffer,\n\t\t\tfeatureTable.getData( 'INSTANCES_LENGTH' ),\n\t\t\t0,\n\t\t\tbatchTableJSONByteLength,\n\t\t\tbatchTableBinaryByteLength,\n\t\t);\n\n\t\tconst glbStart = batchTableStart + batchTableJSONByteLength + batchTableBinaryByteLength;\n\t\tconst bodyBytes = new Uint8Array( buffer, glbStart, byteLength - glbStart );\n\n\t\tlet glbBytes = null;\n\t\tlet promise = null;\n\t\tlet gltfWorkingPath = null;\n\t\tif ( gltfFormat ) {\n\n\t\t\tglbBytes = bodyBytes;\n\t\t\tpromise = Promise.resolve();\n\n\t\t} else {\n\n\t\t\tconst externalUri = this.resolveExternalURL( arrayToString( bodyBytes ) );\n\n\t\t\t//Store the gltf working path\n\t\t\tgltfWorkingPath = getWorkingPath( externalUri );\n\n\t\t\tpromise = fetch( externalUri, this.fetchOptions )\n\t\t\t\t.then( res => {\n\n\t\t\t\t\tif ( ! res.ok ) {\n\n\t\t\t\t\t\tthrow new Error( `I3DMLoaderBase : Failed to load file \"${ externalUri }\" with status ${ res.status } : ${ res.statusText }` );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn res.arrayBuffer();\n\n\t\t\t\t} )\n\t\t\t\t.then( buffer => {\n\n\t\t\t\t\tglbBytes = new Uint8Array( buffer );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\treturn promise.then( () => {\n\n\t\t\treturn {\n\t\t\t\tversion,\n\t\t\t\tfeatureTable,\n\t\t\t\tbatchTable,\n\t\t\t\tglbBytes,\n\t\t\t\tgltfWorkingPath\n\t\t\t};\n\n\t\t} );\n\n\t}\n\n}\n\n","import { WGS84_RADIUS, WGS84_HEIGHT } from '3d-tiles-renderer/core';\nimport { Ellipsoid } from './Ellipsoid.js';\n\nexport const WGS84_ELLIPSOID = new Ellipsoid( WGS84_RADIUS, WGS84_RADIUS, WGS84_HEIGHT );\nWGS84_ELLIPSOID.name = 'WGS84 Earth';\n","import { I3DMLoaderBase } from '3d-tiles-renderer/core';\nimport { DefaultLoadingManager, Matrix4, InstancedMesh, Vector3, Quaternion } from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { WGS84_ELLIPSOID } from '../math/GeoConstants.js';\n\nconst tempFwd = /* @__PURE__ */ new Vector3();\nconst tempUp = /* @__PURE__ */ new Vector3();\nconst tempRight = /* @__PURE__ */ new Vector3();\nconst tempPos = /* @__PURE__ */ new Vector3();\nconst tempQuat = /* @__PURE__ */ new Quaternion();\nconst tempSca = /* @__PURE__ */ new Vector3();\nconst tempMat = /* @__PURE__ */ new Matrix4();\nconst tempMat2 = /* @__PURE__ */ new Matrix4();\n\nconst tempGlobePos = /* @__PURE__ */ new Vector3();\nconst tempEnuFrame = /* @__PURE__ */ new Matrix4();\nconst tempLocalQuat = /* @__PURE__ */ new Quaternion();\nconst tempLatLon = {};\n\nexport class I3DMLoader extends I3DMLoaderBase {\n\n\tconstructor( manager = DefaultLoadingManager ) {\n\n\t\tsuper();\n\t\tthis.manager = manager;\n\t\tthis.adjustmentTransform = new Matrix4();\n\t\tthis.ellipsoid = WGS84_ELLIPSOID.clone();\n\n\t}\n\n\tresolveExternalURL( url ) {\n\n\t\treturn this.manager.resolveURL( super.resolveExternalURL( url ) );\n\n\t}\n\n\tparse( buffer ) {\n\n\t\treturn super\n\t\t\t.parse( buffer )\n\t\t\t.then( i3dm => {\n\n\t\t\t\tconst { featureTable, batchTable } = i3dm;\n\t\t\t\tconst gltfBuffer = i3dm.glbBytes.slice().buffer;\n\t\t\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\t\t\tconst fetchOptions = this.fetchOptions;\n\t\t\t\t\tconst manager = this.manager;\n\t\t\t\t\tconst loader = manager.getHandler( 'path.gltf' ) || new GLTFLoader( manager );\n\n\t\t\t\t\tif ( fetchOptions.credentials === 'include' && fetchOptions.mode === 'cors' ) {\n\n\t\t\t\t\t\tloader.setCrossOrigin( 'use-credentials' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'credentials' in fetchOptions ) {\n\n\t\t\t\t\t\tloader.setWithCredentials( fetchOptions.credentials === 'include' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( fetchOptions.headers ) {\n\n\t\t\t\t\t\tloader.setRequestHeader( fetchOptions.headers );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// GLTFLoader assumes the working path ends in a slash\n\t\t\t\t\tlet workingPath = i3dm.gltfWorkingPath ?? this.workingPath;\n\t\t\t\t\tif ( ! /[\\\\/]$/.test( workingPath ) ) {\n\n\t\t\t\t\t\tworkingPath += '/';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst adjustmentTransform = this.adjustmentTransform;\n\n\t\t\t\t\tloader.parse( gltfBuffer, workingPath, model => {\n\n\t\t\t\t\t\tconst INSTANCES_LENGTH = featureTable.getData( 'INSTANCES_LENGTH' );\n\t\t\t\t\t\tlet POSITION = featureTable.getData( 'POSITION', INSTANCES_LENGTH, 'FLOAT', 'VEC3' );\n\t\t\t\t\t\tconst POSITION_QUANTIZED = featureTable.getData( 'POSITION_QUANTIZED', INSTANCES_LENGTH, 'UNSIGNED_SHORT', 'VEC3' );\n\t\t\t\t\t\tconst QUANTIZED_VOLUME_OFFSET = featureTable.getData( 'QUANTIZED_VOLUME_OFFSET', 1, 'FLOAT', 'VEC3' );\n\t\t\t\t\t\tconst QUANTIZED_VOLUME_SCALE = featureTable.getData( 'QUANTIZED_VOLUME_SCALE', 1, 'FLOAT', 'VEC3' );\n\t\t\t\t\t\tconst NORMAL_UP = featureTable.getData( 'NORMAL_UP', INSTANCES_LENGTH, 'FLOAT', 'VEC3' );\n\t\t\t\t\t\tconst NORMAL_RIGHT = featureTable.getData( 'NORMAL_RIGHT', INSTANCES_LENGTH, 'FLOAT', 'VEC3' );\n\t\t\t\t\t\tconst SCALE_NON_UNIFORM = featureTable.getData( 'SCALE_NON_UNIFORM', INSTANCES_LENGTH, 'FLOAT', 'VEC3' );\n\t\t\t\t\t\tconst SCALE = featureTable.getData( 'SCALE', INSTANCES_LENGTH, 'FLOAT', 'SCALAR' );\n\t\t\t\t\t\tconst RTC_CENTER = featureTable.getData( 'RTC_CENTER', 1, 'FLOAT', 'VEC3' );\n\t\t\t\t\t\tconst EAST_NORTH_UP = featureTable.getData( 'EAST_NORTH_UP' );\n\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'NORMAL_UP_OCT32P',\n\t\t\t\t\t\t\t'NORMAL_RIGHT_OCT32P',\n\t\t\t\t\t\t].forEach( feature => {\n\n\t\t\t\t\t\t\tif ( feature in featureTable.header ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( `I3DMLoader: Unsupported FeatureTable feature \"${ feature }\" detected.` );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t// use quantized position if position is missing\n\t\t\t\t\t\tif ( ! POSITION && POSITION_QUANTIZED ) {\n\n\t\t\t\t\t\t\tPOSITION = new Float32Array( INSTANCES_LENGTH * 3 );\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < INSTANCES_LENGTH; i ++ ) {\n\n\t\t\t\t\t\t\t\tPOSITION[ i * 3 + 0 ] = QUANTIZED_VOLUME_OFFSET[ 0 ] + ( POSITION_QUANTIZED[ i * 3 + 0 ] / 65535.0 ) * QUANTIZED_VOLUME_SCALE[ 0 ];\n\t\t\t\t\t\t\t\tPOSITION[ i * 3 + 1 ] = QUANTIZED_VOLUME_OFFSET[ 1 ] + ( POSITION_QUANTIZED[ i * 3 + 1 ] / 65535.0 ) * QUANTIZED_VOLUME_SCALE[ 1 ];\n\t\t\t\t\t\t\t\tPOSITION[ i * 3 + 2 ] = QUANTIZED_VOLUME_OFFSET[ 2 ] + ( POSITION_QUANTIZED[ i * 3 + 2 ] / 65535.0 ) * QUANTIZED_VOLUME_SCALE[ 2 ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// get the average vector center so we can avoid floating point error due to lower\n\t\t\t\t\t\t// precision transformation calculations on the GPU\n\t\t\t\t\t\tconst averageVector = new Vector3();\n\t\t\t\t\t\tfor ( let i = 0; i < INSTANCES_LENGTH; i ++ ) {\n\n\t\t\t\t\t\t\taverageVector.x += POSITION[ i * 3 + 0 ] / INSTANCES_LENGTH;\n\t\t\t\t\t\t\taverageVector.y += POSITION[ i * 3 + 1 ] / INSTANCES_LENGTH;\n\t\t\t\t\t\t\taverageVector.z += POSITION[ i * 3 + 2 ] / INSTANCES_LENGTH;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find all the children and create associated instance meshes\n\t\t\t\t\t\tconst instances = [];\n\t\t\t\t\t\tconst meshes = [];\n\t\t\t\t\t\tmodel.scene.updateMatrixWorld();\n\n\t\t\t\t\t\tmodel.scene.traverse( child => {\n\n\t\t\t\t\t\t\tif ( child.isMesh ) {\n\n\t\t\t\t\t\t\t\tmeshes.push( child );\n\n\t\t\t\t\t\t\t\tconst { geometry, material } = child;\n\t\t\t\t\t\t\t\tconst instancedMesh = new InstancedMesh( geometry, material, INSTANCES_LENGTH );\n\t\t\t\t\t\t\t\tinstancedMesh.position.copy( averageVector );\n\n\t\t\t\t\t\t\t\tif ( RTC_CENTER ) {\n\n\t\t\t\t\t\t\t\t\tinstancedMesh.position.x += RTC_CENTER[ 0 ];\n\t\t\t\t\t\t\t\t\tinstancedMesh.position.y += RTC_CENTER[ 1 ];\n\t\t\t\t\t\t\t\t\tinstancedMesh.position.z += RTC_CENTER[ 2 ];\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tinstances.push( instancedMesh );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t// generate positions for all instances\n\t\t\t\t\t\tfor ( let i = 0; i < INSTANCES_LENGTH; i ++ ) {\n\n\t\t\t\t\t\t\t// position\n\t\t\t\t\t\t\ttempPos.set(\n\t\t\t\t\t\t\t\tPOSITION[ i * 3 + 0 ] - averageVector.x,\n\t\t\t\t\t\t\t\tPOSITION[ i * 3 + 1 ] - averageVector.y,\n\t\t\t\t\t\t\t\tPOSITION[ i * 3 + 2 ] - averageVector.z,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// rotation\n\t\t\t\t\t\t\ttempQuat.identity();\n\n\t\t\t\t\t\t\t// account for EAST_NORTH_UP per-instance below\n\n\t\t\t\t\t\t\tif ( NORMAL_UP ) {\n\n\t\t\t\t\t\t\t\ttempUp.set(\n\t\t\t\t\t\t\t\t\tNORMAL_UP[ i * 3 + 0 ],\n\t\t\t\t\t\t\t\t\tNORMAL_UP[ i * 3 + 1 ],\n\t\t\t\t\t\t\t\t\tNORMAL_UP[ i * 3 + 2 ],\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\ttempRight.set(\n\t\t\t\t\t\t\t\t\tNORMAL_RIGHT[ i * 3 + 0 ],\n\t\t\t\t\t\t\t\t\tNORMAL_RIGHT[ i * 3 + 1 ],\n\t\t\t\t\t\t\t\t\tNORMAL_RIGHT[ i * 3 + 2 ],\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\ttempFwd.crossVectors( tempRight, tempUp )\n\t\t\t\t\t\t\t\t\t.normalize();\n\n\t\t\t\t\t\t\t\ttempMat.makeBasis(\n\t\t\t\t\t\t\t\t\ttempRight,\n\t\t\t\t\t\t\t\t\ttempUp,\n\t\t\t\t\t\t\t\t\ttempFwd,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\ttempQuat.setFromRotationMatrix( tempMat );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// scale\n\t\t\t\t\t\t\ttempSca.set( 1, 1, 1 );\n\n\t\t\t\t\t\t\tif ( SCALE_NON_UNIFORM ) {\n\n\t\t\t\t\t\t\t\ttempSca.set(\n\t\t\t\t\t\t\t\t\tSCALE_NON_UNIFORM[ i * 3 + 0 ],\n\t\t\t\t\t\t\t\t\tSCALE_NON_UNIFORM[ i * 3 + 1 ],\n\t\t\t\t\t\t\t\t\tSCALE_NON_UNIFORM[ i * 3 + 2 ],\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( SCALE ) {\n\n\t\t\t\t\t\t\t\ttempSca.multiplyScalar( SCALE[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// multiple in the original meshes world transform\n\t\t\t\t\t\t\tfor ( let j = 0, l = instances.length; j < l; j ++ ) {\n\n\t\t\t\t\t\t\t\tconst instance = instances[ j ];\n\t\t\t\t\t\t\t\ttempLocalQuat.copy( tempQuat );\n\n\t\t\t\t\t\t\t\t// Handle east-north-up frame generation\n\t\t\t\t\t\t\t\tif ( EAST_NORTH_UP ) {\n\n\t\t\t\t\t\t\t\t\tinstance.updateMatrixWorld();\n\n\t\t\t\t\t\t\t\t\t// transform the instance position to global frame and get the rotation from the associated ENU frame.\n\t\t\t\t\t\t\t\t\ttempGlobePos.copy( tempPos ).applyMatrix4( instance.matrixWorld );\n\t\t\t\t\t\t\t\t\tthis.ellipsoid.getPositionToCartographic( tempGlobePos, tempLatLon );\n\t\t\t\t\t\t\t\t\tthis.ellipsoid.getEastNorthUpFrame( tempLatLon.lat, tempLatLon.lon, tempEnuFrame );\n\t\t\t\t\t\t\t\t\ttempLocalQuat.setFromRotationMatrix( tempEnuFrame );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\ttempMat.compose( tempPos, tempLocalQuat, tempSca ).multiply( adjustmentTransform );\n\n\t\t\t\t\t\t\t\tconst mesh = meshes[ j ];\n\t\t\t\t\t\t\t\ttempMat2.multiplyMatrices( tempMat, mesh.matrixWorld );\n\t\t\t\t\t\t\t\tinstance.setMatrixAt( i, tempMat2 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// replace all geometry with the instances\n\t\t\t\t\t\tmodel.scene.clear();\n\t\t\t\t\t\tmodel.scene.add( ...instances );\n\n\t\t\t\t\t\tmodel.batchTable = batchTable;\n\t\t\t\t\t\tmodel.featureTable = featureTable;\n\n\t\t\t\t\t\tmodel.scene.batchTable = batchTable;\n\t\t\t\t\t\tmodel.scene.featureTable = featureTable;\n\n\t\t\t\t\t\tresolve( model );\n\n\t\t\t\t\t}, reject );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t}\n\n}\n"],"names":["FAILED","UNLOADED","LOADING","PARSING","LOADED","WGS84_RADIUS","WGS84_HEIGHT","I3DMLoaderBase","LoaderBase","buffer","dataView","magic","readMagicBytes","version","byteLength","featureTableJSONByteLength","featureTableBinaryByteLength","batchTableJSONByteLength","batchTableBinaryByteLength","gltfFormat","featureTableStart","featureTableBuffer","featureTable","FeatureTable","batchTableStart","batchTableBuffer","batchTable","BatchTable","glbStart","bodyBytes","glbBytes","promise","gltfWorkingPath","externalUri","arrayToString","getWorkingPath","res","WGS84_ELLIPSOID","Ellipsoid","tempFwd","Vector3","tempUp","tempRight","tempPos","tempQuat","Quaternion","tempSca","tempMat","Matrix4","tempMat2","tempGlobePos","tempEnuFrame","tempLocalQuat","tempLatLon","I3DMLoader","manager","DefaultLoadingManager","url","i3dm","gltfBuffer","resolve","reject","fetchOptions","loader","GLTFLoader","workingPath","adjustmentTransform","model","INSTANCES_LENGTH","POSITION","POSITION_QUANTIZED","QUANTIZED_VOLUME_OFFSET","QUANTIZED_VOLUME_SCALE","NORMAL_UP","NORMAL_RIGHT","SCALE_NON_UNIFORM","SCALE","RTC_CENTER","EAST_NORTH_UP","feature","i","averageVector","instances","meshes","child","geometry","material","instancedMesh","InstancedMesh","j","l","instance","mesh"],"mappings":"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"}