{"version":3,"file":"settling-CnFj1qPY.js","sources":["../../../src/r3f/utilities/useMultipleRefs.js","../../../src/r3f/utilities/SceneObserver.js","../../../src/r3f/utilities/QueryManager.js","../../../src/r3f/components/SettledObjects.jsx","../../r3f/settling.jsx"],"sourcesContent":["import { useCallback } from 'react';\n\nexport function useMultipleRefs( ...refs ) {\n\n\treturn useCallback( target => {\n\n\t\trefs.forEach( ref => {\n\n\t\t\tif ( ref ) {\n\n\t\t\t\tif ( typeof ref === 'function' ) {\n\n\t\t\t\t\tref( target );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tref.current = target;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}, refs ); // eslint-disable-line\n\n}\n","import { EventDispatcher } from 'three';\n\nfunction traverse( root, callback ) {\n\n\tif ( callback( root ) ) {\n\n\t\treturn;\n\n\t}\n\n\troot.children.forEach( c => {\n\n\t\ttraverse( c, callback );\n\n\t} );\n\n}\n\nexport class SceneObserver extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.objects = new Set();\n\t\tthis.observed = new Set();\n\t\tthis._addedCallback = ( { child } ) => {\n\n\t\t\ttraverse( child, c => {\n\n\t\t\t\tif ( this.observed.has( c ) ) {\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.objects.add( c );\n\t\t\t\t\tc.addEventListener( 'childadded', this._addedCallback );\n\t\t\t\t\tc.addEventListener( 'childremoved', this._removedCallback );\n\t\t\t\t\tthis.dispatchEvent( { type: 'childadded', child } );\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\tthis._removedCallback = ( { child } ) => {\n\n\t\t\ttraverse( child, c => {\n\n\t\t\t\tif ( this.observed.has( c ) ) {\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.objects.delete( c );\n\t\t\t\t\tc.removeEventListener( 'childadded', this._addedCallback );\n\t\t\t\t\tc.removeEventListener( 'childremoved', this._removedCallback );\n\t\t\t\t\tthis.dispatchEvent( { type: 'childremoved', child } );\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t}\n\n\tobserve( root ) {\n\n\t\tconst { observed } = this;\n\t\tthis._addedCallback( { child: root } );\n\t\tobserved.add( root );\n\n\t}\n\n\tunobserve( root ) {\n\n\t\tconst { observed } = this;\n\t\tobserved.delete( root );\n\t\tthis._removedCallback( { child: root } );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.observed.forEach( root => {\n\n\t\t\tthis.unobserve( root );\n\n\t\t} );\n\n\t}\n\n}\n","import {\n\tRaycaster,\n\tMatrix4,\n\tEventDispatcher,\n\tVector3,\n\tRay,\n\tLine3,\n\tVector2,\n} from 'three';\nimport { SceneObserver } from './SceneObserver.js';\nimport { Ellipsoid } from '3d-tiles-renderer/three';\n\nconst _raycaster = /* @__PURE__ */ new Raycaster();\nconst _line0 = /* @__PURE__ */ new Line3();\nconst _line1 = /* @__PURE__ */ new Line3();\nconst _params = /* @__PURE__ */ new Vector2();\nconst _direction = /* @__PURE__ */ new Vector3();\nconst _matrix = /* @__PURE__ */ new Matrix4();\nexport class QueryManager extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\t// settings\n\t\tthis.autoRun = true;\n\n\t\t// queries\n\t\tthis.queryMap = new Map();\n\t\tthis.index = 0;\n\n\t\t// jobs\n\t\tthis.queued = [];\n\t\tthis.scheduled = false;\n\t\tthis.duration = 1;\n\n\t\t// scene\n\t\tthis.objects = [];\n\t\tthis.observer = new SceneObserver();\n\t\tthis.ellipsoid = new Ellipsoid();\n\t\tthis.frame = new Matrix4();\n\n\t\t// cameras for sorting\n\t\tthis.cameras = new Set();\n\n\t\t// register to mark items as dirty\n\t\tconst queueAll = ( () => {\n\n\t\t\tlet queued = false;\n\t\t\treturn () => {\n\n\t\t\t\tif ( ! queued ) {\n\n\t\t\t\t\tqueued = true;\n\t\t\t\t\tqueueMicrotask( () => {\n\n\t\t\t\t\t\tthis.queryMap.forEach( item => this._enqueue( item ) );\n\t\t\t\t\t\tqueued = false;\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )();\n\n\t\tthis.observer.addEventListener( 'childadded', queueAll );\n\t\tthis.observer.addEventListener( 'childremoved', queueAll );\n\n\t}\n\n\t// job runner\n\t_enqueue( info ) {\n\n\t\tif ( ! info.queued ) {\n\n\t\t\tthis.queued.push( info );\n\t\t\tinfo.queued = true;\n\t\t\tthis._scheduleRun();\n\n\t\t}\n\n\t}\n\n\t_runJobs() {\n\n\t\tconst { queued, cameras, duration } = this;\n\t\tconst start = performance.now();\n\n\t\t// Iterate over all cameras\n\t\tcameras.forEach( ( camera, c ) => {\n\n\t\t\t_matrix.copy( camera.matrixWorldInverse ).premultiply( camera.projectionMatrix );\n\t\t\t_direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t\t_line0.start.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_line0.end.addVectors( _direction, _line0.start );\n\n\t\t\tfor ( let i = 0, l = queued.length; i < l; i ++ ) {\n\n\t\t\t\tconst info = queued[ i ];\n\t\t\t\tconst { ray } = info;\n\n\t\t\t\t// save the values for sorting\n\t\t\t\tlet distance;\n\t\t\t\tlet inFrustum;\n\t\t\t\tif ( info.point === null ) {\n\n\t\t\t\t\t// prioritize displaying points that are from rays pointing in the same direction as\n\t\t\t\t\t// the camera. Find the distance between camera ray and projection ray:\n\t\t\t\t\t_line1.start.copy( ray.origin );\n\t\t\t\t\tray.at( 1, _line1.end );\n\t\t\t\t\tclosestPointLineToLine( _line0, _line1, _params );\n\n\t\t\t\t\tinfo.distance = _params.x * ( 1.0 - Math.abs( _direction.dot( ray.direction ) ) );\n\t\t\t\t\tinfo.inFrustum = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// if the point is within the frustum then prioritize it\n\t\t\t\t\tconst p = _line1.start;\n\t\t\t\t\tp.copy( info.point ).applyMatrix4( _matrix );\n\t\t\t\t\tif ( p.x > - 1 && p.x < 1 && p.y > - 1 && p.y < 1 && p.z > - 1 && p.z < 1 ) {\n\n\t\t\t\t\t\t// calculate the distance to the last hit point\n\t\t\t\t\t\tinfo.distance = p.subVectors( info.point, _line0.start ).dot( _direction );\n\t\t\t\t\t\tinfo.inFrustum = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tinfo.distance = 0;\n\t\t\t\t\t\tinfo.inFrustum = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( c === 0 ) {\n\n\t\t\t\t\tinfo.distance = distance;\n\t\t\t\t\tinfo.inFrustum = inFrustum;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinfo.inFrustum = info.inFrustum || inFrustum;\n\t\t\t\t\tinfo.distance = Math.min( info.distance, distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\t// sort the items if necessary\n\t\tif ( cameras.length !== 0 ) {\n\n\t\t\tqueued.sort( ( a, b ) => {\n\n\t\t\t\tif ( ( a.point === null ) !== ( b.point === null ) ) {\n\n\t\t\t\t\treturn a.point === null ? 1 : - 1;\n\n\t\t\t\t} else if ( a.inFrustum !== b.inFrustum ) {\n\n\t\t\t\t\treturn a.inFrustum ? 1 : - 1;\n\n\t\t\t\t} else if ( ( a.distance < 0 ) !== ( b.distance < 0 ) ) {\n\n\t\t\t\t\treturn a.distance < 0 ? - 1 : 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn b.distance - a.distance;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\t// update all the positions\n\t\twhile ( queued.length !== 0 && performance.now() - start < duration ) {\n\n\t\t\tconst item = queued.pop();\n\t\t\titem.queued = false;\n\t\t\tthis._updateQuery( item );\n\n\t\t}\n\n\t\tif ( queued.length !== 0 ) {\n\n\t\t\tthis._scheduleRun();\n\n\t\t}\n\n\t}\n\n\t_scheduleRun() {\n\n\t\tif ( this.autoRun && ! this.scheduled ) {\n\n\t\t\tthis.scheduled = true;\n\t\t\trequestAnimationFrame( () => {\n\n\t\t\t\tthis.scheduled = false;\n\t\t\t\tthis._runJobs();\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t_updateQuery( item ) {\n\n\t\t_raycaster.ray.copy( item.ray );\n\t\t_raycaster.far = 'lat' in item ? 1e4 + Math.max( ...this.ellipsoid.radius ) : Infinity;\n\n\t\t// save the last hit point for sorting\n\t\tconst hit = _raycaster.intersectObjects( this.objects )[ 0 ] || null;\n\t\tif ( hit !== null ) {\n\n\t\t\tif ( item.point === null ) {\n\n\t\t\t\titem.point = hit.point.clone();\n\n\t\t\t} else {\n\n\t\t\t\titem.point.copy( hit.point );\n\n\t\t\t}\n\n\t\t}\n\n\t\titem.callback( hit );\n\n\t}\n\n\t// add and remove cameras used for sorting\n\taddCamera( camera ) {\n\n\t\tconst { queryMap, cameras } = this;\n\t\tcameras.add( camera );\n\t\tqueryMap.forEach( o => this._enqueue( o ) );\n\n\t}\n\n\tdeleteCamera( camera ) {\n\n\t\tconst { cameras } = this;\n\t\tcameras.delete( camera );\n\n\t}\n\n\t// run the given item index if possible\n\trunIfNeeded( index ) {\n\n\t\tconst { queryMap, queued } = this;\n\t\tconst item = queryMap.get( index );\n\t\tif ( item.queued ) {\n\n\t\t\tthis._updateQuery( item );\n\t\t\titem.queued = false;\n\t\t\tqueued.splice( queued.indexOf( item ), 1 );\n\n\t\t}\n\n\t}\n\n\t// set the scene used for query\n\tsetScene( ...objects ) {\n\n\t\tconst { observer } = this;\n\t\tobserver.dispose();\n\t\tobjects.forEach( o => observer.observe( o ) );\n\t\tthis.objects = objects;\n\t\tthis._scheduleRun();\n\n\t}\n\n\t// update the ellipsoid and frame based on a tiles renderer, updating the item rays only if necessary\n\tsetEllipsoidFromTilesRenderer( tilesRenderer ) {\n\n\t\tconst { queryMap, ellipsoid, frame } = this;\n\t\tif (\n\t\t\t! ellipsoid.radius.equals( tilesRenderer.ellipsoid.radius ) ||\n\t\t\t! frame.equals( tilesRenderer.group.matrixWorld )\n\t\t) {\n\n\t\t\tellipsoid.copy( tilesRenderer.ellipsoid );\n\t\t\tframe.copy( tilesRenderer.group.matrixWorld );\n\n\t\t\t// update the query rays for any item specified via lat / lon\n\t\t\tqueryMap.forEach( o => {\n\n\t\t\t\tif ( 'lat' in o ) {\n\n\t\t\t\t\tconst { lat, lon, ray } = o;\n\t\t\t\t\tellipsoid.getCartographicToPosition( lat, lon, 1e4, ray.origin ).applyMatrix4( frame );\n\t\t\t\t\tellipsoid.getCartographicToNormal( lat, lon, ray.direction ).transformDirection( frame ).multiplyScalar( - 1 );\n\n\t\t\t\t}\n\n\t\t\t\tthis._enqueue( o );\n\n\t\t\t} );\n\n\n\t\t}\n\n\t}\n\n\t// register query callbacks\n\tregisterRayQuery( ray, callback ) {\n\n\t\tconst index = this.index ++;\n\t\tconst item = {\n\t\t\tray: ray.clone(),\n\t\t\tcallback,\n\t\t\tqueued: false,\n\t\t\tdistance: - 1,\n\t\t\tpoint: null,\n\t\t};\n\n\t\tthis.queryMap.set( index, item );\n\t\tthis._enqueue( item );\n\t\treturn index;\n\n\t}\n\n\tregisterLatLonQuery( lat, lon, callback ) {\n\n\t\tconst { ellipsoid, frame } = this;\n\t\tconst index = this.index ++;\n\n\t\tconst ray = new Ray();\n\t\tellipsoid.getCartographicToPosition( lat, lon, 1e4, ray.origin ).applyMatrix4( frame );\n\t\tellipsoid.getCartographicToNormal( lat, lon, ray.direction ).transformDirection( frame ).multiplyScalar( - 1 );\n\n\t\tconst item = {\n\t\t\tray: ray.clone(),\n\t\t\tlat, lon,\n\t\t\tcallback,\n\t\t\tqueued: false,\n\t\t\tdistance: - 1,\n\t\t\tpoint: null,\n\t\t};\n\n\t\tthis.queryMap.set( index, item );\n\t\tthis._enqueue( item );\n\t\treturn index;\n\n\t}\n\n\tunregisterQuery( index ) {\n\n\t\tconst { queued, queryMap } = this;\n\t\tconst item = queryMap.get( index );\n\t\tqueryMap.delete( index );\n\n\t\tif ( item && item.queued ) {\n\n\t\t\titem.queued = false;\n\t\t\tqueued.splice( queued.indexOf( item ), 1 );\n\n\t\t}\n\n\t}\n\n\t// dispose of everything\n\tdispose() {\n\n\t\tthis.queryMap.clear();\n\t\tthis.queued.length = 0;\n\t\tthis.objects.length = 0;\n\t\tthis.observer.dispose();\n\n\t}\n\n}\n\n// copied from three-mesh-bvh\nconst closestPointLineToLine = ( function () {\n\n\t// https://github.com/juj/MathGeoLib/blob/master/src/Geometry/Line.cpp#L56\n\tconst dir1 = new Vector3();\n\tconst dir2 = new Vector3();\n\tconst v02 = new Vector3();\n\treturn function closestPointLineToLine( l1, l2, result ) {\n\n\t\tconst v0 = l1.start;\n\t\tconst v10 = dir1;\n\t\tconst v2 = l2.start;\n\t\tconst v32 = dir2;\n\n\t\tv02.subVectors( v0, v2 );\n\t\tdir1.subVectors( l1.end, l1.start );\n\t\tdir2.subVectors( l2.end, l2.start );\n\n\t\t// float d0232 = v02.Dot(v32);\n\t\tconst d0232 = v02.dot( v32 );\n\n\t\t// float d3210 = v32.Dot(v10);\n\t\tconst d3210 = v32.dot( v10 );\n\n\t\t// float d3232 = v32.Dot(v32);\n\t\tconst d3232 = v32.dot( v32 );\n\n\t\t// float d0210 = v02.Dot(v10);\n\t\tconst d0210 = v02.dot( v10 );\n\n\t\t// float d1010 = v10.Dot(v10);\n\t\tconst d1010 = v10.dot( v10 );\n\n\t\t// float denom = d1010*d3232 - d3210*d3210;\n\t\tconst denom = d1010 * d3232 - d3210 * d3210;\n\n\t\tlet d, d2;\n\t\tif ( denom !== 0 ) {\n\n\t\t\td = ( d0232 * d3210 - d0210 * d3232 ) / denom;\n\n\t\t} else {\n\n\t\t\td = 0;\n\n\t\t}\n\n\t\td2 = ( d0232 + d * d3210 ) / d3232; // eslint-disable-line\n\n\t\tresult.x = d;\n\t\tresult.y = d2;\n\n\t};\n\n} )();\n","import { cloneElement, createContext, forwardRef, useCallback, useContext, useEffect, useMemo, useRef } from 'react';\nimport { OBJECT_FRAME } from '3d-tiles-renderer/three';\nimport { Matrix4, Ray, Vector3 } from 'three';\nimport { useFrame, useThree } from '@react-three/fiber';\nimport { useMultipleRefs } from '../utilities/useMultipleRefs.js';\nimport { TilesRendererContext } from './TilesRenderer.jsx';\nimport { QueryManager } from '../utilities/QueryManager.js';\nimport { useDeepOptions } from '../utilities/useOptions.js';\nimport { useApplyRefs } from '../utilities/useApplyRefs.js';\n\nconst QueryManagerContext = createContext( null );\nconst _matrix = /* @__PURE__ */ new Matrix4();\nconst _ray = /* @__PURE__ */ new Ray();\n\nexport const AnimatedSettledObject = forwardRef( function AnimatedSettledObject( props, ref ) {\n\n\tconst {\n\t\tinterpolationFactor = 0.025,\n\t\tonQueryUpdate = null,\n\t\t...rest\n\t} = props;\n\n\tconst tiles = useContext( TilesRendererContext );\n\tconst queries = useContext( QueryManagerContext );\n\tconst invalidate = useThree( ( { invalidate } ) => invalidate );\n\tconst target = useMemo( () => new Vector3(), [] );\n\tconst isInitialized = useMemo( () => ( { value: false } ), [] );\n\tconst isTargetSet = useMemo( () => ( { value: false } ), [] );\n\tconst objectRef = useRef( null );\n\n\tconst queryCallback = useCallback( hit => {\n\n\t\tif ( tiles === null || hit === null || objectRef.current === null ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst { lat, lon, rayorigin, raydirection } = rest;\n\t\tif ( lat !== null && lon !== null ) {\n\n\t\t\ttarget.copy( hit.point );\n\t\t\tisTargetSet.value = true;\n\n\t\t\tqueries.ellipsoid.getObjectFrame( lat, lon, 0, 0, 0, 0, _matrix, OBJECT_FRAME ).premultiply( tiles.group.matrixWorld );\n\t\t\tobjectRef.current.quaternion.setFromRotationMatrix( _matrix );\n\t\t\tinvalidate();\n\n\t\t} else if ( rayorigin !== null && raydirection !== null ) {\n\n\t\t\ttarget.copy( hit.point );\n\t\t\tisTargetSet.value = true;\n\n\t\t\tobjectRef.current.quaternion.identity();\n\t\t\tinvalidate();\n\n\t\t}\n\n\t\tif ( onQueryUpdate ) {\n\n\t\t\tonQueryUpdate( hit );\n\n\t\t}\n\n\t}, [ invalidate, isTargetSet, queries.ellipsoid, rest, target, tiles, onQueryUpdate ] );\n\n\t// interpolate the point position\n\tuseFrame( ( state, delta ) => {\n\n\t\tif ( objectRef.current ) {\n\n\t\t\tobjectRef.current.visible = isInitialized.value;\n\n\t\t}\n\n\t\tif ( objectRef.current && isTargetSet.value ) {\n\n\t\t\t// jump the point to the target if it's being set for the first time\n\t\t\tif ( isInitialized.value === false ) {\n\n\t\t\t\tisInitialized.value = true;\n\t\t\t\tobjectRef.current.position.copy( target );\n\n\t\t\t} else {\n\n\t\t\t\t// framerate independent lerp by Freya Holmer\n\t\t\t\tconst factor = 1 - 2 ** ( - delta / interpolationFactor );\n\t\t\t\tif ( objectRef.current.position.distanceToSquared( target ) > 1e-6 ) {\n\n\t\t\t\t\tobjectRef.current.position.lerp(\n\t\t\t\t\t\ttarget, interpolationFactor === 0 ? 1 : factor\n\t\t\t\t\t);\n\n\t\t\t\t\tinvalidate();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobjectRef.current.position.copy( target );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\treturn (\n\t\t<SettledObject\n\t\t\tref={ useMultipleRefs( objectRef, ref ) }\n\t\t\tonQueryUpdate={ queryCallback }\n\t\t\t{ ...rest }\n\t\t/>\n\t);\n\n} );\n\n// Object that updates its \"settled\" state\nexport const SettledObject = forwardRef( function SettledObject( props, ref ) {\n\n\tconst {\n\t\tcomponent = <group />,\n\t\tlat = null,\n\t\tlon = null,\n\t\trayorigin = null,\n\t\traydirection = null,\n\t\tonQueryUpdate = null,\n\n\t\t...rest\n\t} = props;\n\n\tconst objectRef = useRef( null );\n\tconst tiles = useContext( TilesRendererContext );\n\tconst queries = useContext( QueryManagerContext );\n\tconst invalidate = useThree( ( { invalidate } ) => invalidate );\n\tconst target = useMemo( () => new Vector3(), [] );\n\n\tuseEffect( () => {\n\n\t\tconst callback = hit => {\n\n\t\t\tif ( onQueryUpdate ) {\n\n\t\t\t\tonQueryUpdate( hit );\n\n\t\t\t} else if ( tiles && hit !== null && objectRef.current !== null ) {\n\n\t\t\t\tif ( lat !== null && lon !== null ) {\n\n\t\t\t\t\tobjectRef.current.position.copy( hit.point );\n\t\t\t\t\tqueries.ellipsoid.getObjectFrame( lat, lon, 0, 0, 0, 0, _matrix, OBJECT_FRAME ).premultiply( tiles.group.matrixWorld );\n\t\t\t\t\tobjectRef.current.quaternion.setFromRotationMatrix( _matrix );\n\t\t\t\t\tinvalidate();\n\n\t\t\t\t} else if ( rayorigin !== null && raydirection !== null ) {\n\n\t\t\t\t\tobjectRef.current.position.copy( hit.point );\n\t\t\t\t\tobjectRef.current.quaternion.identity();\n\t\t\t\t\tinvalidate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tif ( lat !== null && lon !== null ) {\n\n\t\t\tconst index = queries.registerLatLonQuery( lat, lon, callback );\n\t\t\treturn () => queries.unregisterQuery( index );\n\n\t\t} else if ( rayorigin !== null && raydirection !== null ) {\n\n\t\t\t_ray.origin.copy( rayorigin );\n\t\t\t_ray.direction.copy( raydirection );\n\t\t\tconst index = queries.registerRayQuery( _ray, callback );\n\t\t\treturn () => queries.unregisterQuery( index );\n\n\t\t}\n\n\t}, [ lat, lon, rayorigin, raydirection, queries, tiles, invalidate, target, onQueryUpdate ] );\n\n\treturn cloneElement( component, { ...rest, ref: useMultipleRefs( objectRef, ref ), raycast: () => false } );\n\n} );\n\nexport const SettledObjects = forwardRef( function SettledObjects( props, ref ) {\n\n\tconst threeScene = useThree( ( { scene } ) => scene );\n\tconst {\n\t\tscene = threeScene,\n\t\tchildren,\n\t\t...rest\n\t} = props;\n\n\tconst tiles = useContext( TilesRendererContext );\n\tconst queries = useMemo( () => new QueryManager(), [] );\n\tconst camera = useThree( ( { camera } ) => camera );\n\n\tuseDeepOptions( queries, rest );\n\n\tuseEffect( () => {\n\n\t\treturn () => queries.dispose();\n\n\t}, [ queries ] );\n\n\tuseEffect( () => {\n\n\t\tqueries.setScene( ...( Array.isArray( scene ) ? scene : [ scene ] ) );\n\n\t}, [ queries, scene ] );\n\n\tuseEffect( () => {\n\n\t\tqueries.addCamera( camera );\n\n\t}, [ queries, camera ] );\n\n\tuseFrame( () => {\n\n\t\tif ( tiles ) {\n\n\t\t\tqueries.setEllipsoidFromTilesRenderer( tiles );\n\n\t\t}\n\n\t} );\n\n\t// assign ref\n\tuseApplyRefs( queries, ref );\n\n\treturn (\n\t\t<QueryManagerContext.Provider value={ queries }>\n\t\t\t<group matrixAutoUpdate={ false } matrixWorldAutoUpdate={ false }>\n\t\t\t\t{ children }\n\t\t\t</group>\n\t\t</QueryManagerContext.Provider>\n\t);\n\n} );\n","import { StrictMode, useRef } from 'react';\nimport { createRoot } from 'react-dom/client';\n\n// TilesRenderer, controls and attribution imports\nimport {\n\tTilesPlugin,\n\tTilesRenderer,\n\tTilesAttributionOverlay,\n\tGlobeControls,\n\tCompassGizmo,\n\tSettledObjects,\n\tAnimatedSettledObject,\n} from '3d-tiles-renderer/r3f';\n\n// Plugins\nimport {\n\tCesiumIonAuthPlugin,\n\tUpdateOnChangePlugin,\n\tTileCompressionPlugin,\n\tTilesFadePlugin,\n\tGLTFExtensionsPlugin,\n} from '3d-tiles-renderer/plugins';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\n\n// R3F, DREI and LEVA imports\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { Environment } from '@react-three/drei';\nimport { useControls } from 'leva';\nimport { MathUtils, Vector3 } from 'three';\nimport { TilesLoadingBar } from './components/TilesLoadingBar.jsx';\nimport { CameraViewTransition } from './components/CameraViewTransition.jsx';\n\nconst dracoLoader = new DRACOLoader().setDecoderPath( 'https://www.gstatic.com/draco/v1/decoders/' );\nconst vec1 = new Vector3();\nconst vec2 = new Vector3();\n\nfunction Pin( props ) {\n\n\tconst ref = useRef();\n\tuseFrame( ( { camera } ) => {\n\n\t\tconst pin = ref.current;\n\t\tlet scale;\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tvec1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tvec2.setFromMatrixPosition( pin.matrixWorld );\n\n\t\t\tconst distance = vec1.distanceTo( vec2 );\n\t\t\tscale = 0.05 * distance * Math.atan( camera.fov * MathUtils.DEG2RAD );\n\n\t\t} else {\n\n\t\t\tscale = ( camera.top - camera.bottom ) * 0.05 / camera.zoom;\n\n\t\t}\n\n\t\tscale = Math.min( Math.max( scale, 100 ), 200000 );\n\t\tpin.scale.setScalar( scale * 0.5 );\n\n\t} );\n\n\treturn (\n\t\t<AnimatedSettledObject ref={ ref } { ...props }>\n\t\t\t<mesh position-y={ 1.25 } scale={ 0.5 }>\n\t\t\t\t<sphereGeometry />\n\t\t\t\t<meshStandardMaterial color={ 0xf44336 } emissive={ 0xf44336 } emissiveIntensity={ 0.25 } />\n\t\t\t</mesh>\n\t\t\t<mesh position-y={ 0.5 } scale={ [ 0.1, 1, 0.1 ] }>\n\t\t\t\t<cylinderGeometry />\n\t\t\t\t<meshStandardMaterial color={ 0xf44336 } emissive={ 0xf44336 } emissiveIntensity={ 0.25 } />\n\t\t\t</mesh>\n\t\t</AnimatedSettledObject>\n\t);\n\n}\n\nfunction App() {\n\n\tconst levaParams = {\n\t\tortho: false,\n\t};\n\n\t// TODO: the renderer is rerendering due to floating point issues\n\t// - see if we should trigger an invalidate on tiles plugin add and params change\n\t// - see if we need to trigger a force update on plugin add for the UpdateOnChange plugin\n\n\tconst pins = new Array( 500 ).fill().map( ( e, i ) => {\n\n\t\tconst lat = - Math.PI / 2 + Math.PI * i / 500;\n\t\tconst lon = i;\n\n\t\treturn <Pin\n\t\t\tkey={ i }\n\t\t\tlat={ lat }\n\t\t\tlon={ lon }\n\t\t\tscale={ 0.1 }\n\t\t/>;\n\n\t} );\n\n\tconst { ortho } = useControls( levaParams );\n\treturn (\n\t\t<Canvas\n\t\t\tframeloop='demand'\n\t\t\tcamera={ {\n\t\t\t\tposition: [ 0, 0.5 * 1e7, 1.5 * 1e7 ],\n\t\t\t} }\n\t\t\tstyle={ {\n\t\t\t\twidth: '100%',\n\t\t\t\theight: '100%',\n\t\t\t\tposition: 'absolute',\n\t\t\t\tmargin: 0,\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t} }\n\t\t\tflat\n\t\t>\n\t\t\t<color attach=\"background\" args={ [ 0x111111 ] } />\n\n\t\t\t<TilesRenderer group={ { rotation: [ - Math.PI / 2, 0, 0 ] } }>\n\t\t\t\t<TilesPlugin plugin={ CesiumIonAuthPlugin } args={ { apiToken: import.meta.env.VITE_ION_KEY, assetId: '2275207', autoRefreshToken: true } } />\n\t\t\t\t<TilesPlugin plugin={ GLTFExtensionsPlugin } dracoLoader={ dracoLoader } />\n\t\t\t\t<TilesPlugin plugin={ TileCompressionPlugin } />\n\t\t\t\t<TilesPlugin plugin={ UpdateOnChangePlugin } />\n\t\t\t\t<TilesPlugin plugin={ TilesFadePlugin } />\n\n\t\t\t\t{/* Controls */}\n\t\t\t\t<GlobeControls enableDamping={ true } />\n\t\t\t\t<CameraViewTransition mode={ ortho ? 'orthographic' : 'perspective' } />\n\n\t\t\t\t{/* Attributions */}\n\t\t\t\t<TilesAttributionOverlay />\n\n\t\t\t\t{/* Add compass gizmo */}\n\t\t\t\t<CompassGizmo />\n\n\t\t\t\t<TilesLoadingBar />\n\n\t\t\t\t<SettledObjects>{ pins }</SettledObjects>\n\t\t\t</TilesRenderer>\n\n\t\t\t{/* other r3f staging */}\n\t\t\t<Environment\n\t\t\t\tpreset=\"sunset\"\n\t\t\t\tbackgroundBlurriness={ 0.9 }\n\t\t\t\tenvironmentIntensity={ 1 }\n\t\t\t/>\n\t\t</Canvas>\n\t);\n\n}\n\ncreateRoot( document.getElementById( 'root' ) ).render(\n\t<StrictMode>\n\t\t<App />\n\t</StrictMode>,\n);\n\n"],"names":["useMultipleRefs","refs","useCallback","target","ref","traverse","root","callback","c","SceneObserver","EventDispatcher","child","observed","_raycaster","Raycaster","_line0","Line3","_line1","_params","Vector2","_direction","Vector3","_matrix","Matrix4","QueryManager","Ellipsoid","queueAll","queued","item","info","cameras","duration","start","camera","i","l","ray","distance","inFrustum","closestPointLineToLine","p","a","b","hit","queryMap","o","index","objects","observer","tilesRenderer","ellipsoid","frame","lat","lon","Ray","dir1","dir2","v02","l1","l2","result","v0","v10","v2","v32","d0232","d3210","d3232","d0210","denom","d","d2","QueryManagerContext","createContext","_ray","AnimatedSettledObject","forwardRef","props","interpolationFactor","onQueryUpdate","rest","tiles","useContext","TilesRendererContext","queries","invalidate","useThree","useMemo","isInitialized","isTargetSet","objectRef","useRef","queryCallback","rayorigin","raydirection","OBJECT_FRAME","useFrame","state","delta","factor","jsx","SettledObject","component","useEffect","cloneElement","SettledObjects","threeScene","scene","children","useDeepOptions","useApplyRefs","dracoLoader","DRACOLoader","vec1","vec2","Pin","pin","scale","MathUtils","jsxs","App","levaParams","pins","e","ortho","useControls","Canvas","TilesRenderer","TilesPlugin","CesiumIonAuthPlugin","GLTFExtensionsPlugin","TileCompressionPlugin","UpdateOnChangePlugin","TilesFadePlugin","GlobeControls","CameraViewTransition","TilesAttributionOverlay","CompassGizmo","TilesLoadingBar","Environment","createRoot","StrictMode"],"mappings":"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"}