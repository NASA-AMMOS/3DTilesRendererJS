import{S as C,W as M,a as E,G as x,g as S,d as v,h as B,B as I,D as L,A as W,i as G,j as z}from"./three.module-DBfedTbk.js";/* empty css               */import{E as y,a as F,S as O}from"./EllipsoidRegionHelper-D9Sr6EUI.js";import{O as A}from"./OrbitControls-DkXhkMTr.js";import{g as D}from"./lil-gui.module.min-BH_YJbPT.js";import"./EllipsoidRegion-By3sIuka.js";import"./Ellipsoid-CLPX16sm.js";let l,w,p,o,r,P,c,m,e,g,f,a;const t=[];let u;const s={displaySphereHelper:!1,displayBoxHelper:!1,displayPoints:!1};j();b();function j(){p=new C,o=new M({antialias:!0}),o.setPixelRatio(window.devicePixelRatio),o.setSize(window.innerWidth,window.innerHeight),o.setClearColor(1383455),o.shadowMap.enabled=!0,document.body.appendChild(o.domElement),l=new E(60,window.innerWidth/window.innerHeight,.1,100),l.position.set(3,1.5,1),r=new x,r.rotation.x=-Math.PI/2,p.add(r),u=new x,r.add(u),e=new y,e.material=new S({polygonOffset:!0,polygonOffsetFactor:1,polygonOffsetUnits:1}),e.ellipsoidRegion.radius.z=.95,e.ellipsoidRegion.heightStart=-.05,e.ellipsoidRegion.heightEnd=.05,e.ellipsoidRegion.latStart=0,e.ellipsoidRegion.latEnd=Math.PI/4,e.ellipsoidRegion.lonStart=0,e.ellipsoidRegion.lonEnd=Math.PI/4,g=new y,g.material=new S({opacity:.1,transparent:!0,depthWrite:!1}),f=new F(e.ellipsoidRegion),f.material.color.set(1383455).convertSRGBToLinear(),c=new O(new v),a=new x,m=new B(new I),a.add(m),r.add(e,g,f,c,a),n(),w=new A(l,o.domElement),w.screenSpacePanning=!1,w.minDistance=1,w.maxDistance=2e3,P=new L(16777215,1.25),P.position.set(1,2,3).multiplyScalar(40),p.add(P);const h=new W(16777215,.15);p.add(h);const i=new D;i.add(s,"displayBoxHelper"),i.add(s,"displaySphereHelper"),i.add(s,"displayPoints");const R=i.addFolder("radius");R.add(e.ellipsoidRegion.radius,"x",.1,2).onChange(n),R.add(e.ellipsoidRegion.radius,"y",.1,2).onChange(n),R.add(e.ellipsoidRegion.radius,"z",.1,2).onChange(n);const d=i.addFolder("region");d.add(e.ellipsoidRegion,"latStart",-Math.PI/2,Math.PI/2).onChange(n),d.add(e.ellipsoidRegion,"latEnd",-Math.PI/2,Math.PI/2).onChange(n),d.add(e.ellipsoidRegion,"lonStart",0,2*Math.PI).onChange(n),d.add(e.ellipsoidRegion,"lonEnd",0,2*Math.PI).onChange(n),d.add(e.ellipsoidRegion,"heightStart",-.25,.25).onChange(n),d.add(e.ellipsoidRegion,"heightEnd",-.25,.25).onChange(n),H(),window.addEventListener("resize",H,!1)}function n(){g.ellipsoidRegion.radius.copy(e.ellipsoidRegion.radius),e.update(),g.update(),f.update(),e.ellipsoidRegion.getBoundingSphere(c.sphere),e.ellipsoidRegion.getBoundingBox(m.box,a.matrix),a.matrix.decompose(a.position,a.quaternion,a.scale);const h=e.ellipsoidRegion._getPoints();t.forEach(i=>i.visible=!1);for(let i=0;i<h.length;i++)t[i]||(t.push(new G(new z(.01))),t[i].material.color.set(16711680),u.add(t[i])),t[i].position.copy(h[i]),t[i].visible=!0}function H(){l.aspect=window.innerWidth/window.innerHeight,o.setPixelRatio(window.devicePixelRatio),o.setSize(window.innerWidth,window.innerHeight),l.updateProjectionMatrix()}function b(){requestAnimationFrame(b),q()}function q(){c.visible=s.displaySphereHelper,m.visible=s.displayBoxHelper,u.visible=s.displayPoints,o.render(p,l)}
//# sourceMappingURL=ellipsoid-mqmEuNn8.js.map
