import{ae as I,d as W,S as v,W as D,a as L,m as w,i as S,j as A,af as C,ag as G,s as H}from"./three.module-DBfedTbk.js";/* empty css               */import{O as N,T as j}from"./TilesRenderer-UmkQDoLb.js";import{E as z}from"./EnvironmentControls-BBSDix_Q.js";import{D as V}from"./DebugTilesPlugin-BHDfPO8s.js";import{g as U}from"./lil-gui.module.min-BH_YJbPT.js";import"./I3DMLoader-Co8j1K3i.js";import"./BatchTable-CRr3zuRk.js";import"./GLTFLoader-BjagHNWe.js";import"./Ellipsoid-CLPX16sm.js";import"./B3DMLoader-D_8ejTd0.js";import"./PNTSLoader-C47qgwy1.js";import"./CMPTLoader-CdR2x6K5.js";import"./EllipsoidRegion-By3sIuka.js";import"./EllipsoidRegionHelper-D9Sr6EUI.js";class F{constructor(){this.name="LOAD_REGION_PLUGIN",this.regions=[],this.tiles=null}init(e){this.tiles=e}addRegion(e){this.regions.indexOf(e)===-1&&this.regions.push(e)}removeRegion(e){const t=this.regions.indexOf(e);t!==-1&&this.regions.splice(t,1)}hasRegion(e){return this.regions.indexOf(e)!==-1}clearRegions(){this.regions=[]}calculateTileViewError(e,t){const b=e.cached.boundingVolume,{regions:O,tiles:P}=this;let R=!1,h=null,f=-1/0;for(const y of O){const k=y.intersectsTile(b,e,P);R=R||k,f=Math.max(y.calculateError(e,P),f),y.mask&&(h=h||k)}return t.inView=R&&h!==!1,t.error=f,t.inView||h!==null}dispose(){this.regions=[]}}class T{constructor(e={}){typeof e=="number"&&(console.warn("LoadRegionPlugin: Region constructor has been changed to take options as an object."),e={errorTarget:e});const{errorTarget:t=10,mask:b=!1}=e;this.errorTarget=t,this.mask=b}intersectsTile(){}calculateError(e,t){return e.geometricError-this.errorTarget+t.errorTarget}}class X extends T{constructor(e={}){typeof e=="number"&&(console.warn("SphereRegion: Region constructor has been changed to take options as an object."),e={errorTarget:arguments[0],sphere:arguments[1]});const{sphere:t=new W}=e;super(e),this.sphere=t.clone()}intersectsTile(e){return e.intersectsSphere(this.sphere)}}class Y extends T{constructor(e={}){typeof e=="number"&&(console.warn("RayRegion: Region constructor has been changed to take options as an object."),e={errorTarget:arguments[0],ray:arguments[1]});const{ray:t=new I}=e;super(e),this.ray=t.clone()}intersectsTile(e){return e.intersectsRay(this.ray)}}class q extends T{constructor(e={}){typeof e=="number"&&(console.warn("RayRegion: Region constructor has been changed to take options as an object."),e={errorTarget:arguments[0],obb:arguments[1]});const{obb:t=new N}=e;super(e),this.obb=t.clone(),this.obb.update()}intersectsTile(e){return e.intersectsOBB(this.obb)}}let i,E,d,a,o,p,m,l,c,g,s,B,u=0;const r={animate:!0,region:"SPHERE",regionErrorTarget:.1,regionOnly:!0,mask:!1,displayBoxBounds:!1};J();M();function J(){d=new v,a=new D({antialias:!0}),a.setPixelRatio(window.devicePixelRatio),a.setSize(window.innerWidth,window.innerHeight),a.setClearColor(1383455),document.body.appendChild(a.domElement),a.domElement.tabIndex=1,i=new L(60,window.innerWidth/window.innerHeight,1,1e5),i.position.set(100,100,100),i.lookAt(0,0,0),d.add(i),B=new H,o=new j("https://raw.githubusercontent.com/NASA-AMMOS/3DTilesSampleData/master/msl-dingo-gap/0528_0260184_to_s64o256_colorize/0528_0260184_to_s64o256_colorize/0528_0260184_to_s64o256_colorize_tileset.json"),o.registerPlugin(new V),o.registerPlugin(new F),o.group.rotation.x=Math.PI/2,d.add(o.group),E=new z(o.group,i,a.domElement),E.enableDamping=!0,p=new Y,m=new X,m.sphere.radius=15,l=new q,l.obb.box.min=new w(-50,-50,-5),l.obb.box.max=new w(50,50,5),c=new S(new A),c.material.transparent=!0,c.material.opacity=.25,s=new S(new C),s.material.transparent=!0,s.material.opacity=.25,g=new G,g.geometry.setFromPoints([new w,new w(0,-1e3,0)]),g.material.opacity=.5,g.material.transparent=!0,_(r.region),x(),window.addEventListener("resize",x,!1);const n=new U;n.width=300,n.add(r,"region",["SPHERE","BOX","RAY"]).onChange(_),n.add(r,"regionErrorTarget").min(0).max(1),n.add(r,"animate"),n.add(r,"mask"),n.add(r,"regionOnly").onChange(e=>{e?o.deleteCamera(i):(o.setCamera(i),x())}),n.add(r,"displayBoxBounds"),n.open()}function x(){i.aspect=window.innerWidth/window.innerHeight,a.setSize(window.innerWidth,window.innerHeight),i.updateProjectionMatrix(),a.setPixelRatio(window.devicePixelRatio*1),o.setResolutionFromRenderer(i,a)}function _(n){const e=o.getPluginByName("LOAD_REGION_PLUGIN");e.clearRegions(),d.remove(g,c,s),n==="SPHERE"?(e.addRegion(m),d.add(c)):n==="RAY"?(e.addRegion(p),d.add(g)):n==="BOX"&&(e.addRegion(l),d.add(s))}function M(){requestAnimationFrame(M),r.animate?u+=B.getDelta():B.getDelta();const n=o.getPluginByName("DEBUG_TILES_PLUGIN");n.enabled=r.displayBoxBounds,n.displayBoxBounds=r.displayBoxBounds,r.region==="SPHERE"?(c.position.set(Math.sin(u)*20,0,Math.cos(u)*20),c.scale.setScalar(m.sphere.radius),m.mask=r.mask,m.errorTarget=r.mask?1/0:r.regionErrorTarget,m.sphere.center.copy(c.position).applyMatrix4(o.group.matrixWorldInverse)):r.region==="RAY"?(g.position.set(Math.sin(u*2)*20,50,Math.cos(u*2)*20),p.mask=r.mask,p.errorTarget=r.mask?1/0:r.regionErrorTarget,p.ray.direction.set(0,-1,0).transformDirection(o.group.matrixWorldInverse),p.ray.origin.copy(g.position).applyMatrix4(o.group.matrixWorldInverse)):r.region==="BOX"&&(s.scale.set(50,10,50),s.rotation.y=u,s.updateMatrixWorld(),s.geometry.computeBoundingBox(),l.mask=r.mask,l.errorTarget=r.mask?1/0:r.regionErrorTarget,l.obb.box.copy(s.geometry.boundingBox),l.obb.transform.copy(s.matrixWorld).premultiply(o.group.matrixWorldInverse),l.obb.update()),E.update(),i.updateMatrixWorld(),o.update(),a.render(d,i)}
//# sourceMappingURL=loadRegion-CzJnn2pu.js.map
