import{k as z,l as A,m as U,n as N,i as V,B as j,d as H,o as $,p as B,e as J,q as Z,W as q,S as Q,a as Y,O as X,M as T}from"./three.module-DBfedTbk.js";/* empty css               */import{L as K,T as ee}from"./TilesRenderer-UmkQDoLb.js";import{C as R,t as te}from"./Ellipsoid-CLPX16sm.js";import{W as P}from"./I3DMLoader-Co8j1K3i.js";import{G as ae}from"./GlobeControls-CXYtrMsa.js";import{C as ie}from"./CameraTransitionManager-WDxKQLbX.js";import{C as se}from"./CesiumIonAuthPlugin-Dna7A4TJ.js";import{U as ne}from"./UpdateOnChangePlugin-CSUQNJGT.js";import{T as re}from"./TileCompressionPlugin-DGTgcH3Q.js";import{F as oe,G as ce}from"./GLTFExtensionsPlugin-CPIAc_W2.js";import{T as le}from"./TilesFadePlugin-BEWaci6K.js";import{D as de}from"./DRACOLoader-BzMKjVbk.js";import{g as he}from"./lil-gui.module.min-BH_YJbPT.js";import{S as ue}from"./stats.module--VATS4Kh.js";import{T as me}from"./TopoLinesPlugin-BG8u9x4C.js";import"./BatchTable-CRr3zuRk.js";import"./B3DMLoader-D_8ejTd0.js";import"./GLTFLoader-BjagHNWe.js";import"./PNTSLoader-C47qgwy1.js";import"./CMPTLoader-CdR2x6K5.js";import"./EllipsoidRegion-By3sIuka.js";import"./EnvironmentControls-BBSDix_Q.js";import"./GeometryClipper-OrdjW0tI.js";import"./EPSGTilesPlugin-C-ZW09X4.js";import"./ImageFormatPlugin-Cwk6ueKg.js";import"./TMSImageSource-CIsRgZv6.js";import"./TiledImageSource-DLt2EM25.js";class pe{set delay(e){this.deferCallbacks.delay=e}get delay(){return this.deferCallbacks.delay}set bytesTarget(e){this.lruCache.minBytesSize=e}get bytesTarget(){return this.lruCache.minBytesSize}get estimatedGpuBytes(){return this.lruCache.cachedBytes}constructor(e={}){const{delay:t=0,bytesTarget:a=0}=e;this.name="UNLOAD_TILES_PLUGIN",this.tiles=null,this.lruCache=new K,this.deferCallbacks=new ge,this.delay=t,this.bytesTarget=a}init(e){this.tiles=e;const{lruCache:t,deferCallbacks:a}=this;a.callback=n=>{t.markUnused(n),t.scheduleUnload(!1)};const s=n=>{const i=n.cached.scene;e.visibleTiles.has(n)||e.invokeOnePlugin(o=>o.unloadTileFromGPU&&o.unloadTileFromGPU(i,n))};this._onUpdateBefore=()=>{t.unloadPriorityCallback=e.lruCache.unloadPriorityCallback,t.computeMemoryUsageCallback=e.lruCache.computeMemoryUsageCallback,t.minSize=1/0,t.maxSize=1/0,t.maxBytesSize=1/0,t.unloadPercent=1,t.autoMarkUnused=!1},this._onVisibilityChangeCallback=({tile:n,visible:i})=>{i?(t.add(n,s),e.markTileUsed(n),a.cancel(n)):a.run(n)},e.forEachLoadedModel((n,i)=>{const c=e.visibleTiles.has(i);this._onVisibilityChangeCallback({scene:n,visible:c})}),e.addEventListener("tile-visibility-change",this._onVisibilityChangeCallback),e.addEventListener("update-before",this._onUpdateBefore)}unloadTileFromGPU(e,t){e&&e.traverse(a=>{if(a.material){const s=a.material;s.dispose();for(const n in s){const i=s[n];i&&i.isTexture&&i.dispose()}}a.geometry&&a.geometry.dispose()})}dispose(){this.tiles.removeEventListener("tile-visibility-change",this._onVisibilityChangeCallback),this.tiles.removeEventListener("update-before",this._onUpdateBefore),this.deferCallbacks.cancelAll()}}class ge{constructor(e=()=>{}){this.map=new Map,this.callback=e,this.delay=0}run(e){const{map:t,delay:a}=this;if(t.has(e))throw new Error("DeferCallbackManager: Callback already initialized.");a===0?this.callback(e):t.set(e,setTimeout(()=>this.callback(e),a))}cancel(e){const{map:t}=this;t.has(e)&&(clearTimeout(t.get(e)),t.delete(e))}cancelAll(){this.map.forEach((e,t)=>{this.cancel(t)})}}const v=new A,D=new U,G=new U;class fe extends z{constructor(...e){super(...e),this.resetDistance=1e4,this._matricesTextureHandle=null,this._lastCameraPos=new A,this._forceUpdate=!0,this._matrices=[]}setMatrixAt(e,t){super.setMatrixAt(e,t),this._forceUpdate=!0;const a=this._matrices;for(;a.length<=e;)a.push(new A);a[e].copy(t)}setInstanceCount(...e){super.setInstanceCount(...e);const t=this._matrices;for(;t.length>this.instanceCount;)t.pop()}onBeforeRender(e,t,a,s,n,i){super.onBeforeRender(e,t,a,s,n,i),D.setFromMatrixPosition(a.matrixWorld),G.setFromMatrixPosition(this._lastCameraPos);const c=this._matricesTexture;let o=this._modelViewMatricesTexture;if((!o||o.image.width!==c.image.width||o.image.height!==c.image.height)&&(o&&o.dispose(),o=c.clone(),o.source=new N({...o.image,data:o.image.data.slice()}),this._modelViewMatricesTexture=o),this._forceUpdate||D.distanceTo(G)>this.resetDistance){const h=this._matrices,u=o.image.data;for(let m=0;m<this.maxInstanceCount;m++){const p=h[m];p?v.copy(p):v.identity(),v.premultiply(this.matrixWorld).premultiply(a.matrixWorldInverse).toArray(u,m*16)}o.needsUpdate=!0,this._lastCameraPos.copy(a.matrixWorld),this._forceUpdate=!1}this._matricesTextureHandle=this._matricesTexture,this._matricesTexture=this._modelViewMatricesTexture,this.matrixWorld.copy(this._lastCameraPos)}onAfterRender(){this.updateMatrixWorld(),this._matricesTexture=this._matricesTextureHandle,this._matricesTextureHandle=null}onAfterShadow(e,t,a,s,n,i){this.onAfterRender(e,null,s,n,i)}dispose(){super.dispose(),this._modelViewMatricesTexture&&this._modelViewMatricesTexture.dispose()}}const y=new V,w=[];class xe extends fe{constructor(...e){super(...e),this.expandPercent=.25,this.maxInstanceExpansionSize=1/0,this._freeGeometryIds=[]}findFreeId(e,t,a){const s=!!this.geometry.index,n=Math.max(s?e.index.count:-1,a),i=Math.max(e.attributes.position.count,t);let c=-1,o=1/0;const h=this._freeGeometryIds;if(h.forEach((u,m)=>{const p=this.getGeometryRangeAt(u),{reservedIndexCount:g,reservedVertexCount:f}=p;if(g>=n&&f>=i){const M=n-g+(i-f);M<o&&(c=m,o=M)}}),c!==-1){const u=h[c];return h.splice(c,1),u}else return-1}addGeometry(e,t,a){const s=!!this.geometry.index;a=Math.max(s?e.index.count:-1,a),t=Math.max(e.attributes.position.count,t);const{expandPercent:n,_freeGeometryIds:i}=this;let c=this.findFreeId(e,t,a);if(c!==-1)this.setGeometryAt(c,e);else{const o=()=>{const m=this.unusedVertexCount<t,p=this.unusedIndexCount<a;return m||p},h=e.index,u=e.attributes.position;if(t=Math.max(t,u.count),a=Math.max(a,h?h.count:0),o()&&(i.forEach(m=>this.deleteGeometry(m)),i.length=0,this.optimize(),o())){const m=this.geometry.index,p=this.geometry.attributes.position;let g,f;if(m){const M=Math.ceil(n*m.count);g=Math.max(M,a,h.count)+m.count}else g=Math.max(this.unusedIndexCount,a);if(p){const M=Math.ceil(n*p.count);f=Math.max(M,t,u.count)+p.count}else f=Math.max(this.unusedVertexCount,t);this.setGeometrySize(f,g)}c=super.addGeometry(e,t,a)}return c}addInstance(e){if(this.maxInstanceCount===this.instanceCount){const t=Math.ceil(this.maxInstanceCount*(1+this.expandPercent));this.setInstanceCount(Math.min(t,this.maxInstanceExpansionSize))}return super.addInstance(e)}deleteInstance(e){const t=this.getGeometryIdAt(e);return t!==-1&&this._freeGeometryIds.push(t),super.deleteInstance(e)}raycastInstance(e,t,a){const s=this.geometry,n=this.getGeometryIdAt(e);y.material=this.material,y.geometry.index=s.index,y.geometry.attributes=s.attributes;const i=this.getGeometryRangeAt(n);y.geometry.setDrawRange(i.start,i.count),y.geometry.boundingBox===null&&(y.geometry.boundingBox=new j),y.geometry.boundingSphere===null&&(y.geometry.boundingSphere=new H),this.getMatrixAt(e,y.matrixWorld).premultiply(this.matrixWorld),this.getBoundingBoxAt(n,y.geometry.boundingBox),this.getBoundingSphereAt(n,y.geometry.boundingSphere),y.raycast(t,w);for(let c=0,o=w.length;c<o;c++){const h=w[c];h.object=this,h.batchId=e,a.push(h)}w.length=0}}function Ce(l){return l.r===1&&l.g===1&&l.b===1}function ye(l){l.needsUpdate=!0,l.onBeforeCompile=e=>{e.vertexShader=e.vertexShader.replace("#include <common>",`
				#include <common>
				varying float texture_index;
				`).replace("#include <uv_vertex>",`
				#include <uv_vertex>
				texture_index = getIndirectIndex( gl_DrawID );
				`),e.fragmentShader=e.fragmentShader.replace("#include <map_pars_fragment>",`
				#ifdef USE_MAP
				precision highp sampler2DArray;
				uniform sampler2DArray map;
				varying float texture_index;
				#endif
				`).replace("#include <map_fragment>",`
				#ifdef USE_MAP
					diffuseColor *= texture( map, vec3( vMapUv, texture_index ) );
				#endif
				`)}}const E=new oe(new Z),k=new J(new Uint8Array([255,255,255,255]),1,1);k.needsUpdate=!0;class Te{constructor(e={}){if(parseInt($)<170)throw new Error("BatchedTilesPlugin: Three.js revision 170 or higher required.");e={instanceCount:500,vertexCount:750,indexCount:2e3,expandPercent:.25,maxInstanceCount:1/0,discardOriginalContent:!0,textureSize:null,material:null,renderer:null,...e},this.name="BATCHED_TILES_PLUGIN",this.priority=-1;const t=e.renderer.getContext();this.instanceCount=e.instanceCount,this.vertexCount=e.vertexCount,this.indexCount=e.indexCount,this.material=e.material?e.material.clone():null,this.expandPercent=e.expandPercent,this.maxInstanceCount=Math.min(e.maxInstanceCount,t.getParameter(t.MAX_3D_TEXTURE_SIZE)),this.renderer=e.renderer,this.discardOriginalContent=e.discardOriginalContent,this.textureSize=e.textureSize,this.batchedMesh=null,this.arrayTarget=null,this.tiles=null,this._onLoadModel=null,this._onDisposeModel=null,this._onVisibilityChange=null,this._tileToInstanceId=new Map}init(e){this._onDisposeModel=({scene:t,tile:a})=>{this.removeSceneFromBatchedMesh(t,a)},e.addEventListener("dispose-model",this._onDisposeModel),this.tiles=e}initBatchedMesh(e){if(this.batchedMesh!==null)return;const{instanceCount:t,vertexCount:a,indexCount:s,tiles:n,renderer:i,textureSize:c}=this,o=this.material?this.material:new e.material.constructor,h=new xe(t,t*a,t*s,o);h.name="BatchTilesPlugin",h.frustumCulled=!1,n.group.add(h),h.updateMatrixWorld();const u=e.material.map,m={colorSpace:u.colorSpace,wrapS:u.wrapS,wrapT:u.wrapT,wrapR:u.wrapS,magFilter:u.magFilter},p=new B(c||u.image.width,c||u.image.height,t);Object.assign(p.texture,m),i.initRenderTarget(p),o.map=p.texture,ye(o),this.arrayTarget=p,this.batchedMesh=h}setTileVisible(e,t){const a=e.cached.scene;if(t&&this.addSceneToBatchedMesh(a,e),this._tileToInstanceId.has(e)){this._tileToInstanceId.get(e).forEach(i=>{this.batchedMesh.setVisibleAt(i,t)});const n=this.tiles;return t?n.visibleTiles.add(e):n.visibleTiles.delete(e),n.dispatchEvent({type:"tile-visibility-change",scene:a,tile:e,visible:t}),!0}return!1}unloadTileFromGPU(e,t){return!this.discardOriginalContent&&this._tileToInstanceId.has(t)?(this.removeSceneFromBatchedMesh(e,t),!0):!1}assignTextureToLayer(e,t){this.expandArrayTargetIfNeeded();const{renderer:a}=this,s=a.getRenderTarget();a.setRenderTarget(this.arrayTarget,t),E.material.map=e,E.render(a),a.setRenderTarget(s),E.material.map=null,e.dispose()}expandArrayTargetIfNeeded(){const{batchedMesh:e,arrayTarget:t,renderer:a}=this,s=Math.min(e.maxInstanceCount,this.maxInstanceCount);if(s>t.depth){const n={colorSpace:t.texture.colorSpace,wrapS:t.texture.wrapS,wrapT:t.texture.wrapT,generateMipmaps:t.texture.generateMipmaps,minFilter:t.texture.minFilter,magFilter:t.texture.magFilter},i=new B(t.width,t.height,s);Object.assign(i.texture,n),a.initRenderTarget(i),a.copyTextureToTexture(t.texture,i.texture),t.dispose(),e.material.map=i.texture,this.arrayTarget=i}}removeSceneFromBatchedMesh(e,t){if(this._tileToInstanceId.has(t)){const a=this._tileToInstanceId.get(t);this._tileToInstanceId.delete(t),a.forEach(s=>{this.batchedMesh.deleteInstance(s)})}}addSceneToBatchedMesh(e,t){if(this._tileToInstanceId.has(t))return;const a=[];e.traverse(i=>{i.isMesh&&a.push(i)});let s=!0;a.forEach(i=>{if(this.batchedMesh&&s){const c=i.geometry.attributes,o=this.batchedMesh.geometry.attributes;for(const h in o)if(!(h in c)){s=!1;return}}});const n=!this.batchedMesh||this.batchedMesh.instanceCount+a.length<=this.maxInstanceCount;if(s&&n){e.updateMatrixWorld();const i=[];a.forEach(c=>{this.initBatchedMesh(c);const{geometry:o,material:h}=c,{batchedMesh:u,expandPercent:m}=this;u.expandPercent=m;const p=u.addGeometry(o,this.vertexCount,this.indexCount),g=u.addInstance(p);i.push(g),u.setMatrixAt(g,c.matrixWorld),u.setVisibleAt(g,!1),Ce(h.color)||(h.color.setHSL(Math.random(),.5,.5),u.setColorAt(g,h.color));const f=h.map;f?this.assignTextureToLayer(f,g):this.assignTextureToLayer(k,g)}),this._tileToInstanceId.set(t,i),this.discardOriginalContent&&(t.cached.textures.forEach(c=>{c.image instanceof ImageBitmap&&c.image.close()}),t.cached.scene=null,t.cached.materials=[],t.cached.geometries=[],t.cached.textures=[])}}raycastTile(e,t,a,s){return this._tileToInstanceId.has(e)?(this._tileToInstanceId.get(e).forEach(i=>{this.batchedMesh.raycastInstance(i,a,s)}),!0):!1}dispose(){const{arrayTarget:e,tiles:t,batchedMesh:a}=this;e&&e.dispose(),a&&(a.material.dispose(),a.geometry.dispose(),a.dispose(),a.removeFromParent()),t.removeEventListener("dispose-model",this._onDisposeModel)}getTileBatchIds(e){return this._tileToInstanceId.get(e)}}let b,I,C,r,d,S,_;const x={orthographic:!1,enableCacheDisplay:!1,enableRendererStats:!1,useBatchedMesh:!!new URLSearchParams(window.location.hash.replace(/^#/,"")).get("batched"),displayTopoLines:!1,errorTarget:20,reload:O};be();W();function O(){r&&(I.remove(r.group),r.dispose(),r=null),r=new ee,r.registerPlugin(new se({apiToken:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI3MGNiODVmZS1hNzliLTQ5NWYtOTdhOS02ZmIzMmZlYWRlMzAiLCJpZCI6MjY3NzgzLCJpYXQiOjE3MzY0Mjg0MTJ9.o7EtbJyQ6yNAgfHFal1RS1BKKM-RmZNusqBCeiowNZo",assetId:"2275207",autoRefreshToken:!0})),r.registerPlugin(new re),r.registerPlugin(new ne),r.registerPlugin(new pe),r.registerPlugin(new le),r.registerPlugin(new me({projection:"ellipsoid"})),r.registerPlugin(new ce({dracoLoader:new de().setDecoderPath("https://unpkg.com/three@0.153.0/examples/jsm/libs/draco/gltf/")})),x.useBatchedMesh&&r.registerPlugin(new Te({renderer:C,discardOriginalContent:!1,instanceCount:250})),r.group.rotation.x=-Math.PI/2,I.add(r.group),r.setResolutionFromRenderer(d.camera,C),r.setCamera(d.camera),b.setEllipsoid(r.ellipsoid,r.group)}function be(){C=new q({antialias:!0}),C.setClearColor(1383455),document.body.appendChild(C.domElement),I=new Q,d=new ie(new Y(60,window.innerWidth/window.innerHeight,1,16e7),new X(-1,1,1,-1,1,16e7)),d.perspectiveCamera.position.set(48e5,257e4,1472e4),d.perspectiveCamera.lookAt(0,0,0),d.autoSync=!1,d.addEventListener("camera-change",({camera:a,prevCamera:s})=>{r.deleteCamera(s),r.setCamera(a),b.setCamera(a)}),d.orthographicPositionalZoom=!1,b=new ae(I,d.camera,C.domElement,null),b.enableDamping=!0,O(),L(),window.addEventListener("resize",L,!1),window.addEventListener("hashchange",F);const l=new he;l.width=300,l.add(x,"orthographic").onChange(a=>{b.getPivotPoint(d.fixedPoint),d.animating||(d.syncCameras(),b.adjustCamera(d.perspectiveCamera),b.adjustCamera(d.orthographicCamera)),d.toggle()});const e=l.addFolder("Google Photorealistic Tiles");e.add(x,"useBatchedMesh").listen(),e.add(x,"reload");const t=l.addFolder("Example Options");t.add(x,"displayTopoLines").listen(),t.add(x,"enableCacheDisplay"),t.add(x,"enableRendererStats"),t.add(x,"errorTarget",5,100,1).onChange(()=>{r.getPluginByName("UPDATE_ON_CHANGE_PLUGIN").needsUpdate=!0}),S=document.createElement("div"),document.getElementById("info").appendChild(S),_=new ue,_.showPanel(0),document.body.appendChild(_.dom),F(),setInterval(Me,100)}function L(){const{perspectiveCamera:l,orthographicCamera:e}=d,t=window.innerWidth/window.innerHeight;l.aspect=t,l.updateProjectionMatrix(),e.left=-e.top*t,e.right=-e.left,e.updateProjectionMatrix(),C.setSize(window.innerWidth,window.innerHeight),C.setPixelRatio(window.devicePixelRatio)}function Me(){if(!r)return;d.mode!=="perspective"&&!d.animating&&(b.getPivotPoint(d.fixedPoint),d.syncCameras());const l=d.perspectiveCamera,e={},t=r.group.matrixWorld.clone().invert(),a=l.matrixWorld.clone().premultiply(t);P.getCartographicFromObjectFrame(a,e,R),e.azimuth*=T.RAD2DEG,e.elevation*=T.RAD2DEG,e.roll*=T.RAD2DEG,e.lat*=T.RAD2DEG,e.lon*=T.RAD2DEG;const s=new URLSearchParams;s.set("lat",e.lat.toFixed(4)),s.set("lon",e.lon.toFixed(4)),s.set("height",e.height.toFixed(2)),s.set("az",e.azimuth.toFixed(2)),s.set("el",e.elevation.toFixed(2)),s.set("roll",e.roll.toFixed(2)),x.useBatchedMesh&&s.set("batched",1),window.history.replaceState(void 0,void 0,`#${s}`)}function F(){const l=window.location.hash.replace(/^#/,""),e=new URLSearchParams(l);if(e.has("batched")&&(x.useBatchedMesh=!!e.get("batched")),!e.has("lat")&&!e.has("lon"))return;r.group.updateMatrixWorld();const t=d.perspectiveCamera,a=parseFloat(e.get("lat")),s=parseFloat(e.get("lon")),n=parseFloat(e.get("height"))||1e3;if(e.has("az")&&e.has("el")){const i=parseFloat(e.get("az")),c=parseFloat(e.get("el")),o=parseFloat(e.get("roll"))||0;P.getObjectFrame(a*T.DEG2RAD,s*T.DEG2RAD,n,i*T.DEG2RAD,c*T.DEG2RAD,o*T.DEG2RAD,t.matrixWorld,R),t.matrixWorld.premultiply(r.group.matrixWorld),t.matrixWorld.decompose(t.position,t.quaternion,t.scale)}else P.getCartographicToPosition(a*T.DEG2RAD,s*T.DEG2RAD,n,t.position),t.position.applyMatrix4(r.group.matrixWorld),t.lookAt(0,0,0);if(d.mode!=="perspective"){const i=d.mode;d.mode="perspective",d.syncCameras(),d.mode=i}}function W(){if(requestAnimationFrame(W),!r)return;b.enabled=!d.animating,b.update(),d.update();const l=d.camera;r.setResolutionFromRenderer(l,C),r.setCamera(l);const e=r.getPluginByName("TOPO_LINES_PLUGIN");e.topoOpacity=x.displayTopoLines?.5:0,e.cartoOpacity=x.displayTopoLines?.5:0,l.updateMatrixWorld(),r.errorTarget=x.errorTarget,r.update(),C.render(I,l),_.update(),Ie()}function Ie(){var n,i,c;let l="";if(x.enableCacheDisplay){const o=r.lruCache,h=o.cachedBytes/o.maxBytesSize;l+=`Downloading: ${r.stats.downloading} Parsing: ${r.stats.parsing} Visible: ${r.visibleTiles.size}<br/>`,l+=`Cache: ${(100*h).toFixed(2)}% ~${(o.cachedBytes/1e3/1e3).toFixed(2)}mb<br/>`}if(x.enableRendererStats){const o=C.info.memory,h=C.info.render,u=C.info.programs.length;l+=`Geometries: ${o.geometries} Textures: ${o.textures} Programs: ${u} Draw Calls: ${h.calls}`;const m=r.getPluginByName("BATCHED_TILES_PLUGIN"),p=r.getPluginByName("FADE_TILES_PLUGIN");if(m){let g=0;(n=m.batchedMesh)==null||n._instanceInfo.forEach(f=>{f.visible&&f.active&&g++}),(i=p.batchedMesh)==null||i._instanceInfo.forEach(f=>{f.visible&&f.active&&g++}),l+=", Batched: "+g}}S.innerHTML!==l&&(S.innerHTML=l);const e=r.group.matrixWorld.clone().invert(),t=d.camera.position.clone().applyMatrix4(e),a={};P.getPositionToCartographic(t,a);const s=((c=r.getAttributions()[0])==null?void 0:c.value)||"";document.getElementById("credits").innerText=te(a.lat,a.lon)+`
`+s}
//# sourceMappingURL=googleMapsExample-CnmUEc6H.js.map
