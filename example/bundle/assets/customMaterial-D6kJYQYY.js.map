{"version":3,"file":"customMaterial-D6kJYQYY.js","sources":["../../customMaterial.js"],"sourcesContent":["import { TilesRenderer } from '3d-tiles-renderer';\nimport {\n\tScene,\n\tDirectionalLight,\n\tAmbientLight,\n\tWebGLRenderer,\n\tPerspectiveCamera,\n\tBox3,\n\tOrthographicCamera,\n\tGroup,\n\tShaderMaterial,\n\tMeshStandardMaterial,\n\tPCFSoftShadowMap,\n\tSphere,\n} from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\nlet camera, controls, scene, renderer, tiles, orthoCamera;\nlet offsetParent, box, sphere, dirLight, statsContainer;\nlet stats;\n\nconst DEFAULT = 0;\nconst GRADIENT = 1;\nconst TOPOGRAPHIC_LINES = 2;\nconst LIGHTING = 3;\nconst params = {\n\n\t'material': DEFAULT,\n\t'orthographic': false,\n\t'rebuild': initTiles,\n\n};\n\nconst gradientShader = {\n\tvertexShader: /* glsl */`\n\t\tvarying vec3 wPosition;\n\t\tvoid main() {\n\n\t\t\t#include <begin_vertex>\n\t\t\t#include <project_vertex>\n\t\t\twPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;\n\n\t\t}\n\t`,\n\tfragmentShader: /* glsl */`\n\t\tvarying vec3 wPosition;\n\t\tvoid main() {\n\n\t\t\tfloat minVal = - 30.0;\n\t\t\tfloat maxVal = 30.0;\n\n\t\t\tfloat val = ( wPosition.y - minVal ) / ( maxVal - minVal );\n\n\t\t\tvec4 color1 = vec4( 0.149, 0.196, 0.219, 1.0 ) * 0.5;\n\t\t\tvec4 color2 = vec4( 1.0 );\n\n\t\t\tgl_FragColor = mix( color1, color2, val );\n\n\t\t}\n\t`,\n\n};\n\nconst topoShader = {\n\textensions: {\n\t\tderivatives: true,\n\t},\n\tvertexShader: /* glsl */`\n\t\tvarying vec3 wPosition;\n\t\tvarying vec3 vViewPosition;\n\t\tvoid main() {\n\n\t\t\t#include <begin_vertex>\n\t\t\t#include <project_vertex>\n\t\t\twPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;\n\t\t\tvViewPosition = - mvPosition.xyz;\n\n\t\t}\n\t`,\n\tfragmentShader: /* glsl */`\n\t\tvarying vec3 wPosition;\n\t\tvarying vec3 vViewPosition;\n\t\tvoid main() {\n\n\t\t\t// lighting\n\t\t\tvec3 fdx = vec3( dFdx( wPosition.x ), dFdx( wPosition.y ), dFdx( wPosition.z ) );\n\t\t\tvec3 fdy = vec3( dFdy( wPosition.x ), dFdy( wPosition.y ), dFdy( wPosition.z ) );\n\t\t\tvec3 worldNormal = normalize( cross( fdx, fdy ) );\n\n\t\t\tfloat lighting =\n\t\t\t\t0.4 +\n\t\t\t\tclamp( dot( worldNormal, vec3( 1.0, 1.0, 1.0 ) ), 0.0, 1.0 ) * 0.5 +\n\t\t\t\tclamp( dot( worldNormal, vec3( - 1.0, 1.0, - 1.0 ) ), 0.0, 1.0 ) * 0.3;\n\n\t\t\t// thickness scale\n\t\t\tfloat upwardness = dot( worldNormal, vec3( 0.0, 1.0, 0.0 ) );\n\t\t\tfloat yInv = clamp( 1.0 - abs( upwardness ), 0.0, 1.0 );\n\t\t\tfloat thicknessScale = pow( yInv, 0.4 );\n\t\t\tthicknessScale *= 0.25 + 0.5 * ( vViewPosition.z + 1.0 ) / 2.0;\n\n\t\t\t// thickness\n\t\t\tfloat thickness = 0.01 * thicknessScale;\n\t\t\tfloat thickness2 = thickness / 2.0;\n\t\t\tfloat m = mod( wPosition.y, 3.0 );\n\n\t\t\t// soften edge\n\t\t\tfloat center = thickness2;\n\t\t\tfloat dist = clamp( abs( m - thickness2 ) / thickness2, 0.0, 1.0 );\n\n\t\t\tvec4 topoColor = vec4( 0.149, 0.196, 0.219, 1.0 ) * 0.5;\n\t\t\tgl_FragColor = mix( topoColor * lighting, vec4( lighting ), dist );\n\n\t\t}\n\t`,\n\n};\n\ninit();\nanimate();\n\nfunction updateMaterial( scene ) {\n\n\tconst materialIndex = parseFloat( params.material );\n\tscene.traverse( c => {\n\n\t\tif ( c.isMesh ) {\n\n\t\t\tc.material.dispose();\n\t\t\tswitch ( materialIndex ) {\n\n\t\t\t\tcase DEFAULT:\n\t\t\t\t\tc.material = c.originalMaterial;\n\t\t\t\t\tc.material.side = 2;\n\t\t\t\t\tc.receiveShadow = false;\n\t\t\t\t\tc.castShadow = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase GRADIENT:\n\t\t\t\t\tc.material = new ShaderMaterial( gradientShader );\n\t\t\t\t\tc.material.side = 2;\n\t\t\t\t\tc.receiveShadow = false;\n\t\t\t\t\tc.castShadow = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TOPOGRAPHIC_LINES:\n\t\t\t\t\tc.material = new ShaderMaterial( topoShader );\n\t\t\t\t\tc.material.side = 2;\n\t\t\t\t\tc.material.flatShading = true;\n\t\t\t\t\tc.receiveShadow = false;\n\t\t\t\t\tc.castShadow = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase LIGHTING:\n\t\t\t\t\tc.material = new MeshStandardMaterial();\n\t\t\t\t\tc.material.side = 2;\n\t\t\t\t\tc.receiveShadow = true;\n\t\t\t\t\tc.castShadow = true;\n\n\t\t\t}\n\n\n\t\t}\n\n\t} );\n\n}\n\nfunction onLoadModel( { scene } ) {\n\n\tscene.traverse( c => {\n\n\t\tif ( c.isMesh ) {\n\n\t\t\tc.originalMaterial = c.material;\n\n\t\t}\n\n\t} );\n\n\tupdateMaterial( scene );\n\n}\n\nfunction onDisposeModel( { scene } ) {\n\n\tscene.traverse( c => {\n\n\t\tif ( c.isMesh ) {\n\n\t\t\tc.material.dispose();\n\n\t\t}\n\n\t} );\n\n}\n\nfunction initTiles() {\n\n\tif ( tiles ) {\n\n\t\ttiles.group.parent.remove( tiles.group );\n\t\ttiles.dispose();\n\n\t}\n\n\tconst url = window.location.hash.replace( /^#/, '' ) || '../data/tileset.json';\n\ttiles = new TilesRenderer( url );\n\ttiles.errorTarget = 2;\n\ttiles.addEventListener( 'load-model', onLoadModel );\n\ttiles.addEventListener( 'dispose-model', onDisposeModel );\n\toffsetParent.add( tiles.group );\n\n}\n\nfunction init() {\n\n\tscene = new Scene();\n\n\t// primary camera view\n\trenderer = new WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( 0x151c1f );\n\trenderer.shadowMap.enabled = true;\n\trenderer.shadowMap.type = PCFSoftShadowMap;\n\n\tdocument.body.appendChild( renderer.domElement );\n\n\tcamera = new PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 1, 4000 );\n\tcamera.position.set( 400, 400, 400 );\n\n\torthoCamera = new OrthographicCamera();\n\n\t// controls\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\tcontrols.screenSpacePanning = false;\n\tcontrols.minDistance = 1;\n\tcontrols.maxDistance = 2000;\n\n\t// lights\n\tdirLight = new DirectionalLight( 0xffffff, 1.25 );\n\tdirLight.position.set( 1, 2, 3 ).multiplyScalar( 40 );\n\tdirLight.castShadow = true;\n\tdirLight.shadow.bias = - 0.01;\n\tdirLight.shadow.mapSize.setScalar( 2048 );\n\n\tconst shadowCam = dirLight.shadow.camera;\n\tshadowCam.left = - 200;\n\tshadowCam.bottom = - 200;\n\tshadowCam.right = 200;\n\tshadowCam.top = 200;\n\tshadowCam.updateProjectionMatrix();\n\n\tscene.add( dirLight );\n\n\tconst ambLight = new AmbientLight( 0xffffff, 0.05 );\n\tscene.add( ambLight );\n\n\tbox = new Box3();\n\tsphere = new Sphere();\n\n\toffsetParent = new Group();\n\tscene.add( offsetParent );\n\n\tinitTiles();\n\n\tonWindowResize();\n\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t// GUI\n\tconst gui = new GUI();\n\tgui.width = 300;\n\tgui.add( params, 'orthographic' );\n\tgui.add( params, 'material', { DEFAULT, GRADIENT, TOPOGRAPHIC_LINES, LIGHTING } )\n\t\t.onChange( () => {\n\n\t\t\ttiles.forEachLoadedModel( updateMaterial );\n\n\t\t} );\n\tgui.add( params, 'rebuild' );\n\tgui.open();\n\n\t// Stats\n\tstats = new Stats();\n\tstats.showPanel( 0 );\n\tdocument.body.appendChild( stats.dom );\n\n\tstatsContainer = document.createElement( 'div' );\n\tstatsContainer.style.position = 'absolute';\n\tstatsContainer.style.top = 0;\n\tstatsContainer.style.left = 0;\n\tstatsContainer.style.color = 'white';\n\tstatsContainer.style.width = '100%';\n\tstatsContainer.style.textAlign = 'center';\n\tstatsContainer.style.padding = '5px';\n\tstatsContainer.style.pointerEvents = 'none';\n\tstatsContainer.style.lineHeight = '1.5em';\n\tdocument.body.appendChild( statsContainer );\n\n}\n\nfunction onWindowResize() {\n\n\tcamera.aspect = window.innerWidth / window.innerHeight;\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\tcamera.updateProjectionMatrix();\n\n\tupdateOrthoCamera();\n\n}\n\nfunction updateOrthoCamera() {\n\n\torthoCamera.position.copy( camera.position );\n\torthoCamera.rotation.copy( camera.rotation );\n\n\tconst scale = camera.position.distanceTo( controls.target ) / 2.0;\n\tconst aspect = window.innerWidth / window.innerHeight;\n\torthoCamera.left = - aspect * scale;\n\torthoCamera.right = aspect * scale;\n\torthoCamera.bottom = - scale;\n\torthoCamera.top = scale;\n\torthoCamera.near = camera.near;\n\torthoCamera.far = camera.far;\n\torthoCamera.updateProjectionMatrix();\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tif ( params.orthographic ) {\n\n\t\ttiles.deleteCamera( camera );\n\t\ttiles.setCamera( orthoCamera );\n\t\ttiles.setResolutionFromRenderer( orthoCamera, renderer );\n\n\t} else {\n\n\t\ttiles.deleteCamera( orthoCamera );\n\t\ttiles.setCamera( camera );\n\t\ttiles.setResolutionFromRenderer( camera, renderer );\n\n\t}\n\n\toffsetParent.rotation.set( 0, 0, 0 );\n\tif ( params.up === '-Z' ) {\n\n\t\toffsetParent.rotation.x = Math.PI / 2;\n\n\t}\n\toffsetParent.updateMatrixWorld( true );\n\n\t// update tiles center\n\tif ( tiles.getBoundingBox( box ) ) {\n\n\t\tbox.getCenter( tiles.group.position );\n\t\ttiles.group.position.multiplyScalar( - 1 );\n\n\t} else if ( tiles.getBoundingSphere( sphere ) ) {\n\n\t\ttiles.group.position.copy( sphere.center );\n\t\ttiles.group.position.multiplyScalar( - 1 );\n\n\t}\n\n\t// update tiles\n\twindow.tiles = tiles;\n\tcamera.updateMatrixWorld();\n\torthoCamera.updateMatrixWorld();\n\ttiles.update();\n\n\trender();\n\tstats.update();\n\n}\n\nfunction render() {\n\n\tupdateOrthoCamera();\n\n\tstatsContainer.innerText =\n\t\t`Geometries: ${ renderer.info.memory.geometries } ` +\n\t\t`Textures: ${ renderer.info.memory.textures } ` +\n\t\t`Programs: ${ renderer.info.programs.length } `;\n\n\trenderer.render( scene, params.orthographic ? orthoCamera : camera );\n\n}\n"],"names":["camera","controls","scene","renderer","tiles","orthoCamera","offsetParent","box","sphere","dirLight","statsContainer","stats","DEFAULT","GRADIENT","TOPOGRAPHIC_LINES","LIGHTING","params","initTiles","gradientShader","topoShader","init","animate","updateMaterial","materialIndex","c","ShaderMaterial","MeshStandardMaterial","onLoadModel","onDisposeModel","url","TilesRenderer","Scene","WebGLRenderer","PCFSoftShadowMap","PerspectiveCamera","OrthographicCamera","OrbitControls","DirectionalLight","shadowCam","ambLight","AmbientLight","Box3","Sphere","Group","onWindowResize","gui","GUI","Stats","updateOrthoCamera","scale","aspect","render"],"mappings":"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"}