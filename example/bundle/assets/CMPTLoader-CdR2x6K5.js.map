{"version":3,"file":"CMPTLoader-CdR2x6K5.js","sources":["../../../src/core/renderer/loaders/CMPTLoaderBase.js","../../../src/three/renderer/loaders/CMPTLoader.js"],"sourcesContent":["// CMPT File Format\n// https://github.com/CesiumGS/3d-tiles/blob/master/specification/TileFormats/Composite/README.md\nimport { LoaderBase } from './LoaderBase.js';\nimport { readMagicBytes } from '../utilities/LoaderUtils.js';\n\nexport class CMPTLoaderBase extends LoaderBase {\n\n\tparse( buffer ) {\n\n\t\tconst dataView = new DataView( buffer );\n\n\t\t// 16-byte header\n\n\t\t// 4 bytes\n\t\tconst magic = readMagicBytes( dataView );\n\n\t\tconsole.assert( magic === 'cmpt', 'CMPTLoader: The magic bytes equal \"cmpt\".' );\n\n\t\t// 4 bytes\n\t\tconst version = dataView.getUint32( 4, true );\n\n\t\tconsole.assert( version === 1, 'CMPTLoader: The version listed in the header is \"1\".' );\n\n\t\t// 4 bytes\n\t\tconst byteLength = dataView.getUint32( 8, true );\n\n\t\tconsole.assert( byteLength === buffer.byteLength, 'CMPTLoader: The contents buffer length listed in the header matches the file.' );\n\n\t\t// 4 bytes\n\t\tconst tilesLength = dataView.getUint32( 12, true );\n\n\t\tconst tiles = [];\n\t\tlet offset = 16;\n\t\tfor ( let i = 0; i < tilesLength; i ++ ) {\n\n\t\t\tconst tileView = new DataView( buffer, offset, 12 );\n\t\t\tconst tileMagic = readMagicBytes( tileView );\n\t\t\tconst tileVersion = tileView.getUint32( 4, true );\n\t\t\tconst byteLength = tileView.getUint32( 8, true );\n\n\t\t\tconst tileBuffer = new Uint8Array( buffer, offset, byteLength );\n\t\t\ttiles.push( {\n\n\t\t\t\ttype: tileMagic,\n\t\t\t\tbuffer: tileBuffer,\n\t\t\t\tversion: tileVersion,\n\n\t\t\t} );\n\t\t\toffset += byteLength;\n\n\t\t}\n\n\t\treturn {\n\t\t\tversion,\n\t\t\ttiles,\n\t\t};\n\n\t}\n\n}\n\n","import { Group, DefaultLoadingManager, Matrix4 } from 'three';\nimport { CMPTLoaderBase } from '3d-tiles-renderer/core';\nimport { B3DMLoader } from './B3DMLoader.js';\nimport { PNTSLoader } from './PNTSLoader.js';\nimport { I3DMLoader } from './I3DMLoader.js';\nimport { WGS84_ELLIPSOID } from '../math/GeoConstants.js';\n\nexport class CMPTLoader extends CMPTLoaderBase {\n\n\tconstructor( manager = DefaultLoadingManager ) {\n\n\t\tsuper();\n\t\tthis.manager = manager;\n\t\tthis.adjustmentTransform = new Matrix4();\n\t\tthis.ellipsoid = WGS84_ELLIPSOID.clone();\n\n\t}\n\n\tparse( buffer ) {\n\n\t\tconst result = super.parse( buffer );\n\t\tconst { manager, ellipsoid, adjustmentTransform } = this;\n\t\tconst promises = [];\n\n\t\tfor ( const i in result.tiles ) {\n\n\t\t\tconst { type, buffer } = result.tiles[ i ];\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'b3dm': {\n\n\t\t\t\t\tconst slicedBuffer = buffer.slice();\n\t\t\t\t\tconst loader = new B3DMLoader( manager );\n\t\t\t\t\tloader.workingPath = this.workingPath;\n\t\t\t\t\tloader.fetchOptions = this.fetchOptions;\n\t\t\t\t\tloader.adjustmentTransform.copy( adjustmentTransform );\n\n\t\t\t\t\tconst promise = loader.parse( slicedBuffer.buffer );\n\t\t\t\t\tpromises.push( promise );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tcase 'pnts': {\n\n\t\t\t\t\tconst slicedBuffer = buffer.slice();\n\t\t\t\t\tconst loader = new PNTSLoader( manager );\n\t\t\t\t\tloader.workingPath = this.workingPath;\n\t\t\t\t\tloader.fetchOptions = this.fetchOptions;\n\n\t\t\t\t\tconst promise = loader.parse( slicedBuffer.buffer );\n\t\t\t\t\tpromises.push( promise );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tcase 'i3dm': {\n\n\t\t\t\t\tconst slicedBuffer = buffer.slice();\n\t\t\t\t\tconst loader = new I3DMLoader( manager );\n\t\t\t\t\tloader.workingPath = this.workingPath;\n\t\t\t\t\tloader.fetchOptions = this.fetchOptions;\n\n\t\t\t\t\tloader.ellipsoid.copy( ellipsoid );\n\t\t\t\t\tloader.adjustmentTransform.copy( adjustmentTransform );\n\n\t\t\t\t\tconst promise = loader.parse( slicedBuffer.buffer );\n\t\t\t\t\tpromises.push( promise );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( promises ).then( results => {\n\n\t\t\tconst group = new Group();\n\t\t\tresults.forEach( result => {\n\n\t\t\t\tgroup.add( result.scene );\n\n\t\t\t} );\n\n\t\t\treturn {\n\n\t\t\t\ttiles: results,\n\t\t\t\tscene: group,\n\n\t\t\t};\n\n\t\t} );\n\n\t}\n\n}\n"],"names":["CMPTLoaderBase","LoaderBase","buffer","dataView","magic","readMagicBytes","version","byteLength","tilesLength","tiles","offset","i","tileView","tileMagic","tileVersion","tileBuffer","CMPTLoader","manager","DefaultLoadingManager","Matrix4","WGS84_ELLIPSOID","result","ellipsoid","adjustmentTransform","promises","type","slicedBuffer","loader","B3DMLoader","promise","PNTSLoader","I3DMLoader","results","group","Group"],"mappings":"gQAKO,MAAMA,UAAuBC,CAAW,CAE9C,MAAOC,EAAS,CAEf,MAAMC,EAAW,IAAI,SAAUD,CAAM,EAK/BE,EAAQC,EAAgBF,CAAQ,EAEtC,QAAQ,OAAQC,IAAU,OAAQ,2CAA2C,EAG7E,MAAME,EAAUH,EAAS,UAAW,EAAG,EAAI,EAE3C,QAAQ,OAAQG,IAAY,EAAG,sDAAsD,EAGrF,MAAMC,EAAaJ,EAAS,UAAW,EAAG,EAAI,EAE9C,QAAQ,OAAQI,IAAeL,EAAO,WAAY,+EAA+E,EAGjI,MAAMM,EAAcL,EAAS,UAAW,GAAI,EAAI,EAE1CM,EAAQ,CAAA,EACd,IAAIC,EAAS,GACb,QAAUC,EAAI,EAAGA,EAAIH,EAAaG,IAAO,CAExC,MAAMC,EAAW,IAAI,SAAUV,EAAQQ,EAAQ,EAAE,EAC3CG,EAAYR,EAAgBO,CAAQ,EACpCE,EAAcF,EAAS,UAAW,EAAG,EAAI,EACzCL,EAAaK,EAAS,UAAW,EAAG,EAAI,EAExCG,EAAa,IAAI,WAAYb,EAAQQ,EAAQH,CAAU,EAC7DE,EAAM,KAAM,CAEX,KAAMI,EACN,OAAQE,EACR,QAASD,CAEb,CAAI,EACDJ,GAAUH,CAEX,CAEA,MAAO,CACN,QAAAD,EACA,MAAAG,CACH,CAEC,CAED,CCpDO,MAAMO,UAAmBhB,CAAe,CAE9C,YAAaiB,EAAUC,EAAwB,CAE9C,MAAK,EACL,KAAK,QAAUD,EACf,KAAK,oBAAsB,IAAIE,EAC/B,KAAK,UAAYC,EAAgB,MAAK,CAEvC,CAEA,MAAOlB,EAAS,CAEf,MAAMmB,EAAS,MAAM,MAAOnB,CAAM,EAC5B,CAAE,QAAAe,EAAS,UAAAK,EAAW,oBAAAC,CAAmB,EAAK,KAC9CC,EAAW,CAAA,EAEjB,UAAYb,KAAKU,EAAO,MAAQ,CAE/B,KAAM,CAAE,KAAAI,EAAM,OAAAvB,CAAM,EAAKmB,EAAO,MAAOV,CAAC,EACxC,OAASc,EAAI,CAEZ,IAAK,OAAQ,CAEZ,MAAMC,EAAexB,EAAO,MAAK,EAC3ByB,EAAS,IAAIC,EAAYX,CAAO,EACtCU,EAAO,YAAc,KAAK,YAC1BA,EAAO,aAAe,KAAK,aAC3BA,EAAO,oBAAoB,KAAMJ,CAAmB,EAEpD,MAAMM,EAAUF,EAAO,MAAOD,EAAa,MAAM,EACjDF,EAAS,KAAMK,CAAO,EACtB,KAED,CAEA,IAAK,OAAQ,CAEZ,MAAMH,EAAexB,EAAO,MAAK,EAC3ByB,EAAS,IAAIG,EAAYb,CAAO,EACtCU,EAAO,YAAc,KAAK,YAC1BA,EAAO,aAAe,KAAK,aAE3B,MAAME,EAAUF,EAAO,MAAOD,EAAa,MAAM,EACjDF,EAAS,KAAMK,CAAO,EACtB,KAED,CAEA,IAAK,OAAQ,CAEZ,MAAMH,EAAexB,EAAO,MAAK,EAC3ByB,EAAS,IAAII,EAAYd,CAAO,EACtCU,EAAO,YAAc,KAAK,YAC1BA,EAAO,aAAe,KAAK,aAE3BA,EAAO,UAAU,KAAML,CAAS,EAChCK,EAAO,oBAAoB,KAAMJ,CAAmB,EAEpD,MAAMM,EAAUF,EAAO,MAAOD,EAAa,MAAM,EACjDF,EAAS,KAAMK,CAAO,EACtB,KAED,CAEJ,CAEE,CAEA,OAAO,QAAQ,IAAKL,CAAQ,EAAG,KAAMQ,GAAW,CAE/C,MAAMC,EAAQ,IAAIC,EAClB,OAAAF,EAAQ,QAASX,GAAU,CAE1BY,EAAM,IAAKZ,EAAO,KAAK,CAExB,CAAC,EAEM,CAEN,MAAOW,EACP,MAAOC,CAEX,CAEE,CAAC,CAEF,CAED"}