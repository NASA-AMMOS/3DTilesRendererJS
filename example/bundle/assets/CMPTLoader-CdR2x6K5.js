import{aY as g,l as w,G as L}from"./three.module-DBfedTbk.js";import{L as P,r as d}from"./BatchTable-CRr3zuRk.js";import{B as T}from"./B3DMLoader-D_8ejTd0.js";import{P as b}from"./PNTSLoader-C47qgwy1.js";import{W as y,I as M}from"./I3DMLoader-Co8j1K3i.js";class k extends P{parse(s){const n=new DataView(s),h=d(n);console.assert(h==="cmpt",'CMPTLoader: The magic bytes equal "cmpt".');const l=n.getUint32(4,!0);console.assert(l===1,'CMPTLoader: The version listed in the header is "1".');const p=n.getUint32(8,!0);console.assert(p===s.byteLength,"CMPTLoader: The contents buffer length listed in the header matches the file.");const c=n.getUint32(12,!0),a=[];let o=16;for(let r=0;r<c;r++){const t=new DataView(s,o,12),e=d(t),i=t.getUint32(4,!0),f=t.getUint32(8,!0),u=new Uint8Array(s,o,f);a.push({type:e,buffer:u,version:i}),o+=f}return{version:l,tiles:a}}}class V extends k{constructor(s=g){super(),this.manager=s,this.adjustmentTransform=new w,this.ellipsoid=y.clone()}parse(s){const n=super.parse(s),{manager:h,ellipsoid:l,adjustmentTransform:p}=this,c=[];for(const a in n.tiles){const{type:o,buffer:r}=n.tiles[a];switch(o){case"b3dm":{const t=r.slice(),e=new T(h);e.workingPath=this.workingPath,e.fetchOptions=this.fetchOptions,e.adjustmentTransform.copy(p);const i=e.parse(t.buffer);c.push(i);break}case"pnts":{const t=r.slice(),e=new b(h);e.workingPath=this.workingPath,e.fetchOptions=this.fetchOptions;const i=e.parse(t.buffer);c.push(i);break}case"i3dm":{const t=r.slice(),e=new M(h);e.workingPath=this.workingPath,e.fetchOptions=this.fetchOptions,e.ellipsoid.copy(l),e.adjustmentTransform.copy(p);const i=e.parse(t.buffer);c.push(i);break}}}return Promise.all(c).then(a=>{const o=new L;return a.forEach(r=>{o.add(r.scene)}),{tiles:a,scene:o}})}}export{V as C};
//# sourceMappingURL=CMPTLoader-CdR2x6K5.js.map
