import{G as g,d as T,h as k,ai as w,q as I,f as V,C as F}from"./three.module-DBfedTbk.js";import{S as W,a as z}from"./EllipsoidRegionHelper-D9Sr6EUI.js";import{t as j}from"./TilesRenderer-UmkQDoLb.js";const H=Symbol("ORIGINAL_MATERIAL"),x=Symbol("HAS_RANDOM_COLOR"),C=Symbol("HAS_RANDOM_NODE_COLOR"),E=Symbol("LOAD_TIME"),p=Symbol("PARENT_BOUND_REF_COUNT"),L=new T,B=()=>{},y={};function G(c){if(!y[c]){const e=Math.random(),t=.5+Math.random()*.5,r=.375+Math.random()*.25;y[c]=new F().setHSL(e,t,r)}return y[c]}const u=0,v=1,O=2,A=3,S=4,N=5,P=6,f=7,D=8,U=9,R=10,q=Object.freeze({NONE:u,SCREEN_ERROR:v,GEOMETRIC_ERROR:O,DISTANCE:A,DEPTH:S,RELATIVE_DEPTH:N,IS_LEAF:P,RANDOM_COLOR:f,RANDOM_NODE_COLOR:D,CUSTOM_COLOR:U,LOAD_ORDER:R});class X{static get ColorModes(){return q}get unlit(){return this._unlit}set unlit(e){e!==this._unlit&&(this._unlit=e,this.materialsNeedUpdate=!0)}get colorMode(){return this._colorMode}set colorMode(e){e!==this._colorMode&&(this._colorMode=e,this.materialsNeedUpdate=!0)}get enabled(){return this._enabled}set enabled(e){e!==this._enabled&&this.tiles!==null&&(e?this.init(this.tiles):this.dispose()),this._enabled=e}get displayParentBounds(){return this._displayParentBounds}set displayParentBounds(e){this._displayParentBounds!==e&&(this._displayParentBounds=e,e?this.tiles.traverse(t=>{t.__visible&&this._onTileVisibilityChange(t,!0)}):this.tiles.traverse(t=>{t[p]=null,this._onTileVisibilityChange(t,t.__visible)}))}constructor(e){e={displayParentBounds:!1,displayBoxBounds:!1,displaySphereBounds:!1,displayRegionBounds:!1,colorMode:u,maxDebugDepth:-1,maxDebugDistance:-1,maxDebugError:-1,customColorCallback:null,unlit:!1,enabled:!0,...e},this.name="DEBUG_TILES_PLUGIN",this.tiles=null,this._colorMode=null,this._unlit=null,this.materialsNeedUpdate=!1,this.extremeDebugDepth=-1,this.extremeDebugError=-1,this.boxGroup=null,this.sphereGroup=null,this.regionGroup=null,this._enabled=e.enabled,this._displayParentBounds=e.displayParentBounds,this.displayBoxBounds=e.displayBoxBounds,this.displaySphereBounds=e.displaySphereBounds,this.displayRegionBounds=e.displayRegionBounds,this.colorMode=e.colorMode,this.maxDebugDepth=e.maxDebugDepth,this.maxDebugDistance=e.maxDebugDistance,this.maxDebugError=e.maxDebugError,this.customColorCallback=e.customColorCallback,this.unlit=e.unlit,this.getDebugColor=(t,r)=>{r.setRGB(t,t,t)}}init(e){this.tiles=e;const t=e.group;this.boxGroup=new g,this.boxGroup.name="DebugTilesRenderer.boxGroup",t.add(this.boxGroup),this.boxGroup.updateMatrixWorld(),this.sphereGroup=new g,this.sphereGroup.name="DebugTilesRenderer.sphereGroup",t.add(this.sphereGroup),this.sphereGroup.updateMatrixWorld(),this.regionGroup=new g,this.regionGroup.name="DebugTilesRenderer.regionGroup",t.add(this.regionGroup),this.regionGroup.updateMatrixWorld(),this._onLoadTileSetCB=()=>{this._initExtremes()},this._onLoadModelCB=({scene:r,tile:s})=>{this._onLoadModel(r,s)},this._onDisposeModelCB=({tile:r})=>{this._onDisposeModel(r)},this._onUpdateAfterCB=()=>{this._onUpdateAfter()},this._onTileVisibilityChangeCB=({scene:r,tile:s,visible:o})=>{this._onTileVisibilityChange(s,o)},e.addEventListener("load-tile-set",this._onLoadTileSetCB),e.addEventListener("load-model",this._onLoadModelCB),e.addEventListener("dispose-model",this._onDisposeModelCB),e.addEventListener("update-after",this._onUpdateAfterCB),e.addEventListener("tile-visibility-change",this._onTileVisibilityChangeCB),this._initExtremes(),e.traverse(r=>{r.cached.scene&&this._onLoadModel(r.cached.scene,r)}),e.visibleTiles.forEach(r=>{this._onTileVisibilityChange(r,!0)})}getTileInformationFromActiveObject(e){let t=null;return this.tiles.activeTiles.forEach(s=>{if(t)return!0;const o=s.cached.scene;o&&o.traverse(d=>{d===e&&(t=s)})}),t?{distanceToCamera:t.__distanceFromCamera,geometricError:t.geometricError,screenSpaceError:t.__error,depth:t.__depth,isLeaf:t.__isLeaf}:null}_initExtremes(){if(!(this.tiles&&this.tiles.root))return;let e=-1,t=-1;this.tiles.traverse(null,(r,s,o)=>{e=Math.max(e,o),t=Math.max(t,r.geometricError)},!1),this.extremeDebugDepth=e,this.extremeDebugError=t}_onUpdateAfter(){const{tiles:e,colorMode:t}=this;if(!e.root)return;this.materialsNeedUpdate&&(e.forEachLoadedModel(a=>{this._updateMaterial(a)}),this.materialsNeedUpdate=!1),this.boxGroup.visible=this.displayBoxBounds,this.sphereGroup.visible=this.displaySphereBounds,this.regionGroup.visible=this.displayRegionBounds;let r=-1;this.maxDebugDepth===-1?r=this.extremeDebugDepth:r=this.maxDebugDepth;let s=-1;this.maxDebugError===-1?s=this.extremeDebugError:s=this.maxDebugError;let o=-1;this.maxDebugDistance===-1?(e.getBoundingSphere(L),o=L.radius):o=this.maxDebugDistance;const{errorTarget:d,visibleTiles:i}=e;let n;t===R&&(n=Array.from(i).sort((a,M)=>a[E]-M[E])),i.forEach(a=>{const M=a.cached.scene;let m,_,b;t===f&&(m=Math.random(),_=.5+Math.random()*.5,b=.375+Math.random()*.25),M.traverse(l=>{if(t===D&&(m=Math.random(),_=.5+Math.random()*.5,b=.375+Math.random()*.25),l.material)switch(t!==f&&delete l.material[x],t!==D&&delete l.material[C],t){case S:{const h=a.__depth/r;this.getDebugColor(h,l.material.color);break}case N:{const h=a.__depthFromRenderedParent/r;this.getDebugColor(h,l.material.color);break}case v:{const h=a.__error/d;h>1?l.material.color.setRGB(1,0,0):this.getDebugColor(h,l.material.color);break}case O:{const h=Math.min(a.geometricError/s,1);this.getDebugColor(h,l.material.color);break}case A:{const h=Math.min(a.__distanceFromCamera/o,1);this.getDebugColor(h,l.material.color);break}case P:{!a.children||a.children.length===0?this.getDebugColor(1,l.material.color):this.getDebugColor(0,l.material.color);break}case D:{l.material[C]||(l.material.color.setHSL(m,_,b),l.material[C]=!0);break}case f:{l.material[x]||(l.material.color.setHSL(m,_,b),l.material[x]=!0);break}case U:{this.customColorCallback?this.customColorCallback(a,l):console.warn("DebugTilesRenderer: customColorCallback not defined");break}case R:{const h=n.indexOf(a);this.getDebugColor(h/(n.length-1),l.material.color);break}}})})}_onTileVisibilityChange(e,t){this.displayParentBounds?j(e,r=>{r[p]==null&&(r[p]=0),t?r[p]++:r[p]>0&&r[p]--;const s=r===e&&t||this.displayParentBounds&&r[p]>0;this._updateBoundHelper(r,s)}):this._updateBoundHelper(e,t)}_createBoundHelper(e){const t=this.tiles,r=e.cached,{sphere:s,obb:o,region:d}=r.boundingVolume;if(o){const i=new g;i.name="DebugTilesRenderer.boxHelperGroup",i.matrix.copy(o.transform),i.matrixAutoUpdate=!1;const n=new k(o.box,G(e.__depth));n.raycast=B,i.add(n),r.boxHelperGroup=i,t.visibleTiles.has(e)&&this.displayBoxBounds&&(this.boxGroup.add(i),i.updateMatrixWorld(!0))}if(s){const i=new W(s,G(e.__depth));i.raycast=B,r.sphereHelper=i,t.visibleTiles.has(e)&&this.displaySphereBounds&&(this.sphereGroup.add(i),i.updateMatrixWorld(!0))}if(d){const i=new z(d,G(e.__depth));i.raycast=B;const n=new T;d.getBoundingSphere(n),i.position.copy(n.center),n.center.multiplyScalar(-1),i.geometry.translate(...n.center),r.regionHelper=i,t.visibleTiles.has(e)&&this.displayRegionBounds&&(this.regionGroup.add(i),i.updateMatrixWorld(!0))}}_updateHelperMaterial(e,t){e.__visible||!this.displayParentBounds?t.opacity=1:t.opacity=.2;const r=t.transparent;t.transparent=t.opacity<1,t.transparent!==r&&(t.needsUpdate=!0)}_updateBoundHelper(e,t){const r=e.cached;if(!r)return;const s=this.sphereGroup,o=this.boxGroup,d=this.regionGroup;t&&r.boxHelperGroup==null&&r.sphereHelper==null&&r.regionHelper==null&&this._createBoundHelper(e);const i=r.boxHelperGroup,n=r.sphereHelper,a=r.regionHelper;t?(i&&(o.add(i),i.updateMatrixWorld(!0),this._updateHelperMaterial(e,i.children[0].material)),n&&(s.add(n),n.updateMatrixWorld(!0),this._updateHelperMaterial(e,n.material)),a&&(d.add(a),a.updateMatrixWorld(!0),this._updateHelperMaterial(e,a.material))):(i&&o.remove(i),n&&s.remove(n),a&&d.remove(a))}_updateMaterial(e){const{colorMode:t,unlit:r}=this;e.traverse(s=>{if(!s.material)return;const o=s.material,d=s[H];if(o!==d&&o.dispose(),t!==u||r){if(s.isPoints){const i=new w;i.size=d.size,i.sizeAttenuation=d.sizeAttenuation,s.material=i}else r?s.material=new I:(s.material=new V,s.material.flatShading=!0);t===u&&(s.material.map=d.map,s.material.color.set(d.color))}else s.material=d})}_onLoadModel(e,t){t[E]=performance.now(),e.traverse(r=>{const s=r.material;s&&(r[H]=s)}),this._updateMaterial(e)}_onDisposeModel(e){const t=e.cached;t.boxHelperGroup&&(t.boxHelperGroup.children[0].geometry.dispose(),delete t.boxHelperGroup),t.sphereHelper&&(t.sphereHelper.geometry.dispose(),delete t.sphereHelper),t.regionHelper&&(t.regionHelper.geometry.dispose(),delete t.regionHelper)}dispose(){var t,r,s;const e=this.tiles;e.removeEventListener("load-tile-set",this._onLoadTileSetCB),e.removeEventListener("load-model",this._onLoadModelCB),e.removeEventListener("dispose-model",this._onDisposeModelCB),e.removeEventListener("update-after",this._onUpdateAfterCB),e.removeEventListener("tile-visibility-change",this._onTileVisibilityChangeCB),this.colorMode=u,this.unlit=!1,e.forEachLoadedModel(o=>{this._updateMaterial(o)}),e.traverse(o=>{this._onDisposeModel(o)}),(t=this.boxGroup)==null||t.removeFromParent(),(r=this.sphereGroup)==null||r.removeFromParent(),(s=this.regionGroup)==null||s.removeFromParent()}}export{X as D};
//# sourceMappingURL=DebugTilesPlugin-BHDfPO8s.js.map
