{"version":3,"file":"ImageFormatPlugin-Cwk6ueKg.js","sources":["../../../src/three/plugins/images/ImageFormatPlugin.js"],"sourcesContent":["import { Mesh, MeshBasicMaterial, PlaneGeometry, MathUtils, Vector2 } from 'three';\n\nconst _uv = /* @__PURE__ */ new Vector2();\n\nexport const TILE_X = Symbol( 'TILE_X' );\nexport const TILE_Y = Symbol( 'TILE_Y' );\nexport const TILE_LEVEL = Symbol( 'TILE_LEVEL' );\n\n// Base class for supporting tiled images with a consistent size / resolution per tile\nexport class ImageFormatPlugin {\n\n\tget tiling() {\n\n\t\treturn this.imageSource.tiling;\n\n\t}\n\n\tconstructor( options = {} ) {\n\n\t\tconst {\n\t\t\tpixelSize = null,\n\t\t\tcenter = false,\n\t\t\tuseRecommendedSettings = true,\n\t\t\timageSource = null,\n\t\t} = options;\n\n\t\tthis.priority = - 10;\n\t\tthis.tiles = null;\n\n\t\t// tiling scheme\n\t\tthis.imageSource = imageSource;\n\n\t\t// options\n\t\tthis.pixelSize = pixelSize;\n\t\tthis.center = center;\n\t\tthis.useRecommendedSettings = useRecommendedSettings;\n\n\t\tif ( pixelSize !== null ) {\n\n\t\t\tconsole.warn( 'ImageFormatPlugin: \"pixelSize\" has been deprecated in favor of scaling the tiles root.' );\n\n\t\t}\n\n\t}\n\n\t// Plugin functions\n\tinit( tiles ) {\n\n\t\tif ( this.useRecommendedSettings ) {\n\n\t\t\ttiles.errorTarget = 1;\n\t\t\t// TODO: apply skip traversal settings here once supported, as well, for faster loading\n\n\t\t}\n\n\t\tthis.tiles = tiles;\n\n\t\tthis.imageSource.fetchOptions = tiles.fetchOptions;\n\t\tthis.imageSource.fetchData = ( url, options ) => {\n\n\t\t\ttiles.invokeAllPlugins( plugin => url = plugin.preprocessURL ? plugin.preprocessURL( url, null ) : url );\n\t\t\treturn tiles.invokeOnePlugin( plugin => plugin !== this && plugin.fetchData && plugin.fetchData( url, options ) );\n\n\t\t};\n\n\t}\n\n\tasync loadRootTileSet() {\n\n\t\tconst { tiles, imageSource } = this;\n\t\timageSource.url = imageSource.url || tiles.rootURL;\n\t\ttiles.invokeAllPlugins( plugin => imageSource.url = plugin.preprocessURL ? plugin.preprocessURL( imageSource.url, null ) : imageSource.url );\n\t\tawait imageSource.init();\n\n\t\ttiles.rootURL = imageSource.url;\n\t\treturn this.getTileset( imageSource.url );\n\n\t}\n\n\tasync parseToMesh( buffer, tile, extension, uri, abortSignal ) {\n\n\t\tif ( abortSignal.aborted ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Construct texture\n\t\tconst { imageSource } = this;\n\t\tconst tx = tile[ TILE_X ];\n\t\tconst ty = tile[ TILE_Y ];\n\t\tconst level = tile[ TILE_LEVEL ];\n\t\tconst texture = await imageSource.processBufferToTexture( buffer );\n\n\t\t// clean up the texture if it's not going to be used.\n\t\tif ( abortSignal.aborted ) {\n\n\t\t\ttexture.dispose();\n\t\t\ttexture.image.close();\n\t\t\treturn null;\n\n\t\t}\n\n\t\timageSource.setData( tx, ty, level, texture );\n\n\t\t// Construct mesh\n\t\tlet sx = 1, sy = 1;\n\t\tlet x = 0, y = 0, z = 0;\n\n\t\tconst boundingBox = tile.boundingVolume.box;\n\t\tif ( boundingBox ) {\n\n\t\t\t[ x, y, z ] = boundingBox;\n\t\t\tsx = boundingBox[ 3 ];\n\t\t\tsy = boundingBox[ 7 ];\n\n\t\t}\n\n\t\t// adjust the geometry transform itself rather than the mesh because it reduces the artifact errors\n\t\t// when using batched mesh rendering.\n\t\tconst geometry = new PlaneGeometry( 2 * sx, 2 * sy );\n\t\tconst mesh = new Mesh( geometry, new MeshBasicMaterial( { map: texture, transparent: true } ) );\n\t\tmesh.position.set( x, y, z );\n\n\t\tconst tiling = imageSource.tiling;\n\t\tconst uvRange = tiling.getTileContentUVBounds( tx, ty, level );\n\t\tconst { uv } = geometry.attributes;\n\t\tfor ( let i = 0; i < uv.count; i ++ ) {\n\n\t\t\t_uv.fromBufferAttribute( uv, i );\n\t\t\t_uv.x = MathUtils.mapLinear( _uv.x, 0, 1, uvRange[ 0 ], uvRange[ 2 ] );\n\t\t\t_uv.y = MathUtils.mapLinear( _uv.y, 0, 1, uvRange[ 1 ], uvRange[ 3 ] );\n\t\t\tuv.setXY( i, _uv.x, _uv.y );\n\n\t\t}\n\n\t\treturn mesh;\n\n\t}\n\n\tpreprocessNode( tile ) {\n\n\t\t// generate children\n\t\tconst { tiling } = this;\n\t\tconst maxLevel = tiling.maxLevel;\n\t\tconst level = tile[ TILE_LEVEL ];\n\t\tif ( level < maxLevel && tile.parent !== null ) {\n\n\t\t\tthis.expandChildren( tile );\n\n\t\t}\n\n\t}\n\n\tdisposeTile( tile ) {\n\n\t\tconst tx = tile[ TILE_X ];\n\t\tconst ty = tile[ TILE_Y ];\n\t\tconst level = tile[ TILE_LEVEL ];\n\t\tconst { imageSource } = this;\n\t\tif ( imageSource.has( tx, ty, level ) ) {\n\n\t\t\t// only dispose of the image data if it hasn't been aborted\n\t\t\timageSource.release( tx, ty, level );\n\n\t\t}\n\n\t}\n\n\t// Local functions\n\tgetTileset( baseUrl ) {\n\n\t\tconst { tiling, tiles } = this;\n\t\tconst minLevel = tiling.minLevel;\n\t\tconst { tileCountX, tileCountY } = tiling.getLevel( minLevel );\n\n\t\t// generate all children for the root\n\t\tconst children = [];\n\t\tfor ( let x = 0; x < tileCountX; x ++ ) {\n\n\t\t\tfor ( let y = 0; y < tileCountY; y ++ ) {\n\n\t\t\t\tconst child = this.createChild( x, y, minLevel );\n\t\t\t\tif ( child !== null ) {\n\n\t\t\t\t\tchildren.push( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate tile set\n\t\tconst tileset = {\n\t\t\tasset: {\n\t\t\t\tversion: '1.1'\n\t\t\t},\n\t\t\tgeometricError: 1e5,\n\t\t\troot: {\n\t\t\t\trefine: 'REPLACE',\n\t\t\t\tgeometricError: 1e5,\n\t\t\t\tboundingVolume: this.createBoundingVolume( 0, 0, - 1 ),\n\t\t\t\tchildren,\n\n\t\t\t\t[ TILE_LEVEL ]: - 1,\n\t\t\t\t[ TILE_X ]: 0,\n\t\t\t\t[ TILE_Y ]: 0,\n\t\t\t}\n\t\t};\n\n\t\ttiles.preprocessTileSet( tileset, baseUrl );\n\n\t\treturn tileset;\n\n\t}\n\n\tgetUrl( x, y, level ) {\n\n\t\treturn this.imageSource.getUrl( x, y, level );\n\n\t}\n\n\tcreateBoundingVolume( x, y, level ) {\n\n\t\tconst { center, pixelSize, tiling } = this;\n\t\tconst { pixelWidth, pixelHeight } = tiling.getLevel( tiling.maxLevel );\n\n\t\t// calculate the world space bounds position from the range\n\t\tconst [ minX, minY, maxX, maxY ] = level === - 1 ? tiling.getContentBounds( true ) : tiling.getTileBounds( x, y, level, true );\n\t\tlet extentsX = ( maxX - minX ) / 2;\n\t\tlet extentsY = ( maxY - minY ) / 2;\n\t\tlet centerX = minX + extentsX;\n\t\tlet centerY = minY + extentsY;\n\t\tif ( center ) {\n\n\t\t\tcenterX -= 0.5;\n\t\t\tcenterY -= 0.5;\n\n\t\t}\n\n\t\t// scale the fields\n\t\tif ( pixelSize ) {\n\n\t\t\tcenterX *= pixelWidth * pixelSize;\n\t\t\textentsX *= pixelWidth * pixelSize;\n\n\t\t\tcenterY *= pixelHeight * pixelSize;\n\t\t\textentsY *= pixelHeight * pixelSize;\n\n\t\t} else {\n\n\t\t\tcenterX *= tiling.aspectRatio;\n\t\t\textentsX *= tiling.aspectRatio;\n\n\t\t}\n\n\n\t\t// return bounding box\n\t\treturn {\n\t\t\tbox: [\n\t\t\t\t// center\n\t\t\t\tcenterX, centerY, 0,\n\n\t\t\t\t// x, y, z half vectors\n\t\t\t\textentsX, 0.0, 0.0,\n\t\t\t\t0.0, extentsY, 0.0,\n\t\t\t\t0.0, 0.0, 0.0,\n\t\t\t],\n\t\t};\n\n\t}\n\n\tcreateChild( x, y, level ) {\n\n\t\tconst { pixelSize, tiling } = this;\n\t\tif ( ! tiling.getTileExists( x, y, level ) ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// the scale ration of the image at this level\n\t\tconst { pixelWidth, pixelHeight } = tiling.getLevel( tiling.maxLevel );\n\t\tconst { pixelWidth: levelWidth, pixelHeight: levelHeight } = tiling.getLevel( level );\n\t\tlet geometricError = Math.max( 1 / levelWidth, 1 / levelHeight );\n\t\tif ( pixelSize ) {\n\n\t\t\tgeometricError *= pixelSize * Math.max( pixelWidth, pixelHeight );\n\n\t\t}\n\n\t\t// Generate the node\n\t\treturn {\n\t\t\trefine: 'REPLACE',\n\t\t\tgeometricError: geometricError,\n\t\t\tboundingVolume: this.createBoundingVolume( x, y, level ),\n\t\t\tcontent: {\n\t\t\t\turi: this.getUrl( x, y, level ),\n\t\t\t},\n\t\t\tchildren: [],\n\n\t\t\t// save the tile params so we can expand later\n\t\t\t[ TILE_X ]: x,\n\t\t\t[ TILE_Y ]: y,\n\t\t\t[ TILE_LEVEL ]: level,\n\t\t};\n\n\t}\n\n\texpandChildren( tile ) {\n\n\t\tconst level = tile[ TILE_LEVEL ];\n\t\tconst x = tile[ TILE_X ];\n\t\tconst y = tile[ TILE_Y ];\n\n\t\tfor ( let cx = 0; cx < 2; cx ++ ) {\n\n\t\t\tfor ( let cy = 0; cy < 2; cy ++ ) {\n\n\t\t\t\tconst child = this.createChild( 2 * x + cx, 2 * y + cy, level + 1 );\n\t\t\t\tif ( child ) {\n\n\t\t\t\t\ttile.children.push( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n"],"names":["_uv","Vector2","TILE_X","TILE_Y","TILE_LEVEL","ImageFormatPlugin","options","pixelSize","center","useRecommendedSettings","imageSource","tiles","url","plugin","buffer","tile","extension","uri","abortSignal","tx","ty","level","texture","sx","sy","x","y","z","boundingBox","geometry","PlaneGeometry","mesh","Mesh","MeshBasicMaterial","uvRange","uv","i","MathUtils","tiling","maxLevel","baseUrl","minLevel","tileCountX","tileCountY","children","child","tileset","pixelWidth","pixelHeight","minX","minY","maxX","maxY","extentsX","extentsY","centerX","centerY","levelWidth","levelHeight","geometricError","cx","cy"],"mappings":"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"}